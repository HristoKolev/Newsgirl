<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	
	xmlns:georss="http://www.georss.org/georss"
	xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	>

<channel>
	<title>Stack Overflow Blog</title>
	<atom:link href="https://stackoverflow.blog/feed/" rel="self" type="application/rss+xml" />
	<link>https://stackoverflow.blog</link>
	<description>Essays, opinions, and advice on the act of computer programming from Stack Overflow.</description>
	<lastBuildDate>Wed, 04 Mar 2020 16:17:26 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	

<image>
	<url>https://stackoverflow.blog/wp-content/uploads/2017/03/cropped-SO_Logo_glyph-use-this-one-smaller-32x32.jpg</url>
	<title>Stack Overflow Blog</title>
	<link>https://stackoverflow.blog</link>
	<width>32</width>
	<height>32</height>
</image> 
<site xmlns="com-wordpress:feed-additions:1">162153688</site>	<item>
		<title>“You need someone to show you how to teach yourself.”</title>
		<link>https://stackoverflow.blog/2020/03/04/you-need-someone-to-show-you-how-to-teach-yourself/</link>
				<comments>https://stackoverflow.blog/2020/03/04/you-need-someone-to-show-you-how-to-teach-yourself/#respond</comments>
				<pubDate>Wed, 04 Mar 2020 16:08:59 +0000</pubDate>
		<dc:creator><![CDATA[Medi Madelen Gwosdz]]></dc:creator>
				<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[bootcamp]]></category>
		<category><![CDATA[first job]]></category>
		<category><![CDATA[stackoverflow]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15269</guid>
				<description><![CDATA[<p>We spoke to Alexandre Plennevaux, Head of Pedagogy at BeCode, the coding school on a mission to close the skill gap by providing accessible, seven-month inclusive bootcamps across Belgium and recruiting students through illegal streaming sites.&#160; You run an intense, seven month-long, full-time bootcamp. Students need to be highly motivated. Why are you advertising on…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/03/04/you-need-someone-to-show-you-how-to-teach-yourself/">“You need someone to show you how to teach yourself.”</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p><em>We spoke to <a href="https://www.linkedin.com/in/pixeline/">Alexandre Plennevaux</a>, Head of Pedagogy at <a href="https://stackoverflow.com/jobs/companies/becode-vzw">BeCode</a>, the coding school on a mission to close the skill gap by providing accessible, seven-month inclusive bootcamps across Belgium and recruiting students through illegal streaming sites.&nbsp;<br></em></p>



<div class="wp-block-image is-style-circle-mask"><figure class="aligncenter is-resized"><img src="https://lh3.googleusercontent.com/86g8b3hL1bLbS9EpiIwAqNsida1jXxUW0-y741qRIgV5X7kSXSXituZHviVmJbsOtgw6UGeAWaAhnQzucUs8BbL5LHIPeRCn3wObJpntYXDl5wSpvovpGLZy7kRN778anez7iL5m" alt="" width="337" height="449"/><figcaption>Alexandre Plennevaux, Head of Pedagogy at BeCode.</figcaption></figure></div>



<p><strong>You run an intense, seven month-long, full-time bootcamp. Students need to be highly motivated. Why are you advertising on ‘time-wasting’ hubs like movie streaming sites?</strong></p>



<p>We are looking specifically for the people who have the skills to be coders but have never considered it, people who have fallen through the cracks of the system.</p>



<p>This includes school drop-outs, unemployed people, or people stuck in low-income jobs, refugees, people with challenges at home, or with a handicap. They are usually not reachable using traditional advertising. So we advertise on sites where they might hang out if they have no job, no money, and are bored. We have to get creative to reach this audience. Running banner ads on streaming sites has proven to be successful.<br></p>



<blockquote class="wp-block-quote"><p>“It motivates me every day. But there is also a sadness to seeing all these talented people succeeding with us. It just proves they have been let down by the system in their previous lives.”&nbsp;</p></blockquote>



<p><strong>Your communications are aimed at a young audience as well. I saw a poster targeting people who “hate math.” Is that targeting the right people?</strong></p>



<p>We can see that it is. People who hate math don’t always lack the intelligence or aptitude for it. They might have been failed by the system. Not having good grades can be because of a million reasons. Same goes for being a school drop-out. Many times education has to do with stigma, people might write themselves off or self-exclude, because nobody in their family finished school, nobody spent the time unlocking their skills.&nbsp;</p>



<p>For example, we had this young guy who was 22 when he joined us and had been working as a removal man since dropping out of school at the age of 15. We were going through the typical cycle every programmer faces multiple times a day: from “This is impossible” to “I am the best programmer in the world.”&nbsp;</p>



<p>For him, however, it was the first time he experienced this. As he came in, you could see he was already writing himself off. So to not lose face, he kept saying, “PHP, what is this? This is for intellectuals. I am no intellectual!”&nbsp;</p>



<p>Guess what? He ended up finishing the exercise first in the group, and you could see he had grown an inch: “Turns out I am an intellectual!” We provide a space for him to let his guard down and try something new. To help someone who spent seven years moving boxes, seeing him learn that about himself was a gratifying moment as a coach.<br></p>



<blockquote class="wp-block-quote"><p>“We don’t teach developers; we provide a safe environment for people to discover they already have everything they need to learn to code.”<br></p></blockquote>



<p><strong>Is that what your class does, create a place to fail?</strong></p>



<p>It’s how you learn to code from the start. Trial and error. Looking for the best solution without fear of failure, but by embracing it. If our students learn to keep pushing, to move a project across the finish line, they have all the skills to take on a project in a professional setting and continue their growth inside the company.&nbsp;<br></p>



<p><strong>How much do people pay to attend your classes?</strong></p>



<p>It is entirely free! That is the whole point. We are supported by industry donors and public funding. In order to be truly accessible, the entire program is free.</p>



<p><strong>You mentioned you train students who might not be used to such an intense learning environment. Can everyone be turned into a success story?</strong></p>



<p>With our alumni, we aim for an employment rate of 80%, for students to land a job after six months or take on a more “classical” training in IT: in both cases, it means that reskilling in IT was successful. Of course, a tricky part of the job is that we sometimes have to ask people to leave because they are disturbing the learning environment for others.&nbsp;</p>



<p>Overall, people are adjusting super quickly. That’s the beauty of programming. The one thing they have to learn is: fail and fail again. So they can do this on day one.</p>



<p><strong>What qualifications do you look for in a trainer?</strong></p>



<p>Our bootcamp is all about accessibility. Not only do we believe that there are a lot of dormant software developers out there, but we also think that the best way to become a trainer is to start training people. All the better if you have had that experience in your past. If you have completed a few coding projects in a professional setting and would like to mentor people into becoming coders, we will support people to set them up as trainers.</p>



<p><strong>What do you teach in seven months?</strong></p>



<p>Our first module is learning not to be scared of the terminal. Then follows markdown, Git, front end, and later back-end development. The last weeks of the training switch to an “outboarding” phase where the students focus on learning by teaching, working on projects (personal or client), and finding an internship or job.</p>



<p><strong>You also work with companies to get people into the workplace, tell us more about that.</strong></p>



<p> Since it is our goal to keep classes 100% free, we rely on sponsors. There is some government funding now, but the initial funding came from private investors. In Belgium, 70% of employers blame inadequate training for the shortfall in skilled workers. So some of them were ready to put their money where their mouth is.&nbsp;</p>



<p>We then help the trainee find an internship at the end of the program. And we do make sure we give them career advice as well. As part of the curriculum, they need to give a presentation, lead a session, become trainers themselves, if only for a day. So we make sure everyone gets a good picture taken in this scenario. And then we promote them to our network on LinkedIn: “Check out student X giving a great talk today.” So they get a real boost to their personal brand.</p>



<p><strong>Do you introduce people to Stack Overflow as part of your course?</strong><br>No need to. Students will google a problem and end up on a Stack Overflow site anyway. We strongly encourage students to become independent problem solvers. We do mention to pump up their profile on Stack Overflow and set their job search status as “active” on our list of tips to get a job.<br></p>



<p><em>Learn how BeCode found trainers through Stack Overflow Talent in the <a rel="noreferrer noopener" aria-label="Case Study. (opens in a new tab)" href="https://info.stackoverflowsolutions.com/Talent_en_casestudy-becode.html?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=talent-blog&amp;utm_content=becodeinterview" target="_blank">Case Study.</a></em></p>



<figure class="wp-block-image size-large"><a href="https://info.stackoverflowsolutions.com/Talent-myfirst-employer-branding-campaign.html?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=talent-blog&amp;utm_content=becodecasestudybootcamp" target="_blank" rel="noreferrer noopener"><img src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/TechRecruiting2019-Blog-CTA.png" alt="" class="wp-image-15048" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/TechRecruiting2019-Blog-CTA.png 716w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/TechRecruiting2019-Blog-CTA-300x118.png 300w " sizes="(max-width: 716px) 100vw, 716px" /></a></figure>



<p></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/03/04/you-need-someone-to-show-you-how-to-teach-yourself/">“You need someone to show you how to teach yourself.”</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/03/04/you-need-someone-to-show-you-how-to-teach-yourself/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15269</post-id>	</item>
		<item>
		<title>Critical tools united for a better developer workflow</title>
		<link>https://stackoverflow.blog/2020/03/03/critical-tools-united-for-a-better-developer-workflow/</link>
				<comments>https://stackoverflow.blog/2020/03/03/critical-tools-united-for-a-better-developer-workflow/#comments</comments>
				<pubDate>Tue, 03 Mar 2020 15:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Teresa Dietrich]]></dc:creator>
				<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Company]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[announcements]]></category>
		<category><![CDATA[integrations]]></category>
		<category><![CDATA[jira]]></category>
		<category><![CDATA[stack overflow for teams]]></category>
		<category><![CDATA[stackoverflow]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15242</guid>
				<description><![CDATA[<p>By creating a centralized knowledge management ecosystem, companies are able to build a natural and sustainable culture of transparency, encouraging collaboration by improving access to information.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/03/03/critical-tools-united-for-a-better-developer-workflow/">Critical tools united for a better developer workflow</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>Thousands of you, developers and technologists around the world, work at organizations that use <a href="https://stackoverflow.com/teams">Stack Overflow for Teams</a> to collaborate, harness knowledge, and share information. (And if you don’t, why not? You can try it for free!) Our Teams product was built in response to companies like Microsoft, Zapier, and Bloomberg asking for a way to give their technical teams a platform to share information that doesn’t get lost in email, chat threads, or wikis.<br></p>



<p>When I joined Stack Overflow earlier this year, I joined an organization that is passionate about streamlining and improving the developer workflow. Hence the focus on bringing <a href="https://stackoverflow.com/teams/integrations?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=integrations-launch&amp;utm_content=integrations-blog">key integrations to Stack Overflow for Teams</a> like Okta, Microsoft Teams, and Slack. Today, I’m happy to announce that we’re integrating Teams with two more critical tools in the modern workflow: Jira and GitHub.<br></p>



<p>Stack Overflow for Teams is the central source of truth for tech knowledge within an organization. By integrating with key tools, teams are able to find answers regardless of where the information lives.<br></p>



<p>By creating a centralized knowledge management ecosystem, companies are able to build a natural and sustainable culture of transparency, encouraging collaboration by improving access to information. GitHub and Jira just made sense to bring on board as we work to help developers avoid context switching and get stuff done.<br></p>



<p>We look forward to enhancing our current integrations and providing more ways for teams to collaborate, share knowledge, and find information when it’s needed most. If you haven’t already, check out Stack Overflow for Teams and our integrations with Microsoft Teams, Jira, Slack, Okta, and GitHub.<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/03/03/critical-tools-united-for-a-better-developer-workflow/">Critical tools united for a better developer workflow</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/03/03/critical-tools-united-for-a-better-developer-workflow/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15242</post-id>	</item>
		<item>
		<title>Podcast: Don&#8217;t Miss Your Stop</title>
		<link>https://stackoverflow.blog/2020/03/03/podcast-chinedu-echeruo-hopstop-love-and-magic/</link>
				<comments>https://stackoverflow.blog/2020/03/03/podcast-chinedu-echeruo-hopstop-love-and-magic/#comments</comments>
				<pubDate>Tue, 03 Mar 2020 05:25:00 +0000</pubDate>
		<dc:creator><![CDATA[Ben Popper]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[The Stack Overflow Podcast]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[chinedu echeruo]]></category>
		<category><![CDATA[elance]]></category>
		<category><![CDATA[hopstop]]></category>
		<category><![CDATA[love and magic]]></category>
		<category><![CDATA[stackoverflow]]></category>
		<category><![CDATA[startup school of alchemy]]></category>
		<category><![CDATA[the stack overflow podcast]]></category>
		<category><![CDATA[upwork]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15252</guid>
				<description><![CDATA[<p>A Nigerian financial analyst with a habit of getting lost connects remotely with a Siberian app developer. Together, they would go on to build a mapping app worth $1 billion, all without ever meeting face to face. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/03/03/podcast-chinedu-echeruo-hopstop-love-and-magic/">Podcast: Don&#8217;t Miss Your Stop</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<iframe height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/441eb720-8a5f-4bfd-a6c9-d23c15bafcfd?dark=false"></iframe>



<p>This week we chat with Chinedu Echeruo, who built the popular transportation app, HopStop. Echeruo had no expertise in computer science when he set out to build the service, but he was a whiz at Excel. With a little help from Upwork and some paper maps, he built a business that was eventually <a href="https://techcrunch.com/2013/07/19/apple-reportedly-acquires-hopstop/">acquired by Apple</a>. </p>



<p>Echeruo&#8217;s new venture is called<a href="https://loveandmagic.company/"> Love and Magic</a>, a startup studio that helps companies of all sizes maximize their ability to innovate.&nbsp;</p>



<p>For anyone that has an idea they have been hoping to turn into a startup, Echeruo and his collaborators just introduced the<a href="https://www.startupschoolofalchemy.com/courses/practical-steps-to-transform-your-idea-into-a-startup"> Startup School of Alchemy</a>. It&#8217;s being taught at WeWork and Princeton University. It offers a six-week curriculum designed to help aspiring entrepreneurs find product-market fit. Apply with the code &#8220;stackoverflow&#8221; and you get $1000 off the course, a 40% discount.</p>



<p>Echeruo says his time working in finance and with Microsoft Excel was what gave him the ability to think of how data from maps could be optimized by an algorithm and built into a useful mobile app.&nbsp;</p>



<p>For those who don&#8217;t know, our co-founder and Chairman, Joel Spolsky, was part of the team at Microsoft that built Excel. Here is legendary 2015 talk,<a href="https://www.youtube.com/watch?v=0nbkaYsR94c"> You Suck at Excel</a>, where he organizes a spreadsheet to keep track of what he pays his Pokemon, ahem, I mean, uh, employees.&nbsp;<br></p>



<p>You can take a deeper dive into the backstory of how Chinedu built HopStop below.&nbsp;<br></p>



<p><em>I&#8217;ve always had difficulty with directions. When I grew up in Nigeria, I remember getting lost in my own house. It wasn’t like it was a mansion, it was a four-bedroom house.&nbsp;</em></p>



<p><em>So you can imagine how I felt when I got to NYC and had to get around with the subway and bus system! I remember walking up once to one of those blown up maps in the subway station. My nose was a feet away from the dust laden map. The subway lines looked like tangled noodles. Complexity galore!&nbsp;</em></p>



<p><em>New Yorkers used to walk around with these pocket guides—Hagstrom maps. I was going on a date in the Lower East Side. It doesn’t have the grid like the rest of the city. I got lost and was very late getting to the bar. I can&#8217;t remember how the date went but I remember what I did first thing next morning. I walked over to the subway station, grabbed a subway MAP and laid it on the floor and tried to figure it out. There’s driving directions. But there weren’t subway directions. So I was solving my own problems.&nbsp;</em></p>



<p><em>I was looking for the complete directions—leave your house, turn left, go into this particular entrance, get on this train, get off at this station, use this exit. Because I was, in a lot of ways, the ultimate user, we ended up building a product that solved the complete problem—get me from where I am now to where I need to be.&nbsp;</em></p>



<p><em>I was non-technical, I worked for a hedge fund. I may have been thinking algorithmically, I knew that this was computationally possible. But I didn’t know how to make it a reality. In conceiving the problem, I threw all the data into spreadsheets. I interned at this company when I was in college, where I learned about spreadsheets. I found the work very tedious, but I learned how to think about data, to think in tables. It allowed me to conceptualize complexity.&nbsp;</em></p>



<p><em>To conceptualize the first subway data as a spreadsheet, I started by staring at the subway map laid on the wood floor of my apartment. The most obvious features were colors, lines, and stops. So those are the tables I typed into Excel first. Then I realized the lines also represented two train directions so I redid the spreadsheet. Then I realized the stops served multiple subway lines, so I redid the spreadsheet. Then I realized some of the stops would only be active during certain periods, so I redid the spreadsheet. We kept on learning and adjusting. It took us a long time before we had a data model that robustly described NYC&#8217;s subway system. We even figured out how to automatically account for the frequent weekend NYC subway diversions.</em><br></p>



<p><em>To build the first version of the app, I went to eLance, described to these computer scientists the data set in Excel, routes, stops, exits, entrances, and I sent it in. This developer in Siberia, Russia, emailed me, came up with a solution. But he turned out to be a complete genius, he built the core of the first version of Hopstop. Here I was, a Nigerian, sitting in my apartment using messenger, email, on a laptop. And I never met Alex for four years. We built Hopstop over four years without ever meeting each other.</em><br></p>



<p><em>We ran very lean. Alex did all the coding. I did the subway data and user experience. I&#8217;d have to ride to different subway stations to note each subway entrance and exit, etc. When we added the bus system, Rajeev and his data team in India helped input the bus stops and schedules. And four years later, we were purchased by Apple, so quite the ride.</em><br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/03/03/podcast-chinedu-echeruo-hopstop-love-and-magic/">Podcast: Don&#8217;t Miss Your Stop</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/03/03/podcast-chinedu-echeruo-hopstop-love-and-magic/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15252</post-id>	</item>
		<item>
		<title>Best practices for REST API design</title>
		<link>https://stackoverflow.blog/2020/03/02/best-practices-for-rest-api-design/</link>
				<comments>https://stackoverflow.blog/2020/03/02/best-practices-for-rest-api-design/#comments</comments>
				<pubDate>Mon, 02 Mar 2020 14:55:01 +0000</pubDate>
		<dc:creator><![CDATA[John Au-Yeung]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[express]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[rest api]]></category>
		<category><![CDATA[stackoverflow]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15247</guid>
				<description><![CDATA[<p>In this article, we'll look at how to design REST APIs to be easy to understand for anyone consuming them, future-proof, and secure and fast since they serve data to clients that may be confidential.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/03/02/best-practices-for-rest-api-design/">Best practices for REST API design</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>REST APIs are one of the most common kinds of web services available today. They allow various clients including browser apps to communicate with a server via the REST API.<br></p>



<p>Therefore, it&#8217;s very important to design REST APIs properly so that we won&#8217;t run into problems down the road. We have to take into account security, performance, and ease of use for API consumers.&nbsp;<br></p>



<p>Otherwise, we create problems for clients that use our APIs, which isn’t pleasant and detracts people from using our API. If we don’t follow commonly accepted conventions, then we confuse the maintainers of the API and the clients that use them since it’s different from what everyone expects.<br></p>



<p>In this article, we&#8217;ll look at how to design REST APIs to be easy to understand for anyone consuming them, future-proof, and secure and fast since they serve data to clients that may be confidential.<br></p>



<p>Because there are multiple ways a networked application can break, we should make sure that any REST APIs handle errors gracefully using standard HTTP codes that helps consumers deal with the problem.<br></p>



<h2>Accept and respond with JSON</h2>



<p>REST APIs should accept JSON for request payload and also send responses to JSON. JSON is the standard for transferring data. Almost every networked technology can use it: JavaScript has built-in methods to encode and decode JSON either through the Fetch API or another HTTP client. Server-side technologies have libraries that can decode JSON without doing much work.<br></p>



<p>There are other ways to transfer data. XML isn’t widely supported by frameworks without transforming the data ourselves to something that can be used, and that’s usually JSON. We can’t manipulate this data as easily on the client-side, especially in browsers. It ends up being a lot of extra work just to do normal data transfer.<br></p>



<p>Form data is good for sending data, especially if we want to send files. But for text and numbers, we don’t need form data to transfer those since—with most frameworks—we can transfer JSON by just getting the data from it directly on the client side. It’s by far the most straightforward to do so.<br></p>



<p>To make sure that when our REST API app responds with JSON that clients interpret it as such, we should set <code>Content-Type</code> in the response header to <code>application/json</code> after the request is made. Many server-side app frameworks set the response header automatically. Some HTTP clients look at the <code>Content-Type</code> response header and parse the data according to that format.<br></p>



<p>The only exception is if we’re trying to send and receive files between client and server. Then we need to handle file responses and send form data from client to server. But that is a topic for another time.&nbsp;<br></p>



<p>We should also make sure that our endpoints return JSON as a response. Many server-side frameworks have this as a built-in feature.<br></p>



<p>Let’s take a look at an example API that accepts JSON payloads. This example will use the <a href="https://expressjs.com/">Express</a> back end framework for Node.js. We can use the <a href="https://www.npmjs.com/package/body-parser"><code>body-parser</code> middleware</a> to parse the JSON request body, and then we can call the <code>res.json</code> method with the object that we want to return as the JSON response as follows:<br></p>



<pre class="wp-block-preformatted">const express = require('express');
const bodyParser = require('body-parser');

const app = express();

app.use(bodyParser.json());

app.post('/', (req, res) =&gt; {
&nbsp;&nbsp;res.json(req.body);
});

app.listen(3000, () =&gt; console.log('server started'));
</pre>



<p><code>bodyParser.json()</code> parses the JSON request body string into a JavaScript object and then assigns it to the <code>req.body</code> object.<br></p>



<p>Set the <code>Content-Type</code> header in the response to <code>application/json; charset=utf-8</code> without any changes. The method above applies to most other back end frameworks.</p>



<figure class="wp-block-image size-large"><a href="https://stackoverflow.com/teams?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=extended-trial&amp;utm_content=blog-placement"><img src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x-1200x148.png" alt="" class="wp-image-15005" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x-1200x148.png 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x-300x37.png 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x-768x95.png 768w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x.png 1456w " sizes="(max-width: 1200px) 100vw, 1200px" /></a></figure>



<h2>Use nouns instead of verbs in endpoint paths</h2>



<p>We shouldn&#8217;t use verbs in our endpoint paths. Instead, we should use the nouns which represent the entity that the endpoint that we&#8217;re retrieving or manipulating as the pathname.<br></p>



<p>This is because our HTTP request method already has the verb. Having verbs in our API endpoint paths isn’t useful and it makes it unnecessarily long since it doesn’t convey any new information. The chosen verbs could vary by the developer’s whim. For instance, some like ‘get’ and some like ‘retrieve’, so it’s just better to let the HTTP GET verb tell us what and endpoint does.<br></p>



<p>The action should be indicated by the HTTP request method that we&#8217;re making. The most common methods include GET, POST, PUT, and DELETE.<br></p>



<p>GET retrieves resources. POST submits new data to the server. PUT updates existing data. DELETE removes data. The verbs map to the <a href="https://en.wikipedia.org/wiki/Create,_read,_update_and_delete">CRUD</a> operations.<br></p>



<p>With the two principles we discussed above in mind, we should create routes like GET <code>/articles/</code> for getting news articles. Likewise, POST <code>/articles/</code> is for adding a new article , PUT <code>/articles/:id</code> is for updating the article with the given <code>id</code>. DELETE <code>/articles/:id</code> is for deleting an existing article with the given ID.<br></p>



<p><code>/articles</code> represents a REST API resource. For instance, we can use Express to add the following endpoints for manipulate articles as follows:<br></p>



<pre class="wp-block-preformatted">const express = require('express');
const bodyParser = require('body-parser');

const app = express();

app.use(bodyParser.json());

app.get('/articles', (req, res) =&gt; {
&nbsp;&nbsp;const articles = [];
&nbsp;&nbsp;// code to retrieve an article...
&nbsp;&nbsp;res.json(articles);
});

app.post('/articles', (req, res) =&gt; {
&nbsp;&nbsp;// code to add a new article...
&nbsp;&nbsp;res.json(req.body);
});

app.put('/articles/:id', (req, res) =&gt; {
&nbsp;&nbsp;const { id } = req.params;
&nbsp;&nbsp;// code to update an article...
&nbsp;&nbsp;res.json(req.body);
});

app.delete('/articles/:id', (req, res) =&gt; {
&nbsp;&nbsp;const { id } = req.params;
&nbsp;&nbsp;// code to delete an article...
&nbsp;&nbsp;res.json({ deleted: id });
});

app.listen(3000, () =&gt; console.log('server started'));</pre>



<p>In the code above, we defined the endpoints to manipulate articles. As we can see, the path names do not have any verbs in them. All we have are nouns. The verbs are in the HTTP verbs.<br></p>



<p>The POST, PUT, and DELETE endpoints all take JSON as the request body, and they all return JSON as the response, including the GET endpoint.<br></p>



<h2>Name collections with plural nouns</h2>



<p>We should name collections with plural nouns. It&#8217;s not often that we only want to get a single item, so we should be consistent with our naming, we should use plural nouns.<br></p>



<p>We use plurals to be consistent with what’s in our databases. Tables usually have more than one entry and are named to reflect that, so to be consistent with them, we should use the same language as the table the API accesses.&nbsp;</p>



<p>With the <code>/articles</code> endpoint, we have the plural form for all endpoints, so we don&#8217;t have to change it to be plural.<br></p>



<h2>Nesting resources for hierarchical objects</h2>



<p>The path of the endpoints that deal with nested resources should be done by appending the nested resource as the name of the path that comes after the parent resource.<br></p>



<p>We have to make sure that it makes sure what we considered a nested resources matches what we have in our database tables. Otherwise, it’ll be confusing.<br></p>



<p>For instance, if we want an endpoint to get the comments for a news article, we should append the <code>/comments</code> path to the end of the <code>/articles</code> path. This is assuming that we have <code>comments</code> as a child of an <code>article</code> in our database.<br></p>



<p>For instance, we can do that with the following code in Express:<br></p>



<pre class="wp-block-preformatted">const express = require('express');
const bodyParser = require('body-parser');

const app = express();

app.use(bodyParser.json());

app.get('/articles/:articleId/comments', (req, res) =&gt; {
&nbsp;&nbsp;const { articleId } = req.params;
&nbsp;&nbsp;const comments = [];
&nbsp;&nbsp;// code to get comments by articleId
&nbsp;&nbsp;res.json(comments);
});


app.listen(3000, () =&gt; console.log('server started'));</pre>



<p>In the code above, we can use the GET method on the path <code>'/articles/:articleId/comments'</code>. We get <code>comments</code> on the article identified by <code>articleId</code> and then return it in the response. We add <code>'comments'</code> after the <code>'/articles/:articleId'</code> path segment to indicate that it&#8217;s a child resource of <code>/articles</code>.<br></p>



<p>This makes sense since <code>comments</code> are the children objects of the <code>articles</code>, assuming each article has its own comments. Otherwise, it’s confusing to the user since this structure is generally accepted to be for accessing child objects. The same principle also applies to the POST, PUT, and DELETE endpoints. They can all use the same kind of nesting structure for the path names.<br></p>



<h2>Handle errors gracefully and return standard error codes</h2>



<p>To eliminate confusion for API users when an error occurs, we should handle errors gracefully and return HTTP response codes that indicate what kind of error occurred. This gives maintainers of the API enough information to understand the problem that’s occurred. We don’t want errors to bring down our system, so we can leave them unhandled, which means that the API consumer has to handle them.<br></p>



<p>Common error HTTP status codes include:<br></p>



<ul><li> 400 Bad Request &#8211; This means that client-side input fails validation.</li><li>401 Unauthorized &#8211; This means the user isn&#8217;t not authorized to access a resource. It usually returns when the user isn&#8217;t authenticated.</li><li>403 Forbidden &#8211; This means the user is authenticated, but it&#8217;s not allowed to access a resource.</li><li>404 Not Found &#8211; This indicates that a resource is not found.</li><li>500 Internal server error &#8211; This is a generic server error. It probably shouldn&#8217;t be thrown explicitly.</li><li>502 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502">Bad Gateway</a> &#8211; This indicates an invalid response from an upstream server.</li><li>503 Service Unavailable &#8211; This indicates that something unexpected happened on server side (It can be anything like server overload, some parts of the system failed, etc.).</li></ul>



<p>We should be throwing errors that correspond to the problem that our app has encountered. For example, if we want to reject the data from the request payload, then we should return a 400 response as follows in an Express API:<br></p>



<pre class="wp-block-preformatted">const express = require('express');
const bodyParser = require('body-parser');

const app = express();

// existing users
const users = [
&nbsp;&nbsp;{ email: 'abc@foo.com' }
]

app.use(bodyParser.json());

app.post('/users', (req, res) =&gt; {
&nbsp;&nbsp;const { email } = req.body;
&nbsp;&nbsp;const userExists = users.find(u =&gt; u.email === email);
&nbsp;&nbsp;if (userExists) {
&nbsp;&nbsp;&nbsp;&nbsp;return res.status(400).json({ error: 'User already exists' })
&nbsp;&nbsp;}
&nbsp;&nbsp;res.json(req.body);
});


app.listen(3000, () =&gt; console.log('server started'));</pre>



<p>In the code above, we have a list of existing users in the <code>users</code> array with the given email.<br></p>



<p>Then if we try to submit the payload with the <code>email</code> value that already exists in <code>users</code>, we&#8217;ll get a 400 response status code with a <code>'User already exists'</code> message to let users know that the user already exists. With that information, the user can correct the action by changing the email to something that doesn&#8217;t exist.<br></p>



<p>Error codes need to have messages accompanied with them so that the maintainers have enough information to troubleshoot the issue, but attackers can’t use the error content to carry our attacks like stealing information or bringing down the system.<br></p>



<p>Whenever our API does not successfully complete, we should fail gracefully by sending an error with information to help users make corrective action.<br></p>



<h2>Allow filtering, sorting, and pagination</h2>



<p>The databases behind a REST API can get very large. Sometimes, there&#8217;s so much data that it shouldn’t be returned all at once because it’s way too slow or will bring down our systems. Therefore, we need ways to filter items.<br></p>



<p>We also need ways to paginate data so that we only return a few results at a time. We don&#8217;t want to tie up resources for too long by trying to get all the requested data at once.<br></p>



<p>Filtering and pagination both increase performance by reducing the usage of server resources. As more data accumulates in the database, the more important these features become.<br></p>



<p>Here’s a small example where an API can accept a query string with various query parameters to let us filter out items by their fields:<br></p>



<pre class="wp-block-preformatted">const express = require('express');
const bodyParser = require('body-parser');

const app = express();

// employees data in a database
const employees = [
&nbsp;&nbsp;{ firstName: 'Jane', lastName: 'Smith', age: 20 },
&nbsp;&nbsp;//...
&nbsp;&nbsp;{ firstName: 'John', lastName: 'Smith', age: 30 },
&nbsp;&nbsp;{ firstName: 'Mary', lastName: 'Green', age: 50 },
]

app.use(bodyParser.json());

app.get('/employees', (req, res) =&gt; {
&nbsp;&nbsp;const { firstName, lastName, age } = req.query;
&nbsp;&nbsp;let results = [...employees];
&nbsp;&nbsp;if (firstName) {
&nbsp;&nbsp;&nbsp;&nbsp;results = results.filter(r =&gt; r.firstName === firstName);
&nbsp;&nbsp;}

&nbsp;&nbsp;if (lastName) {
&nbsp;&nbsp;&nbsp;&nbsp;results = results.filter(r =&gt; r.lastName === lastName);
&nbsp;&nbsp;}

&nbsp;&nbsp;if (age) {
&nbsp;&nbsp;&nbsp;&nbsp;results = results.filter(r =&gt; +r.age === +age);
&nbsp;&nbsp;}
&nbsp;&nbsp;res.json(results);
});

app.listen(3000, () =&gt; console.log('server started'));</pre>



<p>In the code above, we have the <code>req.query</code> variable to get the query parameters. We then extract the property values by destructuring the individual query parameters into variables using the JavaScript destructuring syntax. Finally, we run <code>filter</code> on with each query parameter value to locate the items that we want to return.<br></p>



<p>Once we have done that, we return the <code>results</code> as the response. Therefore, when we make a GET request to the following path with the query string:<br></p>



<p><code>/employees?lastName=Smith&amp;age=30</code></p>



<p>We get:<br></p>



<pre class="wp-block-preformatted">[
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"firstName": "John",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"lastName": "Smith",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"age": 30
&nbsp;&nbsp;&nbsp;&nbsp;}
]</pre>



<p>as the returned response since we filtered by <code>lastName</code> and <code>age</code>.<br></p>



<p>Likewise, we can accept the <code>page</code> query parameter and return a group of entries in the position from <code>(page - 1) * 20</code> to <code>page * 20</code>.&nbsp;<br></p>



<p>We can also specify the fields to sort by in the query string. For instance, we can get the parameter from a query string with the fields we want to sort the data for. Then we can sort them by those individual fields.<br></p>



<p>For instance, we may want to extract the query string from a URL like:<br></p>



<p><code>http://example.com/articles?sort=+author,-datepublished</code></p>



<p>Where <code>+</code> means ascending and <code>-</code> means descending. So we sort by author’s name in alphabetical order and <code>datepublished</code> from most recent to least recent.</p>



<h2>Maintain Good Security Practices</h2>



<p>Most communication between client and server should be private since we often send and receive private information. Therefore, using SSL/TLS for security is a must.<br></p>



<p>A SSL certificate isn&#8217;t too difficult to load onto a server and the cost is free or very low. There&#8217;s no reason not to make our REST APIs communicate over secure channels instead of in the open.</p>



<p>People shouldn&#8217;t be able to access more information that they requested. For example, a normal user shouldn&#8217;t be able to access information of another user. They also shouldn&#8217;t be able to access data of admins.<br></p>



<p>To enforce the principle of least privilege, we need to add role checks either for a single role, or have more granular roles for each user.<br></p>



<p>If we choose to group users into a few roles, then the roles should have the permissions that cover all they need and no more. If we have more granular permissions for each feature that users have access to, then we have to make sure that admins can add and remove those features from each user accordingly. Also, we need to add some preset roles that can be applied to a group users so that we don’t have to do that for every user manually.<br></p>



<h2>Cache data to improve performance</h2>



<p>We can add caching to return data from the local memory cache instead of querying the database to get the data every time we want to retrieve some data that users request. The good thing about caching is that users can get data faster. However, the data that users get may be outdated. This may also lead to issues when debugging in production environments when something goes wrong as we keep seeing old data.<br></p>



<p>There are many kinds of caching solutions like <a href="https://redis.io/">Redis</a>, in-memory caching, and more. We can change the way data is cached as our needs change.<br></p>



<p>For instance, Express has the <a href="https://www.npmjs.com/package/apicache"><code>apicache</code></a> middleware to add caching to our app without much configuration. We can add a simple in-memory cache into our server like so:<br></p>



<pre class="wp-block-preformatted">const express = require('express');
const bodyParser = require('body-parser');
const apicache = require('apicache');
const app = express();
let cache = apicache.middleware;
app.use(cache('5 minutes'));

// employees data in a database
const employees = [
&nbsp;&nbsp;{ firstName: 'Jane', lastName: 'Smith', age: 20 },
&nbsp;&nbsp;//...
&nbsp;&nbsp;{ firstName: 'John', lastName: 'Smith', age: 30 },
&nbsp;&nbsp;{ firstName: 'Mary', lastName: 'Green', age: 50 },
]

app.use(bodyParser.json());

app.get('/employees', (req, res) =&gt; {
&nbsp;&nbsp;res.json(employees);
});

app.listen(3000, () =&gt; console.log('server started'));</pre>



<p>The code above just references the <code>apicache</code> middleware with <code>apicache.middleware</code> and then we have:<br></p>



<p><code>app.use(cache('5 minutes'))</code><br></p>



<p>to apply the caching to the whole app. We cache the results for five minutes, for example. We can adjust this for our needs<br></p>



<h2>Versioning our APIs</h2>



<p>We should have different versions of API if we&#8217;re making any changes to them that may break clients. The versioning can be done according to semantic version (for example, 2.0.6 to indicate major version 2 and the sixth patch) like most apps do nowadays.<br></p>



<p>This way, we can gradually phase out old endpoints instead of forcing everyone to move to the new API at the same time. The v1 endpoint can stay active for people who don’t want to change, while the v2, with its shiny new features, can serve those who are ready to upgrade. This is especially important if our API is public. We should version them so that we won&#8217;t break third party apps that use our APIs.<br></p>



<p>Versioning is usually done with <code>/v1/</code>, <code>/v2/</code>, etc. added at the start of the API path.<br></p>



<p>For example, we can do that with Express as follows:<br></p>



<pre class="wp-block-preformatted">const express = require('express');
const bodyParser = require('body-parser');
const app = express();
app.use(bodyParser.json());

app.get('/v1/employees', (req, res) =&gt; {
&nbsp;&nbsp;const employees = [];
&nbsp;&nbsp;// code to get employees
&nbsp;&nbsp;res.json(employees);
});

app.get('/v2/employees', (req, res) =&gt; {
&nbsp;&nbsp;const employees = [];
&nbsp;&nbsp;// different code to get employees
&nbsp;&nbsp;res.json(employees);
});

app.listen(3000, () =&gt; console.log('server started'));</pre>



<p>We just add the version number to the start of the endpoint URL path to version them.<br></p>



<h2>Conclusion</h2>



<p>The most important takeaways for designing high-quality REST APIs is to have consistency by following web standards and conventions. JSON, SSL/TLS, and HTTP status codes are all standard building blocks of the modern web.<br></p>



<p>Performance is also an important consideration. We can increase it by not returning too much data at once. Also, we can use caching so that we don&#8217;t have to query for data all the time.<br></p>



<p>Paths of endpoints should be consistent, we use nouns only since the HTTP methods indicate the action we want to take. Paths of nested resources should come after the path of the parent resource. They should tell us what we’re getting or manipulating without the need to read extra documentation to understand what it’s doing.<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/03/02/best-practices-for-rest-api-design/">Best practices for REST API design</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/03/02/best-practices-for-rest-api-design/feed/</wfw:commentRss>
		<slash:comments>27</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15247</post-id>	</item>
		<item>
		<title>This week, #StackOverflowKnows outlaw wifi, GPU weakness, and neutrinos per second</title>
		<link>https://stackoverflow.blog/2020/02/28/this-week-stackoverflowknows-outlaw-wifi-gpu-weakness-and-neutrinos-per-second/</link>
				<comments>https://stackoverflow.blog/2020/02/28/this-week-stackoverflowknows-outlaw-wifi-gpu-weakness-and-neutrinos-per-second/#comments</comments>
				<pubDate>Fri, 28 Feb 2020 15:06:01 +0000</pubDate>
		<dc:creator><![CDATA[Ryan Donovan]]></dc:creator>
				<category><![CDATA[#StackOverflowKnows]]></category>
		<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[announcements]]></category>
		<category><![CDATA[stackoverflow]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15239</guid>
				<description><![CDATA[<p>Time is on the March and we are ready to Spring into action (you see what we did there). And that means we’re planting a new crop of questions for you. This week, we look at the billions of neutrinos streaming through your body, why telegraphs used STOP instead of punctuation, and the asteroids that…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/28/this-week-stackoverflowknows-outlaw-wifi-gpu-weakness-and-neutrinos-per-second/">This week, #StackOverflowKnows outlaw wifi, GPU weakness, and neutrinos per second</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>Time is on the March and we are ready to Spring into action (you see what we did there). And that means we’re planting a new crop of questions for you. This week, we look at the billions of neutrinos streaming through your body, why telegraphs used STOP instead of punctuation, and the asteroids that NASA has their eyes on.&nbsp;</p>



<h4><a href="https://physics.stackexchange.com/questions/532708/what-is-the-evidence-for-billions-of-neutrinos-pass-through-your-body-every-sec">What is the evidence for &#8216;billions of neutrinos pass through your body every second&#8217;?</a>&nbsp;</h4>



<p><em>physics.stackexchange.com</em></p>



<p>While we can&#8217;t detect &#8217;em all, the math says that they&#8217;re there. Read more on how to calculate the 99.9999999% undetected neutrinos passing through you.&nbsp;&nbsp;</p>



<h4><a href="https://cs.stackexchange.com/questions/121080/what-are-gpus-bad-at">What are GPUs bad at?</a></h4>



<p><em> cs.stackexchange.com</em></p>



<p>GPUs. Notoriously bad single-taskers.&nbsp;</p>



<p>With the rise of machine learning, GPUs are all the rage. If your CPU is feeling jealous, here’s a reminder of all the things GPUs aren’t good at.&nbsp;</p>



<h4><a href="https://history.stackexchange.com/questions/56689/why-exactly-did-telegraphs-have-to-use-stop-instead-of-a-period-and-quote-in">Why exactly did telegraphs have to use &#8220;STOP&#8221; instead of a period and &#8220;QUOTE&#8221; instead of a quotation mark? (Or special codes.)</a></h4>



<p><em>history.stackexchange.com</em></p>



<p>How do you know when STOP is the end of a sentence STOP and not just the word STOP STOP?</p>



<h4><a href="https://law.stackexchange.com/questions/49154/can-a-university-legally-enforce-a-policy-preventing-students-from-creating-thei">Can a university legally enforce a policy preventing students from creating their own wireless networks?</a>&nbsp;</h4>



<p><em>law.stackexchange.com</em></p>



<p>Is university wi-fi the new pirate radio? Depends on whether you believe wireless signals can be charged with trespassing.&nbsp;</p>



<h4><a href="https://space.stackexchange.com/questions/41500/why-not-explore-cruithne">Why not explore Cruithne?</a>&nbsp;</h4>



<p><em>space.stackexchange.com</em></p>



<p>Apparently NASA has decided there are 16831 more interesting destinations. Choose local for your next near-earth asteroid visit. <br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/28/this-week-stackoverflowknows-outlaw-wifi-gpu-weakness-and-neutrinos-per-second/">This week, #StackOverflowKnows outlaw wifi, GPU weakness, and neutrinos per second</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/28/this-week-stackoverflowknows-outlaw-wifi-gpu-weakness-and-neutrinos-per-second/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15239</post-id>	</item>
		<item>
		<title>The eight factors of happiness for developers</title>
		<link>https://stackoverflow.blog/2020/02/27/the-eight-factors-of-happiness-for-developers/</link>
				<comments>https://stackoverflow.blog/2020/02/27/the-eight-factors-of-happiness-for-developers/#comments</comments>
				<pubDate>Thu, 27 Feb 2020 15:39:21 +0000</pubDate>
		<dc:creator><![CDATA[Mark Locklear]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[dev life]]></category>
		<category><![CDATA[happiness]]></category>
		<category><![CDATA[stackoverflow]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15233</guid>
				<description><![CDATA[<p>I recently came across this sketchnote by Tanmay Vora, and it really resonated with me. As a developer it got me thinking about how this might translate into the life of a developer and our happiness. Based on this sketchnote here are the eight factors of happiness applied to developer life. 1. Resentment Harboring resentment…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/27/the-eight-factors-of-happiness-for-developers/">The eight factors of happiness for developers</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>I recently came across this sketchnote by <a href="https://twitter.com/tnvora">Tanmay Vora</a>, and it really resonated with me. As a developer it got me thinking about how this might translate into the life of a developer and our happiness. Based on this sketchnote here are the eight factors of happiness applied to developer life.</p>



<figure class="wp-block-image"><img src="https://lh6.googleusercontent.com/Xhv4JLkLyEIu5VI-9U8XLZUZ5kdul22JGeuATSDti6WDWJ3BWGoqkqXBjVnKgo3FeMDpVxrUeu8TkCyE5h3Vpio0ANj31VSzz97xC5CCC1j9SOglT69uNca6uQSwaz8XW7Ba6wfs" alt=""/></figure>



<h2>1. Resentment</h2>



<p>Harboring resentment or anger toward another team member can be a significant source of unhappiness. In a previous position as a web developer, I worked with a senior engineer that I REALLY disliked. This team member would almost never let a pull request or design decision go unchallenged. Each interaction like this would lead to hours of what I call verbal judo in slack. This would bleed over into my life outside of work; I could never reconcile the fact that I let this other person get under my skin. My best defence was meditation and allowing this person to be a mentor of sorts. He allowed me to find my own flaws by what he brought out in me.</p>



<p>Another issue developers face is what I call &#8220;industry hate.&#8221; There is an undercurrent of resentment in the software development industry around hiring and the interview process that bemoans the fact that we truly are a skills first culture. This is a double-edged sword. On the one hand, you don&#8217;t have to have a CS degree or formal training to work as a developer and make great money doing it.&nbsp;</p>



<p>On the other hand, the interview process can feel biased toward pure engineering and that soft skills don&#8217;t matter. As much as the industry talks about empathy and mentoring, it seems like the only thing that truly matters is how quickly you can build and implement a B-tree search algorithm. For new developers, all you can do is focus on being as well rounded as possible and prepare as best you can for interviews. For more senior developers, as we become responsible for hiring, we can factor more soft skills and characteristics into our hiring practices.</p>



<p>Nursing a grudge against a colleague or project will only lead to unhappiness and unproductive hours. Finding processes or techniques to turn that negative energy into positive experiences will make you a better developer and a better you!</p>



<h2>2. Not living in the past</h2>



<p>Don&#8217;t dwell on that job that you didn&#8217;t get or that project that went bad. If we live in the past, we are doomed to repeat it. As developers, we need short memories and one of the best ways we learn is through failure.&nbsp;</p>



<p>I went through an interview process for a software engineer position a few years ago. This was a really good company with great benefits and a solid remote culture, which was important to me. After a couple of interviews and a coding challenge at home, the final step was an onsite coding day. Of course, this is a lot to take in. You have to take a day off work, fly to a new city and spend the night.&nbsp;</p>



<p>On the big day, after receiving the requirements and meeting with the team to game plan for the app, I proceeded to begin coding. The first few hours went well, but after getting stuck on a particular feature, I went down a rabbit hole that only led to wasted time and half-baked code. The day was not a disaster, but it also was not my best work. These words from the rejection email still haunt me:</p>



<p>Unfortunately, the hiring team has decided to move forward with other candidates. The team loved the energy and enthusiasm you brought to your code day—they really liked pairing with you and collaborating with you. However, for this role, we are looking to see a high level of fluency and deep understanding of the chosen tech stack. We&#8217;ve had a lot of interest in this spot, and with limited openings, we were only able to continue with a small number of folks who have been able to demonstrate that a bit more clearly.&nbsp;&nbsp;</p>



<p>High level of fluency and deep understanding!? Gah! As painful as that experience was, it taught me to be judicious with my time when working on time-sensitive projects. Sometimes it&#8217;s better to implement a minimum viable product to ensure its functionality first, then more sophisticated features if time allows.</p>



<p>Living in the past is stressful, unproductive and depressing. We all have setbacks, but turning your setbacks into lessons learned will allow you to mentor and be empathetic to others with similar experience as well as help you not repeat those same mistakes in the future.</p>



<h2>3. Cooperate with life</h2>



<p>The Serenity Prayer asks us to accept the things we cannot change, change the things we can, but also have the wisdom to know the difference. The whole “wisdom to know the difference” thing is the most challenging part of that axiom. Sometimes we have to know when to push back, but other times we should welcome change and see where it takes us.</p>



<p>A few years ago I was asked by my CEO to manage a Zoom Webinar initiative our organization was starting. Zoom Webinars? “But I’m a Web Developer,” I thought to myself. I seriously considered leaving this position. After much deliberation, I decided to approach this challenge with <a href="https://en.wikipedia.org/wiki/Shoshin">beginner&#8217;s mind</a> and see where it would take me.&nbsp;</p>



<p>As it turned out, there were interesting programming challenges in this initiative. Clients needed to submit applications for webinars, so I incorporated Google Forms into the workflow. Rather than use the Zoom interface, I wrote our own internal web app using Zoom’s own API. After that, I used Google App Scripts to interface with the Google Form and the Zoom Web app so when users submitted a webinar request, it was automatically imported into our app for processing.</p>



<p>We never know what opportunities might be hiding behind a career change and being open to these changes can lead to new skills and growth. I’m so glad that I didn’t quit over this. By accepting this change, it gave me experience with technologies that I otherwise would not have had.</p>



<h2>4. Stay engaged with the real world</h2>



<p>As developers, it&#8217;s easy to withdraw into our own world. It&#8217;s often a reclusive profession, and without even trying, we can have very little interaction with others. But humans are social creatures. We get married and have kids, we go to church, the community center, or the gym. We do these things because when we interact with others, it makes our world better, and it makes us better.</p>



<p>I have been working remotely for about five years. When I first began, I worked from my home office 100% of the time. After about six months, I found myself in a rut and dreading the start of each day. I have a great space to work in, but it was getting stale and I needed a change. I am an adjunct community college instructor, and the college provides space for us to work and meet with students. I started going out to the college to work a couple of days a week.&nbsp;</p>



<p>Not only does it allow me to get out of the house, but I found the interaction with students and other instructors really energized me and replaced the “water cooler” time I had been missing since I started working remotely. Sure, there are more interruptions than at home, but the change of surroundings allows me to recharge my batteries and consequently, I have found that my time at home is way more productive. You can have this experience with a co-working space if you are remote or your local programming meetup. Even meeting with others once a month will get you thinking outside your world and widen your personal network.</p>



<p>This interaction with others can be especially helpful during times of stress. When we are stressed, we tend to withdraw and become more reclusive, so that is exactly when we need others around us. Don’t wait until we are at these low points to find interaction. Social networks and connections should be nurtured and made a part of our everyday lives so when the challenges do come, we have others to lean on and encourage us.</p>



<p>Meaningful involvement in activities outside your day job will keep your life interesting and give you new perspectives. These engagements will pay dividends in both your professional and personal life.</p>



<h2>5. Love yourself (and others)</h2>



<p>OK, as developers, talking about loving ourselves is way too sugary and it&#8217;s just not how we talk. Programming is hard and don’t let anyone tell you it&#8217;s not. The problem is coding is a technical skill and there are rock stars and ninjas, and there is the rest of us (I’m in this camp). We must have empathy for ourselves and others as we move around in this profession.</p>



<p>I was recently mentoring a student and we had a tough problem we couldn’t solve. I told the student “Well, if it were me, I would post a Stack Overflow question, so let&#8217;s do that.” The student looked mortified. He was terrified that someone would mock him or say that his question was dumb. I promised him that would not be the case and sat with him while he authored the question. Of course, he got multiple responses (none mocking him), one of which helped him solve the issue he was having.</p>



<p>Code reviews can also be a great opportunity to apply this practice. Strive for <a href="https://stackoverflow.blog/2019/09/30/how-to-make-good-code-reviews-better/">better code reviews</a> and those that consider all factors around a pull request like the technical level of the submitter (Jr vs. Sr). We often consider our code as an extension of ourselves so it&#8217;s easy to take offense to a negative code review. The more compassionate and empathetic we can be with feedback, the better it will be received.</p>



<p>Interacting with our peers with empathy and love will make you and those around you more productive by raising your level of work satisfaction as well as helping others become more effective programmers.</p>



<h2>6. Be virtuous</h2>



<p>As engineers, we live in a highly technical environment so we think that gives us a pass on virtues like love, compassion, and empathy. No such luck! We are humans, not computers, and just because we program them doesn’t mean we should think like them. Look for opportunities in your work to cultivate old fashioned values like love, compassion, humor, and loyalty.</p>



<p>A few years ago, my organization had an all hands meeting. We broke out into small groups of four or five people and were asked to share something about us that motivates and informs our work everyday. Now you know how this goes when we hear something like this, we immediately think “Oh god&#8230;I how can I get out of this? I’ll fake a stomach ache and run to the bathroom!”&nbsp;</p>



<p>But this was truly a transformative experience for my group. The first person who shared talked about their family’s struggle with mental illness and how that impacts their work. That led to others in the group being open and honest about all kinds of things that we never get to talk about in a virtual environment.&nbsp;</p>



<p>Our team had this experience years ago, but it has really had a lasting positive effect on how we work together. Small insights into people’s pasts and their experiences impacts how we interact with one another and leads to greater trust and understanding of how and why people work the way they do.</p>



<h2>7. Lower your expectations of yourself</h2>



<p>Shoot for the moon, if you miss, at least you will be among the stars. We’ve all heard this a million times, but, as I said earlier, coding is hard, so I am going to propose that we cut ourselves some slack and don’t expect so much. Just by virtue of our chosen profession, we are overachievers and we make things doubly hard when we expect to progress too fast.</p>



<p>I am teaching a C++ class this semester, and it is a requirement for engineering students. It is the first and only programming class these students need to graduate. We just finished a chapter on loops, and I met with one student who was frustrated at what he perceived as his lack of understanding of nested loops. I shared with him that nested loops are not a trivial topic and many experienced programmers struggle with debugging them. This student&#8217;s expectation for himself was way higher than it needed to be for someone with no background in programming.&nbsp;</p>



<p>I see this a lot with new developers. It&#8217;s great to set the bar high for yourself, but the danger with this mindset is twofold. First, you run the risk of <a href="https://stackoverflow.blog/2020/01/13/avoiding-burnout-as-an-ambitious-developer/">burning yourself out</a> and driving yourself out of the profession and second, even if you stay in the field, you will be miserable! Who wants to work in a job that they think they suck at?</p>



<p>Being good at your job is a noble pursuit that we should all strive to achieve. But thinking we can all be Alan Turing, Steve Jobs, or &lt;programming_hero&gt; is a target that you will likely never hit. Rather, strive to be the best version of yourself everyday, and you may end up being a hero to someone else.</p>



<h2>8. Serve something bigger than yourself</h2>



<p>Self-centered and narcissistic people are the least happy people on the planet. The happiest people have found some balance between serving and caring for themselves and serving their family, their co-workers, and those in their community. I once heard someone describe the three pillars of human happiness as fulfilling the need for meaningful work, the need for lifelong connections, and the need to serve something bigger than yourself.</p>



<p>Serving something bigger than yourself can manifest itself in a number of ways. You might be able to fulfill this at your job. If you work for a non-profit, it might be at the core of your work. But even if at a for-profit company, there is plenty of meaningful work to go around. Healthcare, social media, and productivity software can all have a mission to aid society. If the bug you fix saves someone five minutes they can spend with their family, then that is truly meaningful work.&nbsp;</p>



<p>Outside of work, look for an opportunity to use your technical skills to help others. I have been maintaining my church’s website for almost a decade now. Doing content management is not my favorite kind of work, but it is satisfying to be able to help my church and my community.&nbsp;</p>



<p>In 2018 and 2019, I served as Director of Mentors for <a href="https://vetswhocode.io/">VetsWhoCode</a>. There are a number of volunteer organizations like <a href="https://www.codeforamerica.org/">Code for America</a> and <a href="https://socialcoder.org/">Social Coder</a> that have opportunities to use your technical skills to serve others. Another option is to get involved with your local coders meetup. Meetups love it when someone volunteers to give a talk, help organize the location, or bring in an outside speaker.</p>



<p>Serving a purpose or finding a mission bigger than yourself will allow you to be better at your craft, but it will also take you outside your comfort zone in ways you might not find at your day job. It widens your personal and professional contacts allowing you to mentor and be mentored by others. Finally, it makes the world a better place by giving organizations access to highly skilled talent that they otherwise might not.</p>



<p>That&#8217;s all for now. I hope this has given you some pointers on how to be a happy coder and to share that joy with others. I would love it if someone might create a sketchnote on these factors. If so tweet me at @marklocklear.</p>



<p>Happy Coding!<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/27/the-eight-factors-of-happiness-for-developers/">The eight factors of happiness for developers</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/27/the-eight-factors-of-happiness-for-developers/feed/</wfw:commentRss>
		<slash:comments>32</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15233</post-id>	</item>
		<item>
		<title>What&#8217;s behind the hype about Blazor?</title>
		<link>https://stackoverflow.blog/2020/02/26/whats-behind-the-hype-about-blazor/</link>
				<comments>https://stackoverflow.blog/2020/02/26/whats-behind-the-hype-about-blazor/#comments</comments>
				<pubDate>Wed, 26 Feb 2020 15:24:18 +0000</pubDate>
		<dc:creator><![CDATA[Chris Sainty]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[blazor]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[c sharp]]></category>
		<category><![CDATA[dot net]]></category>
		<category><![CDATA[stackoverflow]]></category>
		<category><![CDATA[web dev]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15175</guid>
				<description><![CDATA[<p>Blazor is a new client-side UI framework from the ASP.NET team. Its big selling point is the ability to write rich web UI experiences using HTML, CSS, and C# instead of JavaScript—something a lot of developers have been dreaming of.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/26/whats-behind-the-hype-about-blazor/">What&#8217;s behind the hype about Blazor?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>If you&#8217;ve been keeping up with the latest developments in the .NET world over the past year or two, you&#8217;ve probably heard the word Blazor mentioned once or twice. Blazor is a new client-side UI framework from the<a href="http://asp.net"> </a>ASP.NET team. Its big selling point is the ability to write rich web UI experiences using HTML, CSS, and C# instead of JavaScript—something a lot of developers have been dreaming of.</p>



<p>While JavaScript has been the defacto standard for front-end web development since its inception, we’ve never really seemed to be happy with it. I mean, how many superset or transpile to JavaScript languages have sprung up over the years to help improve JavaScript and make it more maintainable? CoffeeScript, Dart, Elm and Scala—to name but a few.&nbsp;</p>



<p>Looking at the <a href="https://insights.stackoverflow.com/survey/2019#most-loved-dreaded-and-wanted">most loved</a> languages, TypeScript, a language designed by the legendary <a href="https://en.wikipedia.org/wiki/Anders_Hejlsberg">Anders Hejlsberg</a>, tops the list. The same man who designed C#, no less. It adds features such as interfaces, classes, compile time type-checking, even generics. However, all those features and more already exist in C#, and have done for years. C# is a powerful, flexible, feature rich language that is easy to learn.</p>



<p>But Blazor has already started to show it has potential as a highly efficient and productive programming model outside of its original design—as a direct competitor to JavaScript single page application (SPA) frameworks.</p>



<p>Microsoft already has multiple experiments going on with Blazor, trialling it with desktop applications using <a href="https://www.electronjs.org/">Electron</a> and <a href="https://www.nuget.org/packages/WebWindow">WebWindow</a> (an experimental lightweight alternative to Electron). But most recently, for native mobile app development where the Blazor programming model is mixed with native <a href="https://dotnet.microsoft.com/apps/xamarin">Xamarin</a> forms controls.</p>



<p>Could we be seeing the start of a single unified UI framework for building any type of application with .NET, be it web, desktop, or mobile? I don&#8217;t know about you, but I certainly find that an exciting prospect.</p>



<h2><strong>What makes Blazor so flexible?</strong></h2>



<p>To answer this question, we need to understand how Blazor has been architected.</p>



<p>Essentially, Blazor has a separation between how it calculates UI changes (app/component model) and how those changes are applied (renderer). This sets Blazor apart from other UI frameworks such as Angular or ReactJS/React Native that can only create web technology based UIs. By using different renderers Blazor is able to create not only web based UIs, but also native mobile UIs as well.</p>



<p>This does require components to be authored differently, so components written for web renderers can’t be used with native mobile renderers. However, the programming model is the same. Meaning once developers are familiar with it, they can create UIs using any renderer.</p>



<figure class="wp-block-image"><img src="https://lh5.googleusercontent.com/7qSVTvfd6ZYFSsdvRwk_33JmqzlfZlFdF1VVncQYcbR3qSYrrJLd5NkjKD-hnOTcJT103JVlYQT_1dmgnO9TONczizPWqYXs2622cNz2CAiQVBEXlmt4jK8Of0FpFo5rHSHn14Lb" alt=""/></figure>



<h3><strong>Render/Hosting Model</strong></h3>



<p>At its core, Blazor&#8217;s app/component model is responsible for calculating UI changes, but you can use different renderers to control how the UI is actually displayed and updated. These renderers are more commonly referred to as hosting models. At the time of writing, there are four hosting models for Blazor in various stages of development.<br></p>



<p><strong>Blazor Server </strong>(Remote Renderer)</p>



<ul><li>Platform: <strong>Web</strong></li><li>Status &#8211; <strong>GA/Production Supported</strong></li></ul>



<p><strong>Blazor WebAssembly </strong>(WebAssembly Renderer)</p>



<ul><li>Platform: <strong>Web</strong></li><li>Status: <strong>Preview (Committed Product)</strong></li></ul>



<p><strong>Blazor Electron </strong>(Electron Renderer)</p>



<ul><li>Platform: <strong>Desktop (Windows, Mac, and Linux)</strong></li><li>Status: <strong>Experimental (Not Committed)</strong></li></ul>



<p><strong>Mobile Blazor Bindings</strong> (MobileBlazorBindings Renderer)</p>



<ul><li>Platform: <strong>Mobile (iOS and Android)</strong></li><li>Status: <strong>Experimental (Not Committed)</strong></li></ul>



<p>Blazor Server is the only production supported model at the time of writing. Blazor WebAssembly is due for release around May 2020—I would expect this could be the big announcement at <a href="https://www.microsoft.com/en-us/build">Build</a>. Blazor Electron and Mobile Blazor Bindings are both marked as experimental and Microsoft hasn&#8217;t yet committed to shipping these.</p>



<h3><strong>App/Component Model</strong></h3>



<p>This is the engine room of the framework. Here we can find all the non-UI specific elements which make Blazor work. The programming model, routing and navigation, and the render tree, which is Blazor&#8217;s mechanism for calculating UI changes.</p>



<p>The part I want to focus on though is the programming model. Out of the four hosting models I talked about above, the first three have one thing in common, they all understand web standards. Components authored to target these hosting models will be using HTML and CSS. But the fourth model, Mobile Blazor bindings, doesn&#8217;t understand web standards at all. Applications built for this hosting model will need to have their components written using native mobile controls.</p>



<p>To give a more visual example, let&#8217;s look at the same component written for Blazor WebAssembly, which uses a web standards compliant renderer, vs Mobile Blazor Bindings, which uses the non-web standards-based renderer.</p>



<pre class="wp-block-preformatted"> // WebAssembly Renderer

&lt;div&gt;
 &lt;p&gt;Current count: @currentCount&lt;/p&gt;
 &lt;button class="btn btn-primary" @onclick="IncrementCount"&gt;Click me&lt;/button&gt;
&lt;/div&gt;

@code {
&nbsp;&nbsp;&nbsp;&nbsp;private int currentCount = 0;

&nbsp;&nbsp;&nbsp;&nbsp;private void IncrementCount()
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentCount++;
&nbsp;&nbsp;&nbsp;&nbsp;}
}

// MobileBlazorBindings Renderer

&lt;StackLayout&gt;
 &lt;Label FontSize="30" Text="@($"Current count: {currentCount}")" /&gt;
 &lt;Button Text="Click me" OnClick="@IncrementCount" /&gt;
&lt;/StackLayout&gt;

@code {
&nbsp;&nbsp;&nbsp;&nbsp;private int currentCount = 0;

&nbsp;&nbsp;&nbsp;&nbsp;private void IncrementCount()
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentCount++;
&nbsp;&nbsp;&nbsp;&nbsp;}
}

</pre>



<p>It&#8217;s easy to see the differences between the two code samples, but what I want you to focus on the similarities.</p>



<p>Both samples have a markup section and a code block. In fact, the code blocks are identical between the samples. They each have an `OnClick` event with a specified handler and both use expressions to output the value of the current count field.</p>



<p>The point I&#8217;m making here is the programming model is the same. And this is the power of Blazor, learn the programming model and, save a few tweaks here and there, you&#8217;re going to be able to produce UI for any type of app, on any platform—that&#8217;s something we&#8217;ve not been able to do before with .NET.</p>



<p>Now we have a bit more of an understanding about how Blazor is put together, I want to talk a bit about the two main hosting models, Blazor Server and Blazor WebAssembly.</p>



<h2><strong>Blazor Server</strong></h2>



<p>The Blazor Server hosting model is currently the only production supported option for Blazor development right now. It was released back in September 2019 with .NET Core 3, during .NET Conf.</p>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/jWAcExuurXUSaF6s4P7JgHvJHSoRpZecXTK9OcryYo3EXXH1L4GGt-zB2Lro4dTytVNL-pw7-PpEX1JUAR939hHnIHe3AJWVSKGQnINVCqSdS_Rm_XX5hTLkipo3GbAlrwFVLUlw" alt=""/></figure>



<p>In this model, the Blazor application runs on the server on top of the full .NET Core runtime. When the user loads the application a small JavaScript file is downloaded which establishes a real-time, two-way <a href="https://docs.microsoft.com/en-us/aspnet/core/signalr/introduction?view=aspnetcore-3.1">SignalR</a> connection with the server. Any interaction that the user has with the app is then transmitted back to the server over the SignalR connection for the server to process. After the server is done, any UI updates are transmitted back to the client and applied to the DOM.</p>



<p>Now, I know what you&#8217;re thinking. There is no way that that can be performant, all of those interactions and UI updates being constantly sent back and forth. But I think you&#8217;ll actually be surprised.</p>



<p>The team did some load testing on Blazor Server to establish what it could and couldn&#8217;t deal with and this is what they found.</p>



<p><strong>Test 1 &#8211; Standard D1 v2 instance on Azure (1vCPU &amp; 3.5GB memory)</strong></p>



<p>The application could handle <strong>over 5000 concurrent active users</strong> without any visible degradation in performance.</p>



<p><strong>Test 2 &#8211; Standard D3 v2 instance on Azure (4vCPU &amp; 14GB memory)</strong></p>



<p>The application could handle <strong>over 20,000 concurrent active users</strong> without any visible degradation in performance.</p>



<p>These are pretty impressive figures, I think you&#8217;ll agree. The major findings which came out of these experiments were that memory and latency are the main bottlenecks of Blazor Server applications. If latency got above 200ms then performance took a hit and scale was limited by the available memory on the box.</p>



<h3><strong>Benefits</strong></h3>



<ul><li>Runs on the full .NET Core runtime</li><li>Fast development cycle</li><li>Small download size</li><li>Code is kept on the server and not downloaded to the client</li></ul>



<h3><strong>Drawbacks</strong></h3>



<ul><li>Doesn&#8217;t work well in high latency environments</li><li>No offline support—requires a constant connection to the server</li><li>Heavy resource demand on the server</li></ul>



<h3><strong>Ideal use case</strong></h3>



<p>I honestly think Blazor Server can be used for lots of scenarios, but its niche will be in intranet applications or low demand public-facing apps. The speed of development with this hosting model is obscenely quick, and I mean fast, due to everything being on the server. There is no need for separate API projects, for example, you can just consume application services directly in your components. I was sceptical of Blazor Server at first, but I have to say, I have been really surprised with what it can do.</p>



<h2><strong>Blazor WebAssembly</strong></h2>



<p>This is the big one, the hosting model that usually gets most interest, and for good reason. This model offers a direct competitor to JavaScript SPAs such as Angular, VueJS, and React.</p>



<p>By using WebAssembly, we are able to write our UI logic using C# and not JavaScript. It&#8217;s currently in preview and due for release around May 2020.</p>



<figure class="wp-block-image"><img src="https://lh3.googleusercontent.com/mOlbeBLFNYCEl6CdctXBoadoKK3JRV2wONEStZmheeb0vJXwMPC8FEjDjjmvbH9Hoq_x2G8I03xX8hKlKdXi8azoWX5YXqAfPBLM1aHTWqjj_chj4l7FUjsQMDyT8rvOe55giwRK" alt=""/></figure>



<p>A version of the <a href="https://www.mono-project.com/">Mono .NET runtime</a>, compiled to WebAssembly, is downloaded to the client’s browser along with the application DLLs and any dependencies. Once everything is in the browser, the Mono runtime is bootstrapped, and it, in turn, loads and executes the application DLLs.</p>



<p>I&#8217;m going to address the first question that usually arises from hearing the above explanation, what is the download size? Well, the current preview weighs in at around 2.4mb, that&#8217;s pretty impressive considering there’s a .NET runtime involved. But I appreciate that this isn&#8217;t amazing when compared to some JavaScript frameworks. By the time the WebAssembly hosting model is released in May, the team hopes to cut that size significantly. The first prototype of Blazor used a very compact .NET runtime, which compiled to just 60k of WebAssembly code. I believe major size improvements are just a matter of time.</p>



<p>Currently, Blazor WebAssembly uses interpreted mode to load and run your application. In this mode, the Mono IL interpreter executes your applications .NET DLLs inside the browser. The only part of the process that is compiled to WebAssembly is the Mono runtime. In the future, the team are looking to allow developers to choose if their apps, or more likely parts of their apps, will be compiled to WebAssembly as well—This is known as AOT or Ahead Of Time compilation. The benefit of this mode is performance, the trade-off is a larger download size.</p>



<h3><strong>Benefits</strong></h3>



<ul><li>Compiles to static files, meaning there is no need for a .NET runtime on the server</li><li>Work is offloaded from the server to the client</li><li>Apps can be run in an offline state</li><li>Codesharing, C# objects can be shared between client and server easily</li></ul>



<h3><strong>Drawbacks</strong></h3>



<ul><li>Payload. Right now if you create a fresh new Blazor project, it weighs in at around 2.4mb. The team hopes to cut this down significantly come May.</li><li>Load time. Due to download size, devices on poor connections can experience longer initial load times.</li><li>Restricted runtime. Apps have to operate in the browser’s sandbox and are subject to the same security restrictions as any JavaScript application.</li></ul>



<h3><strong>Ideal use case</strong></h3>



<p>Blazor WebAssembly is built to be a direct competitor to modern JavaScript frameworks. Therefore, anywhere you would be looking to use one of those frameworks, you could consider Blazor. It&#8217;s also trivial to make Blazor WebAssembly apps into PWAs (Progressive Web Application). In fact, there will be an out of the box template for this coming in May.</p>



<p>It&#8217;s also important to point out that using Blazor WebAssembly doesn&#8217;t require you to use .NET on the server. Meaning if you have a backend written in Node, PHP, or Rails you can happily use Blazor as the frontend without any issues as Blazor WebAssembly compiles to static files.</p>



<h2><strong>What&#8217;s the future of Blazor?</strong></h2>



<p>With one hosting model in production already and another on the way shortly, let&#8217;s finish by turning our attention to the future.</p>



<p>Where do I see Blazor going? Coming back to my earlier thought around Blazor becoming a single UI framework for any .NET application. I think this is where Blazor is heading, in my opinion. If all of the current hosting models for Blazor move into production, and right now I can&#8217;t see why they wouldn&#8217;t, developers will have the option to learn a single programming model which they can use to create UIs anywhere. This is a big deal.</p>



<p>At a time where there are lots of discussions around the barrier for entry to .NET, with so many choices new developers to the platform have to face, Blazor could offer clarity when it comes to UI, a single programming model, learnt once and applied anywhere. For me, that&#8217;s the hype with Blazor.<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/26/whats-behind-the-hype-about-blazor/">What&#8217;s behind the hype about Blazor?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/26/whats-behind-the-hype-about-blazor/feed/</wfw:commentRss>
		<slash:comments>48</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15175</post-id>	</item>
		<item>
		<title>Sharing our first quarter 2020 community roadmap</title>
		<link>https://stackoverflow.blog/2020/02/25/sharing-our-first-quarter-2020-community-roadmap/</link>
				<comments>https://stackoverflow.blog/2020/02/25/sharing-our-first-quarter-2020-community-roadmap/#comments</comments>
				<pubDate>Tue, 25 Feb 2020 17:45:32 +0000</pubDate>
		<dc:creator><![CDATA[Teresa Dietrich]]></dc:creator>
				<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Community]]></category>
		<category><![CDATA[Company]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[announcements]]></category>
		<category><![CDATA[community]]></category>
		<category><![CDATA[roadmap]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15201</guid>
				<description><![CDATA[<p>Editor&#8217;s note: You can discuss this post on Meta here: https://meta.stackexchange.com/questions/344178/the-q1-2020-community-roadmap-is-on-the-blog/344209 As we work to improve our relationship and communications with our users, we want to share with you our community roadmap each quarter, so once every three months. Even though we are halfway through this quarter, we wanted to share with you what we…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/25/sharing-our-first-quarter-2020-community-roadmap/">Sharing our first quarter 2020 community roadmap</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p><em>Editor&#8217;s note: You can discuss this post on Meta here: </em> <a href="https://meta.stackexchange.com/questions/344178/the-q1-2020-community-roadmap-is-on-the-blog/344209">https://meta.stackexchange.com/questions/344178/the-q1-2020-community-roadmap-is-on-the-blog/344209</a> </p>



<p>As we work to improve our relationship and communications with our users, we want to share with you our community roadmap each quarter, so once every three months. Even though we are halfway through this quarter, we wanted to share with you what we are working on currently. In March, we will share our roadmap for the second quarter so that you can see what is coming.  After talks with employees, community managers, and community members, we chose four themes for our roadmap this year:</p>



<h2><strong>Understand our community</strong></h2>



<ul><li>We will seek to better understand our community and the user segments within it.&nbsp;</li><li>We will work to identify the pain points and needs of our users and deliver solutions to them through our features and initiatives.</li><li>By being increasingly transparent, we aim to regain trust with everyone—from brand new users to you, our most dedicated community members.</li></ul>



<h2><strong>Engage with our community</strong></h2>



<ul><li>As we better understand our community, we will share these learnings&nbsp; with the teams within the company whose decisions and actions impact you.</li><li>The employees at our company come from a variety of backgrounds and seek to grow with the community. We commit to helping everyone in the company learn about all of you and the site to empower them to make better decisions.</li><li>We will develop a community language, segmentation and metrics to educate the company and bring them along on the journey.</li></ul>



<h2><strong>Improve feedback metrics</strong></h2>



<ul><li>Our users have shared that they don’t feel heard by Stack Overflow. We will define a dashboard for the various types and methods of feedback and dedicate time to processes and outreach that identify ways we can be serving our users better and facilitating better two-way communications.</li></ul>



<h2><strong>Increase community engagement</strong></h2>



<ul><li>Though our active user base continues to grow, our engagement has remained the same. What this means is that while more users are coming to the site every month, the number of users who engage meaningfully in the site does not increase proportionally.</li><li>To change this dynamic, we will balance investing in improving our tools and features that benefit our long-term users with initiatives that convert new users into engaged ones.</li><li>We want to build long-term impact for as many of you as we can by providing useful features that deliver value to you. If engagement is not growing with the overall user base, a lower percentage of you are getting value from these interactions each year.</li><li>Working directly with targeted groups through UX research, we will identify and invest in features and tools that will improve the experience.</li></ul>



<figure class="wp-block-image size-large"><img src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/Community-Roadmap-HD.jpg" alt="" class="wp-image-15206" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/Community-Roadmap-HD.jpg 754w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/Community-Roadmap-HD-300x243.jpg 300w " sizes="(max-width: 754px) 100vw, 754px" /></figure>



<h2><strong>Understand community</strong></h2>



<p>In January, we launched our quarterly site satisfaction survey.&nbsp; This month, we launched our annual <a href="https://stackoverflow.blog/2020/02/05/the-2020-developer-survey-is-now-open/">Developer Survey</a>. Next month, we will be building out our Community Feedback Framework to identify all the various methods and data sources we will use to collect and analyze feedback from our users.&nbsp; Our goal is to ensure that we have balanced, consistent feedback from across the different segments of our community.<br></p>



<h2><strong>Engage with community</strong></h2>



<p>In January, we launched our monthly blog series “The Loop” to share research and feedback insights and methodology. Here you can find <a href="https://stackoverflow.blog/2020/01/22/the-loop-2-understanding-site-satisfaction-summer-2019/">January</a> and <a href="https://stackoverflow.blog/2020/02/17/community-working-group-updates-february-2020/">February</a>’s posts. This month, we updated our privacy policy and <a href="https://meta.stackexchange.com/questions/343568/privacy-policy-updates-feb-2020">shared an update on Meta</a>.&nbsp; This week we will be sharing our commitment to responding on SO Meta, SE Meta, and to our moderators through the publication of our new Meta engagement policy.&nbsp; Next month, we will be launching an internal company newsletter to share community knowledge and updates with our colleagues across the whole company.  We will also be working with our moderators on our updated Moderator Agreement in March.<br></p>



<h2><strong>Improve community feedback metrics</strong></h2>



<p>Elements of the <a href="https://stackoverflow.blog/2019/09/26/research-update-improving-the-question-asking-experience/">improved question asking experience</a> that was shipped to Stack Overflow last year will be rolled out to the international and network sites this week and next. This new UX provides a better question-asking flow that unifies the traditional and guided (“Ask Question Wizard”) modes and works equally well for users of all reputation and experience levels. The goal is to help users write better questions and set expectations once their question is posted. This should positively affect the question asking experience across the network, as well as give us a solid platform for potential future improvements in this area.<br></p>



<p>We are making fundamental changes to how our close question system works so that it’s a friendlier experience and more educational for post authors, while making it easier to edit and reopen closed questions, and reduce the burden on curators. Questions that get voted to be closed will be hidden, giving authors the opportunity to improve their questions in private. Our hope is to make it easier on everyone by providing clearer guidance and encouraging better questions. This project is broken down into a series of improvements that will be rolled out iteratively over the next few months, during which time we&#8217;ll be measuring to ensure each change contributes to overall question quality and to improved reopened questions.&nbsp;<br></p>



<p>We are hard at work putting together content for our moderator training and finding the right way to deliver our MVP version.&nbsp; For more details, check out the “Working with and supporting our moderators”  section of February’s <a href="https://stackoverflow.blog/2020/02/17/community-working-group-updates-february-2020/">The Loop.&nbsp;</a><br></p>



<h2><strong>Increase user engagement</strong></h2>



<p>We are launching a series of educational email campaigns for new users, non-active users, question askers, and question answerers. These series are designed to take a proactive approach in providing guidance and support for all users.</p>



<p>Next month we will release our Follow Questions capability (something that <a href="https://meta.stackexchange.com/questions/83343/adding-favorites-to-the-stack-exchange-global-inbox">has been discussed by the community for years</a>).<strong> </strong>This feature will allow users to “follow” or “unfollow” questions. You’ll be notified on new activity for questions you follow and have the ability to silence questions you no longer want to be notified about to reduce the noise you receive in your inbox.</p>



<p>We are sharing our roadmap to create transparency with our users.&nbsp; As with any product development, unanticipated complications may cause our dates to slip on occasion, but we are committed to delivering these initiatives and features to you as soon as we can.<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/25/sharing-our-first-quarter-2020-community-roadmap/">Sharing our first quarter 2020 community roadmap</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/25/sharing-our-first-quarter-2020-community-roadmap/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15201</post-id>	</item>
		<item>
		<title>Podcast &#8211; Anil Dash talks Glitch and Glimmer</title>
		<link>https://stackoverflow.blog/2020/02/25/podcast-anil-dash-glitch-glimmer/</link>
				<comments>https://stackoverflow.blog/2020/02/25/podcast-anil-dash-glitch-glimmer/#comments</comments>
				<pubDate>Tue, 25 Feb 2020 05:30:08 +0000</pubDate>
		<dc:creator><![CDATA[Ben Popper]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[The Stack Overflow Podcast]]></category>
		<category><![CDATA[anil dash]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[glimmer]]></category>
		<category><![CDATA[glitch]]></category>
		<category><![CDATA[podcast]]></category>
		<category><![CDATA[stackoverflow]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15196</guid>
				<description><![CDATA[<p>This week we chat with Anil Dash, CEO of Glitch and board member here at Stack Overflow. He breaks down the tech behind Glitch apps, explains why the company is launching an online magazine called Glimmer, and talks about the fight to keep the web weird, fun, and open to all. Glitch, a platform that…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/25/podcast-anil-dash-glitch-glimmer/">Podcast &#8211; Anil Dash talks Glitch and Glimmer</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<iframe height="200px" width="100%" frameborder="no" scrolling="no" seamless src="https://player.simplecast.com/a0a75b6c-fa8a-4fe8-ad3d-075b9ad23b64?dark=false"></iframe>



<p>This week we chat with Anil Dash, CEO of Glitch and board member here at Stack Overflow. He breaks down the tech behind Glitch apps, explains why the company is launching an online magazine called Glimmer, and talks about the fight to keep the web weird, fun, and open to all.</p>



<p>Glitch, a platform that makes it easy for anyone to create or remix a web app, has seen over five million apps created by users. You can read more about how it works <a href="https://glitch.com/edit/#!/glitchnomicon?path=README.md:1:0">here</a>. If you want to learn a little about how it works with Docker, check out this piece <a href="https://blog.maddevs.io/meet-glitch-com-429c423cf8e1">here</a>.</p>



<p>If you want to know more about the shared history of Stack and Glitch, you can read up on it <a href="https://medium.com/make-better-software/fog-creek-is-now-glitch-8d0308aaf69e">here</a>. TLDR; Glitch was born out of Fog Creek software and counts Joel Spolsky and Michael Pryor as founders.&nbsp;</p>



<p><a href="https://glitch.com/glimmer/post/glitch-glimmer-technology-culture-stories">Glimmer</a> is a new web magazine from the folks at Glitch. It focuses on creators and makers, with a special emphasis on unearthing the human stories of people building today&#8217;s software.</p>



<p>While you&#8217;re here, don&#8217;t forget to take 15-20 minutes and share your opinions in our <a href="https://stackoverflow.az1.qualtrics.com/jfe/form/SV_eL0mFVwuo7KWeXP?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=dev-survey-2020&amp;utm_content=reminder-blog&amp;site=stackoverflow.com">2020 Developer Survey</a>. Whether Stack Overflow helped you during your journey as a programmer or not, we want to hear from everyone who codes.&nbsp;</p>



<p>Some fun background for younger listeners:&nbsp;</p>



<p><a href="https://en.wikipedia.org/wiki/Yahoo!_GeoCities">Geocities</a> &#8211; a popular platform for building and hosting a personal website and linking it with others that share similar themes.&nbsp;</p>



<p><a href="https://observer.com/2011/03/we-got-the-betabeat-the-observer-tech-site-launches-tomorrow/">BetaBeat</a> &#8211; a website launched by <em>The NY Observer</em> that covered the SIlicon Alley tech scene. It was how Ben first met Anil, Joel, and many others.&nbsp;</p>



<p><a href="https://www.heroku.com/">Heroku</a></p>



<p><a href="https://www.docker.com/">Docker</a><br><br>If you have comments, questions, or suggestions, please send us an email at podcast@stackoverflow.com<br><br>Today’s episode is brought to you by Refinitiv. Unlock new possibilities with consistent, high-value market data from Refinitiv. Try the Refinitiv Eikon Data API for the largest breadth and depth of data and community tools with native Python support. Check out <a href="http://refinitiv.com/stackpodcast" target="_blank" rel="noreferrer noopener">refinitiv.com/stackpodcast</a> to try the Eikon Data API today. Refinitiv. Data is just the beginning.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/25/podcast-anil-dash-glitch-glimmer/">Podcast &#8211; Anil Dash talks Glitch and Glimmer</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/25/podcast-anil-dash-glitch-glimmer/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15196</post-id>	</item>
		<item>
		<title>How to onboard yourself when your employer doesn&#8217;t</title>
		<link>https://stackoverflow.blog/2020/02/24/how-to-onboard-yourself-when-your-employer-doesnt/</link>
				<comments>https://stackoverflow.blog/2020/02/24/how-to-onboard-yourself-when-your-employer-doesnt/#comments</comments>
				<pubDate>Mon, 24 Feb 2020 15:08:00 +0000</pubDate>
		<dc:creator><![CDATA[Matthew Gaiser]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[first job]]></category>
		<category><![CDATA[onboarding]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15184</guid>
				<description><![CDATA[<p>I had to onboard myself. Here are some of the things I learned on the path to being a fully contributing developer and a valuable member of the development team. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/24/how-to-onboard-yourself-when-your-employer-doesnt/">How to onboard yourself when your employer doesn&#8217;t</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>Starting a new job is intimidating. For the first few months, especially if you are a new grad, you just want an instruction book of what to do and how to achieve it. The best companies might have an in-depth onboarding process spanning weeks, but at others, you are shown your desk, sent a few resources by email, and must get yourself started on the path to productivity. </p>



<p>I was in the latter group just a few months ago. I work for a small development team which is part of a government agency. We are a group of just eight developers building and supporting systems that underpin $87 million in annual revenue as well as the parking management systems for cities throughout Western Canada. These capacity constraints simply did not allow for the creation of a comprehensive onboarding process. Plus, there would never be enough new hires to make it worth the effort.</p>



<p>Rather than despair, I decided to onboard myself. Here are some of the things I learned on the path to being a fully contributing developer and a valuable member of the development team. </p>



<h2>Determine the rules for how code is written&nbsp;</h2>



<p>Companies like Google are famous for their lengthy style guides. If printed out , their Java guide alone is 20 pages in length. Other companies are satisfied so long as your code compiles and the unit tests pass. Most companies are somewhere in the middle. </p>



<p>Some companies mandate a particular integrated development environment (IDE), others strongly prefer a particular IDE but give developers some flexibility, and others are agnostic on the tools you use. </p>



<p>Some companies want everyone to use a specific linter or require comments in certain places. Others may not have any requirement other than that the code be neat and clear. <br><br>There may also be other unique rules. For example, at my organization, we have specific standards for getters and setters. Instead of generating them by hand or with an IDE, we use the @Data annotation from Project Lombok, which ensures that all getters and setters follow a standard format. <br><br>Try to figure out all these rules before you are deep into setting up your development environment for the first time or writing your first contribution. It is frustrating to do work and then be asked to redo it because you did not know the rules. </p>



<h2>Spend the first few weeks learning the technology stack directly</h2>



<p>Our stack consists of Spring, React, PostgreSQL, and Hibernate. When I started, I had a few weeks experience with Postgres and React and had never used Spring or Hibernate. If you are a developer in this position, your new boss is likely aware that you did not come with a complete set of knowledge. <br><br>Those first few weeks are your opportunity to build the knowledge you will need to rapidly become productive in your new job. Go and find lengthy tutorials in your favorite learning format and block out time to work through the projects they have you develop. Ask what kind of documentation your company hasand take time to read it all thoroughly.<br><br>There are two reasons to take this approach instead of just diving into the codebase, which was my approach during my first software engineering internship. </p>



<p><br>Firstly, learning from the codebase means that you will adopt all the poor habits and practices of the programmer who came before you. Just because code made it into production, it does not mean it was well done. It might have a traditional &#8220;for loop&#8221; that should really have been a foreach or map. Maybe it fails to follow separation of concerns for that particular framework. Several controllers in our codebase have an enormous amount of business logic that belongs in the service layer. <br><br>Second, it is quite possible that the codebase is out of date, the technology has changed, or that the relevant concepts cannot easily be learned from reading the code. Simply learning from our codebase, I would never have learned about React hooks and would have spent a great deal of time wondering what exactly @Transactional does in Spring. </p>



<h2>The path of code to production can vary tremendously. Take notes.&nbsp;</h2>



<p><strong><br></strong>A past company I worked for took code from local to production right after code review. Developers were expected to create a merge request directly onto the master branch. If nobody else was in the office, it was acceptable to push directly onto the master.&nbsp;</p>



<p><br>I did that for one of my first bug fixes at my new job and that elicited messages from more senior people telling me I should not have done that. Only QA is permitted to merge onto master here.&nbsp;</p>



<p><br>Your company may also have an unofficial path, one which gets used for bug fixes or nearing the end of the sprint. We have an intermediary step between code review and QA called DEV which often gets skipped. Code review and unit testing also become lighter during periods of heavy load or approaching deadlines. However, QA never gets skipped. <br><br>Processes may vary. Find out what they are.&nbsp;</p>



<h2>Learn to balance both business and engineering goals</h2>



<p>In an ideal world, there would be plenty of time to add more unit and integration tests, refactor, and get the views of every team member on the architecture. In the real world, clients want features, senior management wants to hear about progress, the people with the expertise go on vacation for weeks, and deadlines do not disappear just because a bug was hard to find or difficult to fix. <br><br>At most companies, that means certain compromises will be made. Some companies will push the client to accept a later deadline or management to accept a longer timeframe to do a better job of the engineering work. Other times, it is more valued by management to hit the sprint goals and just use more glue to get things to hold together because of client demands or business needs. <br><br>You probably have a minimal level of say in which path gets taken, but you want to plan your development work to fit the chosen strategy. You should quickly learn if two components with small bugs or one component without bugs is preferred by your co-workers/leadership by the end of the sprint. <br><br></p>



<h2>Most early problems have solutions, so ask questions quickly</h2>



<p>On my first day, I spent four hours wondering why the main project repository I had just cloned would not compile. I read the build instructions over and over, but couldn’t find where I might have gone wrong. Not wanting to look foolish, I spent that time hunting for things that might cause Maven (a Java build tool) to fail. <br><br>It turned out that I was just missing a few configuration arguments to specify which properties file I should use. The colleague I asked about the problem recognized it in two minutes. I could easily have wasted another day or two trying every obscure combination of things which could cause a build to fail. <br><br>In the first few days, things that seem like they should be easy usually are.&nbsp;</p>



<h2>Learn to have effective conversations with the non-technicals&nbsp;&nbsp;</h2>



<p>Unless your product is a build tool or integrated development environment, there are probably non-technical people who are making decisions regarding your project. It might be the CEO overseeing the company’s flagship product. It could be the manager of the department which will primarily use what you are building. It might be the salesperson who has to go out and get people to buy your software. </p>



<p><br>As much as we developers would love to blame miscommunication on the technical ignorance of others, no matter who is to blame, we are still the ones who must redo the work when it does not meet the actual need of the end user.&nbsp;</p>



<p><br>At the very least, these conversations will help you understand the motivations behind why the company behaves as it does. The best case scenario is that costly miscommunications are avoided and nobody is attempting to blame you for a delay in the project.&nbsp;</p>



<p>So how does one do this? One approach I like is to use analogies. I recently had to explain why it was so significant to know whether something would be a one to one relationship or a one to many relationship before development started. In a one to one relationship, one might just add a new database column for that entity and modifying the existing service. In a one to many relationship, a new table would be required, a new entity would be needed, and a new service would need to be built. </p>



<p>I explained it as having one child compared to two at the zoo. If you only need to look after one child, it is perfectly effective to carry them in your arms or on your shoulders and have everything they need in a backpack. They can be left to run around freely as you can always be paying attention to that one child.&nbsp; If you have two children, you cannot easily carry them both yourself. You will want a stroller with space for two. The supplies needed for both might be getting heavy, so some storage in the stroller would also be desirable. You might want another adult to come along to help you. That makes a trip to the zoo with one parent and one child far less complex than one parent taking two children to the zoo.&nbsp;</p>



<p>Another thing which has cut down on repeated work is a frontend first approach. I work on a project where most of the stakeholders are non-technical, so they understand the project through the user interface. Instead of completing all the work and then presenting the concept during stakeholder engagement sessions, the proposed frontend is sometimes built beforehand, approved, and then the backend work is completed.&nbsp;</p>



<h2>Find skill deficiencies and try to fill them&nbsp;</h2>



<p>Most companies have evolving technical needs. In my job, our latest project is both client facing and user facing, which requires that the user interfaces be more responsive and pleasingly designed than for internal applications. So far, the sprints have been overwhelmingly comprised of React work, something which only one other developer on my team had experience with prior to the project kick off. <br><br>While I had less experience overall, this deficit made it easier for me to contribute more quickly&nbsp; simply because I was just as skilled at React as most other members of the team. <br><br></p>



<h2>Keep a notepad nearby, as important information may be just on someone’s lips&nbsp;</h2>



<p>Information management is something most companies struggle with and it is rare for everything important to make it into the design document, if one exists at all. Crucial information for some of my tasks has often just been mentioned by one stakeholder casually in a meeting.&nbsp;</p>



<p><br>If you keep a notepad and pen nearby, you can randomly jot down all the seemingly important things that you hear and clarify it later. Instead, you are faced with the prospect of building a module incorrectly and needing to re-engineer it after sprint review.&nbsp;</p>



<p>While intimidating, the lack of a formal onboarding process can allow you more freedom to approach the job as you see fit and once you have an action plan, it is not all that different from a formalized onboarding process except for the fact that you created it yourself.&nbsp;</p>



<p><strong>Good luck in your new role. </strong>Even if you don’t get a proper onboarding, you should have the tools to do the job yourself.&nbsp;<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/24/how-to-onboard-yourself-when-your-employer-doesnt/">How to onboard yourself when your employer doesn&#8217;t</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/24/how-to-onboard-yourself-when-your-employer-doesnt/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15184</post-id>	</item>
		<item>
		<title>Ben Popper is the Worst Coder : Complexity is the Constant</title>
		<link>https://stackoverflow.blog/2020/02/22/ben-popper-is-the-worst-coder-5-complexity-is-the-constant/</link>
				<comments>https://stackoverflow.blog/2020/02/22/ben-popper-is-the-worst-coder-5-complexity-is-the-constant/#comments</comments>
				<pubDate>Sat, 22 Feb 2020 13:05:00 +0000</pubDate>
		<dc:creator><![CDATA[Ben Popper]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[change management]]></category>
		<category><![CDATA[go]]></category>
		<category><![CDATA[rust]]></category>
		<category><![CDATA[stack overflow]]></category>
		<category><![CDATA[stackoverflow]]></category>
		<category><![CDATA[worst coder in the world]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15166</guid>
				<description><![CDATA[<p>Why bother to learn a programming language when it will be out of date by the time I master it?</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/22/ben-popper-is-the-worst-coder-5-complexity-is-the-constant/">Ben Popper is the Worst Coder : Complexity is the Constant</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p><em>This is part 5 of an ongoing series detailing my journey from total noob to hobbyist coder. I share my thoughts as I learn the basics of programming. You can find the rest of the series <a href="https://stackoverflow.blog/tag/worst-coder-in-the-world/">here</a>.</em></p>



<p>One of the challenging things about learning to code is that while you are still mastering the basics of fundamental languages, the whole ecosystem seems to be evolving at a breakneck pace. By the time I get a handle on CSS, everyone will scoff at folks who don’t use React. Why learn C or Python when I could be <a href="https://stackoverflow.blog/2019/10/07/how-salesforce-converted-einstein-analytics-to-go/">using Go</a>? Why bother with Go when I could devote myself <a href="https://blog.discordapp.com/why-discord-is-switching-from-go-to-rust-a190bbca2b1f">to Rust</a> instead? If Ruby is the language that helps beginners fall in love with programming, why didn’t anyone tell me that at the start?<br></p>



<p>Charles Martin, a veteran software engineer and consultant, <a href="https://stackoverflow.blog/2020/02/20/requirements-volatility-is-the-core-problem-of-software-engineering/">wrote a piece</a> for our our blog this week that touched on this idea same idea in a slightly different way:<br></p>



<p><em>Start by accepting that change is inevitable.&nbsp;</em><br></p>



<p><em>Any project, no matter how well planned, will result in something that is at least somewhat different than what was first envisioned. Development processes must accept this and be prepared to cope with it.&nbsp;</em><br></p>



<p><em>As a consequence of this, software is never finished, only abandoned.</em><br></p>



<p><em>We like to make a special, crisply-defined point at which a development project is “finished.” The reality, however, is that any fixed time at which we say “it’s done” is just an artificial dividing line. New features, revised features, and bug fixes will start to come in the moment the “finished” product is delivered. (Actually, there will be changes that are still needed, representing technical debt and deferred requirements, at the very moment the software is released.)</em></p>



<p>Terrifying! These realizations can, if you’re not careful, lead to a sort of paralysis, a <a href="https://en.wikipedia.org/wiki/Zeno%27s_paradoxes">Zeno’s Paradox</a> of programming in which the start of any journey inevitably reveals the impossibility of an end.&nbsp;<br></p>



<p>I was chatting with <a href="https://stackoverflow.blog/2020/02/04/podcast-your-buddy-is-typing-teresa-dietrich/">Teresa Dietrich</a>, our new chief product officer, about this conundrum. She has been working in technology for three decades, and seen plenty of trends come and go. “Every few years we have this brand new architecture and it&#8217;s going to change the world, right? The truth, however, is that you cannot remove complexity from a system.” Every system involves not just code, she explained, but the folks who write it, maintain it, and rely on it. “It’s people, process, and technology. What happens when a new software architecture comes along? You have to ask, where did you move the complexity?”&nbsp;<br></p>



<p>This way of thinking about the situation struck a chord with me. It’s almost a fundamental law of nature<strong>: complexity is a constant</strong>. Bringing a new programming language into the picture might solve some pain points or produce some gains in speed and cost. But now your code base has five languages, not four. How does that trickle down across the expertise of the hires you’ve made over the last few years? And the support engineers who sit on another continent, who handle crises for customers in seven different spoken languages. “If we really decide a new coding language is a priority and is going to move the needle, can we step back and find another language to deprecate at the same time?&#8221; asked Teresa.</p>



<p>Our brains learn to recognize patterns over time, and that makes certain approaches seem more intuitive. Here’s a nice quote from <a href="https://reasonablypolymorphic.com/book/preface">an article</a> by Sandy Maguire, which has been introducing me to if, and, or, and nand. </p>



<p>“While computer science has very little to do with snowmen, it has everything to do with patterns. The study of computer science, like mathematics, is one of overwhelming self-referentiality. The patterns that seemed so difficult and novel yesterday are today’s run-of-the-mill building blocks. Like a snowball rolling down a mountain, the student of computer science cannot help but gain momentum as these concepts begin converge in one huge avalanche.”</p>



<p>There are lots of ways to express this universal truth, but I tend to favor dark humor. Let me know your own stories about code, complexity, and infinite choice in the comments.&nbsp;</p>



<blockquote class="twitter-tweet"><p lang="en" dir="ltr">All languages were created equal, but some were created more === than others.</p>— Arne Mæhlum (@arnemahl) <a href="https://twitter.com/arnemahl/status/1223575470425411589?ref_src=twsrc%5Etfw">February 1, 2020</a></blockquote> <script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/22/ben-popper-is-the-worst-coder-5-complexity-is-the-constant/">Ben Popper is the Worst Coder : Complexity is the Constant</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/22/ben-popper-is-the-worst-coder-5-complexity-is-the-constant/feed/</wfw:commentRss>
		<slash:comments>24</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15166</post-id>	</item>
		<item>
		<title>The Overflow #11: Efficiently lazy</title>
		<link>https://stackoverflow.blog/2020/02/21/the-overflow-11-efficiently-lazy/</link>
				<comments>https://stackoverflow.blog/2020/02/21/the-overflow-11-efficiently-lazy/#comments</comments>
				<pubDate>Fri, 21 Feb 2020 15:58:41 +0000</pubDate>
		<dc:creator><![CDATA[Ryan Donovan]]></dc:creator>
				<category><![CDATA[Announcements]]></category>
		<category><![CDATA[The Overflow]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[newsletter]]></category>
		<category><![CDATA[the overflow]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15148</guid>
				<description><![CDATA[<p>February 2020 Welcome to ISSUE #11 of The Overflow, a newsletter by developers, for developers, written and curated by the Stack Overflow team and Cassidy Williams of React Training. You can read more about it here. In this week&#8217;s newsletter, we&#8217;re efficiently lazy, calculating probabilities in chocolates, and thinking about how to maintain open source.…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/21/the-overflow-11-efficiently-lazy/">The Overflow #11: Efficiently lazy</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<style>
        /* What it does: Hover styles for buttons and tags */
        .s-btn__primary:hover {
            background: #0077CC !important;
            border-color: #0077CC !important;
        }
        .s-btn__white:hover {
            background: #EFF0F1 !important;
            border-color: #EFF0F1 !important;
        }
        .s-btn__outlined:hover {
            background: rgba(0,119,204,.05) !important;
            color: #005999 !important;
        }
        .s-tag:hover,
        .post-tag:hover {
            border-color: #cee0ed !important;
            background: #cee0ed !important;
        }

        /* What it does: Styles markdown links that we can't write inline CSS for. */
        .has-markdown a,
        .has-markdown a:visited {
            color: #0077CC !important;
            text-decoration: none !important;
        }

        /* What it does: Styles markdown code blocks that we can't write inline CSS for. */
        code {
            padding: 1px 5px;
            background-color: #EFF0F1;
            color: #242729;
            font-size: 13px;
            line-height: inherit;
            font-family: 'Roboto Slab', arial, sans;
        }
        pre {
            margin: 0 0 15px;
            line-height: 17px;
            background-color: #EFF0F1;
            padding: 4px 8px;
            border-radius: 3px;
            overflow-x: auto;
        }
        pre code {
            margin: 0 0 15px;
            padding: 0;
            line-height: 17px;
            background-color: none;
        }

        /* What it does: Styles markdown blockquotes that we can't write inline CSS for. */
        blockquote {
            margin: 0 0 15px;
            padding: 4px 10px;
            background-color: #FFF8DC;
            border-left: 2px solid #ffeb8e;
        }
        blockquote p {
            padding: 4px 0;
            margin: 0;
            overflow-wrap: break-word;
        }

        /* What it does: Rounds corners in email clients that support it */
        .bar {
            border-radius: 5px;
        }
        .btr {
            border-top-left-radius: 5px;
            border-top-right-radius: 5px;
        }
        .bbr {
            border-bottom-left-radius: 5px;
            border-bottom-right-radius: 5px;
        }

         /* Visually center The Overflow logo */
       .adjust-logo {
            padding-left: 15px;
        }

        @media screen and (max-width: 680px) {
            /* What it does: Forces table cells into full-width rows. */
            .stack-column,
            .stack-column-center {
                display: block !important;
                width: 100% !important;
                max-width: 100% !important;
                direction: ltr !important;
            }
            /* And center justify these ones. */
            .stack-column-center {
                text-align: center !important;
            }

            /* Hides things in small viewports. */
            .hide-on-mobile {
                display: none !important;
                max-height: 0 !important;
                overflow: hidden !important;
                visibility: hidden !important;
            }

            /* What it does: Utility classes to reduce spacing for smaller viewports. */
            .sm-p-none  {padding: 0 !important;}
            .sm-pt-none {padding-top: 0 !important;}
            .sm-pb-none {padding-bottom: 0 !important;}
            .sm-pr-none {padding-right: 0 !important;}
            .sm-pl-none {padding-left: 0 !important;}
            .sm-px-none {padding-left: 0 !important; padding-right: 0 !important;}
            .sm-py-none {padding-top: 0 !important; padding-bottom: 0 !important;}

            .sm-p   {padding: 20px !important;}
            .sm-pt  {padding-top: 20px !important;}
            .sm-pb  {padding-bottom: 20px !important;}
            .sm-pr  {padding-right: 20px !important;}
            .sm-pl  {padding-left: 20px !important;}
            .sm-px  {padding-left: 20px !important; padding-right: 20px !important;}
            .sm-py  {padding-top: 20px !important; padding-bottom: 20px !important;}
            .sm-mb  {margin-bottom: 20px !important;}

            /* What it does: Utility classes to kill border radius for smaller viewports. Used mainly on the email's main container(s). */
            .bar,
            .btr,
            .bbr {
                border-top-left-radius: 0;
                border-top-right-radius: 0;
                border-bottom-left-radius: 0;
                border-bottom-right-radius: 0;
            }

           .adjust-logo {
                padding-left: 0;
            }

        }
    </style>
    <!-- Progressive Enhancements : END -->

    <!-- Hubspot data-hse-inline-css -->
    <style type="text/css" data-hse-inline-css="true">
        .has-markdown a,
        .has-markdown a:visited {
            color: #0077CC !important;
            text-decoration: none !important;

        }
    </style>
 <table border="0" cellpadding="0" cellspacing="0" role="presentation" style="max-width: 680px; width:100%">
<tr>
                    <td style="padding: 0 30px; background-color: #ffffff;" class="sm-px bar">
                        <table border="0" cellpadding="0" cellspacing="0" role="presentation" style="width:100%; font-family: arial, sans-serif; font-size: 15px; line-height: 21px; color: #3C3F44; text-align: left;">
                            <!-- Header : BEGIN -->
                            <tr>
                                <td style="padding-top: 20px; text-align: center;" class="adjust-logo">
                                    <h1 style="text-align: center; margin: 0; line-height: 1;">
                                        <img src="https://d2axdqolvqmdvx.cloudfront.net/5a861290-bdcc-4f59-af25-6c5bc0b9eb29/logotheoverflow.png" alt="The Overflow." height="" width="354" border="0" style="width: 100%; max-width: 354px; height: auto; display: block; margin: 0 auto; font-weight: normal; font-family: arial, sans-serif; font-size: 15px; color: #3C3F44;">
                                    </h1>
                                </td>
                            </tr>
                            <tr>
                                <td style="padding-bottom: 10px; font-family: 'Roboto Slab', arial, sans; font-size: 12px; line-height: 15px; color: #848D95; text-align: center; text-transform: uppercase; letter-spacing: .1em;" class="unstyle-auto-detected-links">
                                    February 2020
                                </td>
                            </tr>
                            <!-- Header : END -->
                            <!-- Intro : BEGIN -->
                            <tr>
                                <td style="padding-top: 20px;">
                                    <p style="margin: 0 0 30px;">
                                      Welcome to ISSUE #11 of The Overflow, a newsletter by developers, for developers, written and curated by the Stack Overflow team and <a href="https://cassidoo.co/" style="color: #0077cc; text-decoration: none;">Cassidy Williams</a> of <a href="https://reacttraining.com/" style="color: #0077cc; text-decoration: none;">React Training</a>. You can read more about it <a href="https://stackoverflow.blog/2019/10/01/introducing-overflow-newsletter-cassidy-williams" style="color: #0077cc; text-decoration: none;">here</a>. In this week&#8217;s newsletter, we&#8217;re efficiently lazy, calculating probabilities in chocolates, and thinking about how to maintain open source. 
                                </td>
                            </tr>
                            <!-- Intro : END -->
                            <!-- Section : BEGIN -->
                            <tr>
                                <td style="padding: 30px 0 0; border-top: 1px solid #D6D8DB;" class="sm-pt">
                                    <table border="0" cellpadding="0" cellspacing="0" role="presentation">
                                        <tr>
                                            <td style="vertical-align: middle; padding: 0 10px 20px 0;">
                                                <img src="https://d2axdqolvqmdvx.cloudfront.net/d7aaecb9-5ebc-493a-be56-59637e03b531/iconblog2x.png" height="26" width="26" border="0" alt="" style="display: block; font-family: arial, sans-serif; font-size: 15px; line-height: 15px; color: #3C3F44;">
                                            </td>
                                            <td style="vertical-align: middle; padding-bottom: 20px;">
                                                <h2 style="margin: 0; font-family: 'Roboto Slab', arial, sans; font-size: 19px; line-height: 19px; font-weight: bold; color: #3C3F44;">
                                                    From the blog
                                                </h2>
                                            </td>
                                        </tr>
                                    </table>
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://stackoverflow.blog/2020/02/12/when-laziness-is-efficient-make-the-most-of-your-command-line/" style="font-weight: bold; color: #0077cc; text-decoration: none;">When laziness is efficient: Make the most of your command line</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">stackoverflow.blog</span><br>
                                          If you’re looking to get faster and more efficient on your command line, take a few tips from a lazy DevOps pro. You’ll be a terminal wizard in no time. 


                                         
                                           <p style="margin: 0 0 30px;">
                                        <a href="https://stackoverflow.blog/2020/02/18/podcast-coaching-a-developer-interview/" style="font-weight: bold; color: #0077cc; text-decoration: none;">Podcast: Coaching a Developer Interview</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">stackoverflow.blog</span><br>
                                           We try to climb the teetering tower of abstraction, examine a human readable magazine on computing, and prepare for Y2038.


                                    </p>
                                      <p style="margin: 0 0 30px;" style="display: block;">
                                        <a href="https://stackoverflow.com/dev-survey/start?utm_source=so-owned&#038;utm_medium=newsletter&#038;utm_campaign=dev-survey-2020&#038;utm_content=the-overflow-survey" style="font-weight: bold; color: #0077cc; text-decoration: none;">Take the 2020 Developer Survey</a> <br>
                                          Technology changes so much every year. So do the people creating it. Fill out our Developer Survey and tell us how you code in 2020.
                                    </p>
                                      <p style="margin: 0 0 30px;" style="display: block;">
                                        <a href="https://www.couchbase.com/downloads?utm_source=stack_overflow&#038;utm_medium=newsletter&#038;utm_campaign=dev_awareness" style="font-weight: bold; color: #0077cc; text-decoration: none;">Couchbase – Power of SQL with the flexibility of JSON</a> <span style="color: #6A737C; font-size: 12px; line-height: 12px; border: 3px solid #FFEEA9; background-color: #FFEEA9; display: inline-block; border-radius: 3px;">promotion</span><br>
                                        Couchbase is an open source NoSQL database that gives developers unmatched flexibility. It supports SQL and analytical queries for JSON data and technologies including Kubernetes, Java, .NET, JavaScript, Go, and Python. Start using it for free now.

                                    </p>
                                         
                                       
                            <!-- Section : END -->
                            <!-- Section : BEGIN -->
                            <tr>
                                <td style="padding: 30px 0 0; border-top: 1px solid #D6D8DB;" class="sm-pt">
                                    <table border="0" cellpadding="0" cellspacing="0" role="presentation">
                                        <tr>
                                            <td style="vertical-align: middle; padding: 0 10px 20px 0;">
                                                <img src="https://d2axdqolvqmdvx.cloudfront.net/8da5bcb5-7dbe-4415-88a5-476c819ff156/iconqa2x.png" height="26" width="26" border="0" alt="" style="display: block; font-family: arial, sans-serif; font-size: 15px; line-height: 15px; color: #3C3F44;">
                                            </td>
                                            <td style="vertical-align: middle; padding-bottom: 20px;">
                                                <h2 style="margin: 0; font-family: 'Roboto Slab', arial, sans; font-size: 19px; line-height: 19px; font-weight: bold; color: #3C3F44;">
                                                    Interesting questions
                                                </h2>
                                            </td>
                                        </tr>
                                    </table>
                                    
                                     <p style="margin: 0 0 30px;"><i> Found a good question or answer? Share it with the hashtag #StackOverflowKnows. We’ll include our favorites in the future.  </i></p>
                                    
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://softwareengineering.stackexchange.com/questions/405038/result-object-vs-throwing-exceptions" style="font-weight: bold; color: #0077cc; text-decoration: none;">Result object vs throwing exceptions</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">softwareengineering.stackexchange.com</span><br>
                                           When a losing ticket for the lottery might be a ‘happy path’


                                    </p>
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://stackoverflow.com/questions/59925618/how-do-i-make-an-infinite-empty-loop-that-wont-be-optimized-away" style="font-weight: bold; color: #0077cc; text-decoration: none;">How do I make an infinite empty loop that won&#8217;t be optimized away?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">stackoverflow.com</span><br>
                                  Stop optimizing away my infinite loops, you guys!
                                    </p>
                                    
                                    
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://math.stackexchange.com/questions/3545136/probability-of-collecting-all-5-buying-7-chocolates" style="font-weight: bold; color: #0077cc; text-decoration: none;">Probability of collecting 5 of 5 tickets by buying 7 chocolates?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">math.stackexchange.com</span><br>
                                           Research is as good a reason as any to start buying chocolate.   
                                    </p> 
                                    
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://gamedev.stackexchange.com/questions/179039/how-do-we-convey-scale-in-2d-games" style="font-weight: bold; color: #0077cc; text-decoration: none;">How do we convey scale in 2D games?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">gamedev.stackexchange.com</span><br>
                                           Without one of the three dimensions, what&#8217;s keeping 2D games from being big flat messes? 
                                    
                                    </p> 
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://superuser.com/questions/1524937/what-prevents-me-from-setting-up-an-a-name-entry-for-google-ca-to-whatever-ip  " style="font-weight: bold; color: #0077cc; text-decoration: none;">What prevents me from setting up an A name entry for “google.ca” to whatever IP I want?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">superuser.com</span><br>
                                           Nothing is stopping you. However, nobody will see your entry either.
                                    </p>
                                </td>
                            </tr>
                            <!-- Section : END -->
                            <!-- Section : BEGIN -->
                            <tr>
                                <td style="padding: 30px 0 0; border-top: 1px solid #D6D8DB;" class="sm-pt">
                                    <table border="0" cellpadding="0" cellspacing="0" role="presentation">
                                        <tr>
                                            <td style="vertical-align: middle; padding: 0 10px 20px 0;">
                                                <img src="https://d2axdqolvqmdvx.cloudfront.net/fae18822-12a0-46de-bab8-ddb30242697d/iconlinks2x.png" height="26" width="26" border="0" alt="" style="display: block; font-family: arial, sans-serif; font-size: 15px; line-height: 15px; color: #3C3F44;">
                                            </td>
                                            <td style="vertical-align: middle; padding-bottom: 20px;">
                                                <h2 style="margin: 0; font-family: 'Roboto Slab', arial, sans; font-size: 19px; line-height: 19px; font-weight: bold; color: #3C3F44;">
                                                    Links from around the web
                                                </h2>
                                            </td>
                                        </tr>
                                    </table>
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://dannyvankooten.com/website-carbon-emissions/" style="font-weight: bold; color: #0077cc; text-decoration: none;">CO2 emissions on the web</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">dannyvankooten.com</span><br>
                                       Here&#8217;s something you might not have thought about before: the CO2 emissions your website produces! This is a great blog with lots of resources to get you thinking more about efficiency and hosting.
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://www.twilio.com/blog/html-attributes-two-factor-authentication-autocomplete" style="font-weight: bold; color: #0077cc; text-decoration: none;">HTML attributes to improve your users&#8217; two factor authentication experience</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">twilio.com</span><br>
                                          Yes, 2-factor authentication is secure, but it can be a pain sometimes! Here&#8217;s a great post on how to make life a little easier on users who have it enabled on your sites.

                                    </p>
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://www.welcometothejungle.com/en/articles/btc-discussion-open-source-maintenance" style="font-weight: bold; color: #0077cc; text-decoration: none;">Under Discussion: The maintenance of open-source projects</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">welcometothejungle.com</span><br>
                                    We all use open source libraries at some point in our careers as developers. But what does it take to keep them current?

                                    </p>
                                   
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://dev.to/lunaticmonk/understanding-the-node-js-event-loop-phases-and-how-it-executes-the-javascript-code-1j9" style="font-weight: bold; color: #0077cc; text-decoration: none;">Understanding the Node.js event loop phases and how it executes the JavaScript code.</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">dev.to</span><br>
                                    This is a really solid look into the architecture of the Node.js event loop, which is an important topic to understand if you&#8217;re working on Node-driven projects!

                                    </p>
                                    
                                    
                                    
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://arsfutura.co/magazine/deep-linking-in-react-native/" style="font-weight: bold; color: #0077cc; text-decoration: none;">Deep Linking in React Native</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">arsfutura.co</span><br>
                                          Here&#8217;s a deeper (pun intended) explanation of what they are, and how to build them into React Native apps.
                                    </p>
                                   
                                    
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://www.youtube.com/watch?v=qN8AbHpCRF0" style="font-weight: bold; color: #0077cc; text-decoration: none;">Can an 80s computer beat a new one at Chess?! Amiga vs Mac <img src="https://s.w.org/images/core/emoji/12.0.0-1/72x72/265f.png" alt="♟" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f579.png" alt="🕹" class="wp-smiley" style="height: 1em; max-height: 1em;" /> 1987 vs 2020</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">youtube.com</span><br>
                                       What happens when you try to use a 1987 Commodore Amiga 500 chess AI to beat a 2019 MacBook at chess? Luckily, these people found the answer.
                                            </p>
                                    
                                </td>
                            </tr>
                            <!-- Section : END -->
                            <!-- Bumper : BEGIN -->
                            <tr>
                                <td style="text-align: center; line-height: 1;">
                                    <img src="https://d2axdqolvqmdvx.cloudfront.net/62687153-bbaa-4c83-bd65-6047d51b261a/footer2x.png" alt="" height="" width="581" border="0" style="width: 100%; max-width: 581px; height: auto; display: block; margin: 0 auto; font-weight: normal; font-family: arial, sans-serif; font-size: 15px; color: #3C3F44;">
                                </td>
                            </tr>
                            <!-- Bumper : BEGIN -->
                        </table>
                    </td>
                </tr>
</table>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/21/the-overflow-11-efficiently-lazy/">The Overflow #11: Efficiently lazy</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/21/the-overflow-11-efficiently-lazy/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15148</post-id>	</item>
		<item>
		<title>Requirements volatility is the core problem of software engineering</title>
		<link>https://stackoverflow.blog/2020/02/20/requirements-volatility-is-the-core-problem-of-software-engineering/</link>
				<comments>https://stackoverflow.blog/2020/02/20/requirements-volatility-is-the-core-problem-of-software-engineering/#comments</comments>
				<pubDate>Thu, 20 Feb 2020 15:37:54 +0000</pubDate>
		<dc:creator><![CDATA[Charles R. Martin]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[agile]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[process]]></category>
		<category><![CDATA[software engineering]]></category>
		<category><![CDATA[stackoverflow]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15131</guid>
				<description><![CDATA[<p>It's now been more than 50 years since the first IFIP Conference on Software Engineering, and in that time there have been many different software engineering methodologies, processes, and models proposed to help software developers achieve that predictable and cost-effective process. But 50 years later, we still seem to see the same kinds of problems we always have: late delivery, unsatisfactory results, and complete project failures.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/20/requirements-volatility-is-the-core-problem-of-software-engineering/">Requirements volatility is the core problem of software engineering</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>The reason we develop software is to meet the needs of some customer, client, user, or market. The goal of software engineering is to make that development predictable and cost-effective.&nbsp;</p>



<p>It&#8217;s now been more than 50 years since the first <a href="http://homepages.cs.ncl.ac.uk/brian.randell/NATO/NATOReports/">IFIP Conference on Software Engineering</a>, and in that time there have been many different software engineering methodologies, processes, and models proposed to help software developers achieve that predictable and cost-effective process. But 50 years later, we still seem to see the same kinds of problems we always have: late delivery, unsatisfactory results, and complete project failures.</p>



<p>Take a government contract I worked on years ago. It is undoubtedly the most successful project I&#8217;ve ever worked on, at least from the standpoint of the usual project management metrics: it was completed early, it was completed under budget, and it completed a scheduled month-long acceptance test in three days.</p>



<p>This project operated under some unusual constraints: the contract was denominated and paid in a foreign currency and was absolutely firm fixed-price, with no change management process in the contract at all. In fact, as part of the contract, the acceptance test was laid out as a series of observable, do-this and this-follows tests that could be checked off, yes or no, with very little room for dispute. Because of the terms of the contract, all the risk of any variation in requirements or in foreign exchange rates were on my company.</p>



<p>The process was absolutely, firmly, the classical waterfall, and we proceeded through the steps with confidence, until the final system was completed, delivered, and the acceptance test was, well, accepted.</p>



<p>After which I spend another 18 months with the system, modifying it until it actually satisfied the customers needs.&nbsp;</p>



<p>In the intervening year between the contract being signed and the software being delivered, reporting formats had changed, some components of the hardware platform were superseded by new and better products, and regulatory changes were made to which the system must respond.&nbsp;</p>



<p>Requirements change. Every software engineering project will face this hard problem at some point.</p>



<p>With this in mind, all software development processes can be seen as different responses to this essential truth. The original (and naive) waterfall process simply assumed that you could start with a firm statement of the requirements to be met.</p>



<p>W.W. Royce is credited with first observing the waterfall in his paper &#8220;<a href="http://www-scf.usc.edu/~csci201/lectures/Lecture11/royce1970.pdf">Managing the Development of Large Software Systems</a>,&#8221; and the illustrations in hundreds of software engineering papers, textbooks, and articles are recognizably the diagrams that he created. But what&#8217;s often forgotten in Royce&#8217;s original paper is that he also says &#8220;[The] implementation [in the diagram] is risky and invites failure.&#8221;&nbsp;<strong><br></strong></p>



<h2><strong>Matching your process with your environment</strong></h2>



<p>Royce&#8217;s observation—that every development goes through recognizable stages, from identifying the requirements and proposed solution, through building the software, and then testing it to see if it satisfies those requirements—was a good one. In fact, every programmer is familiar with that, even in their first classroom assignments. But when your requirements change over the duration of the project, you&#8217;re guaranteed that you won&#8217;t be able to satisfy the customer even if you completely satisfy the original requirements.</p>



<p>There is really only one answer to this: you need to find a way to match the requirements-development-delivery cycle to the rate at which the requirements change. In the case of my government project, we did so artificially: there were no changes of any substance, so it was simple to build to the specification and acceptance test.</p>



<p>Royce&#8217;s original paper actually recognized the problem of changes during development. His paper describes an iterative model in which unexpected changes and design decisions that don&#8217;t work out are fed back through the development process.</p>



<h2><strong>Realism in software development</strong></h2>



<p>Once we accept the core uncertainty in all software development, that the requirements never stay the same over time, we can begin to do development in ways that can cope with the inevitable changes.</p>



<p>Start by accepting that <strong>change is inevitable</strong>.&nbsp;</p>



<p>Any project, no matter how well planned, will result in something that is at least somewhat different than what was first envisioned. Development processes must accept this and be prepared to cope with it.&nbsp;</p>



<p>As a consequence of this, <strong>software is never finished, only abandoned.</strong></p>



<p>We like to make a special, crisply-defined point at which a development project is &#8220;finished.&#8221; The reality, however, is that any fixed time at which we say &#8220;it&#8217;s done&#8221; is just an artificial dividing line. New features, revised features, and bug fixes will start to come in the moment the &#8220;finished&#8221; product is delivered. (Actually, there will be changes that are still needed, representing technical debt and deferred requirements, at the very moment the software is released.) Those changes will continue as long as the software product is being used.</p>



<p>This means that <strong>no software product is ever exactly, perfectly satisfactory</strong>. Real software development is like shooting at a moving target—all the various random variations of aim, motion of the target, wind, and vibration ensure that while you may be close to the exact bullseye, you never ever achieve perfection.&nbsp;<br><strong><br></strong></p>



<h2><strong>Making our process fit the environment</strong></h2>



<p>Looked at in this light, software development could seem to be pretty depressing, even dismal. It sounds as if we&#8217;re saying that the whole notion of predictable, cost-effective development is chasing an impossible dream.</p>



<p>It&#8217;s not. We can be very effective developers as long as we keep the realities in mind.</p>



<p>The first reality is that while perfection is impossible, pragmatic success is quite possible. The LEAN startup movement has made the MVP—&#8221;minimum viable product&#8221;—the usual goal for startups. We need to extend this idea to all development, and recognize that every product is really an MVP—our best approximation of a solution for current understanding of the problem.</p>



<p>The second reality is that we can&#8217;t really stop changes in requirements, so we need to work with the changes. This has been understood for a long time in actual software development—<a href="https://www.win.tue.nl/~wstomv/edu/2ip30/references/criteria_for_modularization.pdf">Parnas&#8217;s rule</a> for identifying modules is to build modules to hide requirements that can change. At the same time, there have been repeated attempts to describe software development processes that expect to provide successive approximations—incremental development processes (I&#8217;ve called it &#8220;<a href="https://smartbear.com/blog/develop/agile-the-once-and-future-methodology/">The Once and Future methodology</a>&#8220;).</p>



<p>Once we accept the necessity of incremental development, once we free ourselves from the notion of completing the perfect solution, we can accept changes with some calm confidence.</p>



<p>The third and final reality is that all schedules are really time-boxed schedules. We go into a development project unable to say exactly what the final product will be. Because of that, no early prediction of time to complete can be accurate, and all final deliveries will be partial deliveries.<br><strong><br></strong></p>



<h2><strong>Agile development to the rescue</strong></h2>



<p>The Agile Manifesto grew out of recognition of these facts. Regular delivery of working software is part of this recognition: a truly agile project has working partial implementations on a regular basis.Close relationships with the eventual customer ensure that as requirements changes become manifest, they can be fit into the work plan.</p>



<p>In an agile project, ideally, there is a working partial implementation starting very early in a project, and observable progress is being made toward a satisfactory product from the first. Think of the target-shooting metaphor again—as we progress, we&#8217;re closer and closer to the center ring, the bullseye. We can be confident that, when time is up, the product will be at least close to the goal.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/20/requirements-volatility-is-the-core-problem-of-software-engineering/">Requirements volatility is the core problem of software engineering</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/20/requirements-volatility-is-the-core-problem-of-software-engineering/feed/</wfw:commentRss>
		<slash:comments>41</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15131</post-id>	</item>
		<item>
		<title>New decade, new survey goals (and reminder to take the survey before it closes next week!)</title>
		<link>https://stackoverflow.blog/2020/02/19/new-decade-new-survey-goals-reminder-to-take-the-survey-before-it-closes-next-week/</link>
				<comments>https://stackoverflow.blog/2020/02/19/new-decade-new-survey-goals-reminder-to-take-the-survey-before-it-closes-next-week/#comments</comments>
				<pubDate>Wed, 19 Feb 2020 15:45:49 +0000</pubDate>
		<dc:creator><![CDATA[Erin Martin]]></dc:creator>
				<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Survey]]></category>
		<category><![CDATA[announcements]]></category>
		<category><![CDATA[developer survey]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15125</guid>
				<description><![CDATA[<p>Update 2/24: An issue with our email platform prevented our reminder email from reaching the majority of intended recipients, so we&#8217;re extending the survey deadline to Friday, February 28. This is your last last chance! We’re two weeks into collection of data for our 2020 Developer Survey. If you haven’t yet taken the survey, be…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/19/new-decade-new-survey-goals-reminder-to-take-the-survey-before-it-closes-next-week/">New decade, new survey goals (and reminder to take the survey before it closes next week!)</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p><em>Update 2/24: An issue with our email platform prevented our reminder email from reaching the majority of intended recipients, so we&#8217;re extending the survey deadline to Friday, February 28. This is your last last chance!</em></p>



<p>We’re two weeks into collection of data for our <a href="https://stackoverflow.com/dev-survey/start?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=dev-survey-2020&amp;utm_content=reminder-blog">2020 Developer Survey</a>. If you haven’t yet taken the survey, be sure to do so before it closes on February 25th. Read on for background on this year’s survey, what we hope to achieve this year, and how you can help.</p>



<p>Primarily, you can <strong><a href="https://stackoverflow.com/dev-survey/start?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=dev-survey-2020&amp;utm_content=reminder-blog">take the survey!</a></strong></p>



<p>First, a little background. There’s been some debate internally as to whether the Annual Stack Overflow Developer Survey is in it’s 10th or 11th year. Our <a href="https://stackoverflow.blog/2010/12/21/stack-overflow-annual-survey/">oldest blog post on the matter</a> from December 2010 aligns with the <a href="https://insights.stackoverflow.com/survey">oldest data set available on our site</a> from 2011, but a post from <a href="https://meta.stackexchange.com/questions/34772/post-the-results-of-the-so-survey-on-meta?noredirect=1&amp;lq=1">Meta Stack Exchange</a> in early 2010 indicates the first survey was conducted in late 2009. Regardless of whether this year marks the 10th or 11th iteration, we’ve certainly come a long way since the early days of the Developer Survey.&nbsp;<br></p>



<p>What started as an effort to <a href="https://stackoverflow.blog/2011/01/11/survey-says/">learn more about our community and how its members work</a> has evolved into an asset that is used by professionals and publications around the world to do things like gauge the <a href="https://www.zdnet.com/article/programming-languages-developers-now-ask-more-questions-about-python-than-javascript-on-stack-overflow/">popularity of technologies</a>, analyze the <a href="https://thenextweb.com/dd/2019/04/09/stack-overflow-survey-shows-that-devops-engineers-are-really-really-contented/">happiness of technical employees</a>, and even address the <a href="https://blogs.partner.microsoft.com/mpn-canada/close-the-gender-gap-with-confidence/">gender and cultural gaps in the world of coding</a>. While we (naturally) want the validity and use of our data in this manner to continue, we’re aiming for a bit more this year.&nbsp;<br></p>



<p>If you’re a regular reader of our blog, or if you subscribe to <a href="https://stackoverflow.blog/newsletter/">our newsletter</a> or listen to the <a href="https://stackoverflow.blog/podcast/">podcast</a>, you’ve hopefully noticed a theme of focusing on our community as it grows. Our community doesn’t end with visitors of Stack Overflow. We want Stack Overflow to be a resource for everyone who codes, just as we want our 2020 Developer Survey to <a href="https://stackoverflow.blog/2020/02/05/the-2020-developer-survey-is-now-open/">represent everyone who codes</a>. To aid in this effort, we included questions in our Annual Survey to gauge sentiment around the welcomingness of Stack Overflow, to ask what other technical communities respondents utilize, and to inquire whether or not survey takers consider themselves to be members of our community, regardless of their network usage.&nbsp;<br></p>



<p>In order to achieve our goal of obtaining a data set representative of everyone who codes, and, more importantly, continuing the work that is necessary to serve underrepresented groups of coders who may not feel welcome on Stack Overflow, we need to reach beyond our networks. We’re working on this internally by strategically advertising the Survey to followers of affinity coding groups and emphasizing our desire to learn about the coding universe as a whole, no matter where they live or what websites they frequent for troubleshooting technical problems. These efforts can only take us so far, though, so we’re asking for your help.&nbsp;<br></p>



<p>First and foremost, we ask that you share the <a href="https://stackoverflow.com/dev-survey/start?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=dev-survey-2020&amp;utm_content=reminder-blog">survey</a> with your networks. Whether your contacts code for a living or need to write a few lines here and there, we want to learn about how they work. But beyond sharing, we’re requesting your recommendations. Where should we focus our outreach to reach underrepresented (whether that’s gender, race, geo-location, you name it) coding hobbyists and professional alike? What sites, mediums, and methods will help the most in these efforts? What groups should we reach out to? We’re open to suggestions and appreciate your input.&nbsp;<br></p>



<p>Stack Overflow was, and continues to be, built by developers for developers. And everything we do, we do to serve needs within the developer community. Whether that’s helping visitors find a new product or job or improving communication with Stack Overflow for Teams, our endless goal is to serve the developer community. We recognize that in order to serve the developer community as a whole, we need to understand the needs of the developer community as a whole, and to do that, we need to reach them.&nbsp;</p>



<p>So <a href="https://stackoverflow.com/dev-survey/start?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=dev-survey-2020&amp;utm_content=reminder-blog">take the survey</a> and share it with anyone who codes. <br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/19/new-decade-new-survey-goals-reminder-to-take-the-survey-before-it-closes-next-week/">New decade, new survey goals (and reminder to take the survey before it closes next week!)</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/19/new-decade-new-survey-goals-reminder-to-take-the-survey-before-it-closes-next-week/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15125</post-id>	</item>
		<item>
		<title>Trying to find your first dev job? Here&#8217;s what employers are actually looking for.</title>
		<link>https://stackoverflow.blog/2020/02/18/trying-to-find-your-first-dev-job-heres-what-employers-are-actually-looking-for/</link>
				<comments>https://stackoverflow.blog/2020/02/18/trying-to-find-your-first-dev-job-heres-what-employers-are-actually-looking-for/#comments</comments>
				<pubDate>Tue, 18 Feb 2020 15:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Rebekah Rombom]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[first job]]></category>
		<category><![CDATA[flatiron school]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15119</guid>
				<description><![CDATA[<p>Interview processes run the gamut from a few conversations, to hours of writing code on a whiteboard, to evaluative social events with the team. It can all seem very mysterious and nerve-wracking from the outside. But here’s the big secret: No matter what kind of process you step into, the hiring team, really, is only trying to figure out three things.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/18/trying-to-find-your-first-dev-job-heres-what-employers-are-actually-looking-for/">Trying to find your first dev job? Here&#8217;s what employers are actually looking for.</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>Finding a job—any job—is hard. Tiring. Confusing. Time-consuming.&nbsp;<br></p>



<p>Finding a job in a field that you’re new to is all that on steroids.<br></p>



<p>For the past seven years, I’ve been lucky to help build <a href="http://flatironschool.com">Flatiron School</a> and help our students find their first jobs as developers.&nbsp;<br></p>



<p>Our team has seen over 10,000 interview processes, usually from both sides: We work closely with <a href="https://flatironschool.com/blog/category/alumni-stories">grads</a>, as career coaches help them navigate their first steps into the market with one-on-one guidance, and with <a href="https://flatironschool.com/hire-our-grads/">companies</a>, who work directly with our team to hire technical talent. And our grads <a href="https://flatironschool.com/jobs-reports/">do impressively well</a> on the job market.&nbsp;<br></p>



<p>That’s all to say, we learned what it takes to land a job as a brand-new dev. (And if it turns out you’re not looking for a dev job, this still works—the methodology we use applies to almost any job.)&nbsp;<br></p>



<p>Interview processes run the gamut from a few conversations, to hours of writing code on a whiteboard, to evaluative social events with the team. It can all seem very mysterious and nerve-wracking from the outside.&nbsp;<br></p>



<p>But here’s the big secret: No matter what kind of process you step into, the hiring team, really, is only trying to figure out three things.<br></p>



<p>That’s it.&nbsp;<br></p>



<p>You might get asked hundreds of different questions, but all of those questions are, in one way or another, trying to get at one of those three important things. If you can focus all your interactions with the company on proving you&#8217;re a “yes” to these three questions, you’ve got a very good chance of getting the job.&nbsp;<br></p>



<p>Those three things are:<br></p>



<ol><li>Do you have the skills to do the job?&nbsp;</li><li>Will you be an overall positive contributor to the team?</li><li>Can you learn quickly enough to get the skills you’ll need later?&nbsp;</li></ol>



<p>Two important things to know about the three things:&nbsp;<br></p>



<ol><li>Many hiring teams can’t quite articulate that this is what they’re looking for.&nbsp;</li><li>Even if they can, most will tell you they don’t know how to test for these three things with 100% accuracy—that is, no false positives and no false negatives.&nbsp;</li></ol>



<p>This is a challenge for hiring teams, to be sure. But it’s a giant opportunity for you.&nbsp;<br></p>



<p>I had a chance to chat with Sara Chipps, Paul Ford, and Ben Popper about this on the Stack Overflow Podcast recently, <a href="https://stackoverflow.blog/2020/02/18/podcast-coaching-a-developer-interview/">so head over there</a> if you want to hear how this process plays out over a few interview questions (where Paul played hiring manager, and Ben was a very good sport).&nbsp;<br></p>



<p>We’ll spend the rest of this post on why these three things are so important, and how you can showcase them.&nbsp;</p>



<h2>Do you have the skills to do the job?&nbsp;</h2>



<p><strong><em>What: </em></strong>This is the simplest one, and this is what most people think they’re trying to show when they interview: If we dropped you at a desk right now, could you do the work required to perform the role? Could you deliver valuable output for our company tomorrow?<br><br>This is the ostensible primary purpose of the whole interview process, and in most interview processes I’ve seen—especially for technical positions—this is the part of the process that gets the most thought and attention from the employer.&nbsp;</p>



<p><br>All this part of the process wants to know is: Can you accomplish the work that we need to get done here?<br></p>



<p><strong><em>How: </em></strong>Just because you’re put through the technical ringer during a live-coding challenge, doesn’t mean that’s the only way to demonstrate you have the skills. If you flub a part of the process, double back and revisit it. Re-tackle the challenge in a blog post and send the interview team your corrected answer. Build a small app with the technology that tripped you up in the interview room. Build a webpage with some cheeky pseudo code that animates your path to your previous error and re-codes the example on the right path.&nbsp;<br></p>



<p>One of the biggest fallacies of the interview process is that it’s linear and binary: I give you a challenge, you pass or you fail. If you pass, you receive another challenge, and if you pass enough times, you get a job. That’s not true. It’s up to <em>you </em>to demonstrate that you have the skills to do the job, and it’s up to you to figure out how best to do that.<br></p>



<p>There are endless ways to showcase your skills. Get creative, pick one, and put in the extra work to let your competency shine.<br></p>



<p>It’s important to note that there’s one kind of organization where this is unlikely to work: At companies like Google, Facebook, and Twitter, or “cool companies,” as Bill Burnett and Dave Evans call them in their <a href="https://www.amazon.com/Designing-Your-Life-Well-Lived-Joyful/dp/1101875321">excellent book</a>. These companies, in short, don’t care much about false negatives. They’re flooded with qualified talent, so if you don’t pass their process, they’ll move onto the next person—while false positives can be quite expensive, a false negative doesn’t cost much when you’ve always got dozens more high-quality candidates in the wings.<br></p>



<h2>Will you be an overall positive contributor to the team?</h2>



<p><strong><em>What: </em></strong>In addition to the ability to do the blocking and tackling of the job, companies want to know if you’ll be a good team member. Can you contribute beyond your role? Can you behave in a way that’s in keeping with the company’s standards? Outside of your work product, will you deliver something valuable to the organization? <br><br>Some places call this culture fit—at Flatiron School, we evaluate candidates for <em>values </em>fit—but this ultimately boils down to contributions and operating behavior. General ability to contribute is nebulous and hard to define, but every company I’ve ever talked to strongly emphasizes that they want to hire people who will contribute positively to the organization.<br><br></p>



<p><strong><em>How: </em></strong>Here you have even more latitude than in the skills requirement, because you’re less likely to get asked specific questions about your ability to be a great contributor to the team. Companies often evaluate this as a function of how you answer other questions, or with behavioral questions, like “tell me about a time when you solved a hard problem” (that’s the one Sara gave Ben on the <a href="https://stackoverflow.blog/2020/02/18/podcast-coaching-a-developer-interview/">Podcast</a>). This, again, is a big opportunity for you.&nbsp;<br></p>



<p>Imagine all options are open: How might you prove that you’re great to work with and great to have on a team?&nbsp;<br></p>



<p>You might prepare stories about how you went above and beyond in your previous job to help colleagues solve problems not in your job description. You might write a cover letter that’s all about ways you’ve demonstrated the company’s values in your life and career. You might simply demonstrate empathy and curiosity during the interview, making sure to use your Q&amp;A time with the hiring team to ask about their biggest challenges and most burning priorities. Bonus points if you can figure out a way to make productive suggestions or contributions to these in a follow-up or discussion later on.&nbsp;<br></p>



<h2>Can you learn quickly enough to get the skills you’ll need later?&nbsp;</h2>



<p><strong><em>What: </em></strong>If you’re a technologist, you know that tools and technologies change at head-spinning speed. It’s unlikely you’ve used all the tools the person in this role uses now, and it’s almost a certainty that you don’t know the tools this role will use two years from now (the company probably doesn’t, either). In such a fast-moving industry, this might be the most important feature of a candidate’s profile and the one most valuable to a company. It’s also the most difficult to evaluate.&nbsp;<br></p>



<p><strong><em>How: </em></strong>Good news: If you’re a new developer, you’ve just demonstrated how fast you can learn. You picked up the skills to do the job over a few months at a coding school, during your major at college, or over many hours of self-study. That’s a great story to tell and, assuming you do in fact have the skills to do the job, one that should inspire lots of confidence that you can pick up new technologies. Have a crisp narrative around this experience that earns that confidence.&nbsp;<br></p>



<p>Companies often want you to be able to learn <em>fast </em>and <em>independently, </em>so in addition to however you learned how to code, you can demonstrate you’re a fast learner by picking up a new technology or concept in real-time and sharing your progress with the employer. That might mean building something small on the company’s API, expanding on a technical concept you find on their blog, or building a dynamic version of your resume in their preferred front-end technology.&nbsp;<br></p>



<h2>Empathy wins jobs.</h2>



<p>When you’re in a job-search setting—and that includes everything from trying to get in the door for a first conversation all the way to accepting an offer—companies want reassurance that you can do these three things. Any communication you send, any question you’re asked, pause and ask yourself: Which of the three things is this trying to get at?&nbsp;<br></p>



<p>This comes down, as Paul eloquently put it during our conversation, to empathy. Put yourself in the employer’s shoes: If you didn’t know you, what would it take to convince <em>you </em>that you have the skills, ability to contribute, and learning horsepower to succeed in that job?<br></p>



<p>If you can thoughtfully demonstrate you’re a “yes” to these three questions all the way through the process, you’ll be heads and shoulders above almost every other applicant. Get really good at helping companies see a “yes” to these three questions about you, and your first dev job offer won’t be far away.<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/18/trying-to-find-your-first-dev-job-heres-what-employers-are-actually-looking-for/">Trying to find your first dev job? Here&#8217;s what employers are actually looking for.</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/18/trying-to-find-your-first-dev-job-heres-what-employers-are-actually-looking-for/feed/</wfw:commentRss>
		<slash:comments>12</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15119</post-id>	</item>
		<item>
		<title>Podcast: Coaching a Developer Interview</title>
		<link>https://stackoverflow.blog/2020/02/18/podcast-coaching-a-developer-interview/</link>
				<comments>https://stackoverflow.blog/2020/02/18/podcast-coaching-a-developer-interview/#comments</comments>
				<pubDate>Tue, 18 Feb 2020 05:35:00 +0000</pubDate>
		<dc:creator><![CDATA[Ben Popper]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[The Stack Overflow Podcast]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[flatiron school]]></category>
		<category><![CDATA[stackoverflow]]></category>
		<category><![CDATA[the stack overflow podcast]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15112</guid>
				<description><![CDATA[<p>We try to climb the teetering tower of abstraction, examine a human readable magazine on computing, and prepare for Y2038.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/18/podcast-coaching-a-developer-interview/">Podcast: Coaching a Developer Interview</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<iframe height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/7daec7ab-57d9-4131-b5a4-f21381b6a0e0?dark=false"></iframe>



<p>This week we chat with Rebekah Rombom, general manager for online education at the Flatiron School. She talks about how their curriculum has evolved, why Ruby is a great language for beginners, and how coding schools live and die by their job placement rates.</p>



<h2>EPISODE NOTES</h2>



<p>Paul and Sara walk us through the&nbsp;<a href="http://bit-player.org/2020/the-teetering-towers-of-abstraction">teetering tower of abstraction</a>. Ben still hasn&#8217;t mastered a single language, so it&#8217;s a tough for him to know if it&#8217;s better to start with the difficult fundamentals or stay in the simplified sandbox.&nbsp;</p>



<p>Flatiron tries to teach developers how to code, but also how to communicate. Every student has to do some public writing or speaking about their education. We check out <a href="https://humanreadablemag.com/issues/1"><em>Human Readable Magazine</em></a>&nbsp;and the painfully honest&nbsp;<a href="https://www.reddit.com/r/programming/comments/et4l59/human_readable_magazine_issue_1_is_out_check_it/">Reddit thread</a>&nbsp;of early reviews.&nbsp;</p>



<p>Rebekah tries to coach Ben through a mock interview for a junior web developer position. A torrent of word salad ensues. Paul and Sara show no mercy.</p>



<p>New York City parking meters aren&#8217;t the only systems being taken down by calendar bugs. We chat about the&nbsp;<a href="https://twitter.com/jxxf/status/1219009308438024200">delightful Twitter thread on Y2038</a>.&nbsp;</p>



<p>You can follow Rebekah <a href="https://twitter.com/RRombom">here </a>and learn more about the Flatiron School <a href="https://flatironschool.com/">here</a>.</p>



<figure class="wp-block-image size-large"><a href="https://stackoverflow.com/teams?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=extended-trial&amp;utm_content=blog-placement"><img src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x-1200x148.png" alt="" class="wp-image-15005" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x-1200x148.png 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x-300x37.png 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x-768x95.png 768w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x.png 1456w " sizes="(max-width: 1200px) 100vw, 1200px" /></a></figure>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/18/podcast-coaching-a-developer-interview/">Podcast: Coaching a Developer Interview</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/18/podcast-coaching-a-developer-interview/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15112</post-id>	</item>
		<item>
		<title>Community working group updates: February 2020</title>
		<link>https://stackoverflow.blog/2020/02/17/community-working-group-updates-february-2020/</link>
				<comments>https://stackoverflow.blog/2020/02/17/community-working-group-updates-february-2020/#comments</comments>
				<pubDate>Mon, 17 Feb 2020 15:00:00 +0000</pubDate>
		<dc:creator><![CDATA[The Community Team]]></dc:creator>
				<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Company]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[The Loop]]></category>
		<category><![CDATA[announcements]]></category>
		<category><![CDATA[community]]></category>
		<category><![CDATA[the loop]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15017</guid>
				<description><![CDATA[<p>In this post, we'd like to talk about some of the  initiatives that are  happening internally at Stack Overflow aimed at addressing and repairing our relationship with our community.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/17/community-working-group-updates-february-2020/">Community working group updates: February 2020</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>Last year, we announced <a href="https://stackoverflow.blog/2019/11/25/introducing-the-loop-a-foundation-in-listening/">The Loop</a> as a way for us to share more about our product development process. You can see the subsequent updates <a href="https://stackoverflow.blog/2019/12/11/the-loop-1-how-we-conduct-research-on-the-community-team/">here</a> and <a href="https://stackoverflow.blog/2020/01/22/the-loop-2-understanding-site-satisfaction-summer-2019/">here</a>. In this post, we&#8217;d like to talk about some of the&nbsp; initiatives that are  happening internally at Stack Overflow aimed at addressing and repairing our relationship with our community.</p>



<p>We’ve shared some of the things we are doing in order to better our communication with our community, but we haven’t said much about what’s going on behind the curtain at Stack HQ and around the world. It’s important to us that you know we’re working hard on improvements and to provide you with regular updates, even when we’re not ready to officially “ship” things.</p>



<p>Behind the scenes, we’ve established some internal working groups to work on the problems that we’ve identified. We’ve recruited people from many different areas of the company, making sure that we involved the people with the experience and knowledge needed to come up with sustainable solutions to the problems that you’ve helped us identify and prioritize. These problems share the following four common themes:</p>



<ol><li>How we work with community stakeholders on Meta</li><li>How we work with and support our volunteer moderators</li><li>How we can more effectively and consistently gather feedback from as many different types of users as possible</li><li>How we can keep you all updated on the progress of these initiatives and other community-related plans</li></ol>



<p>Before we dive into that, however, we want to clarify that these groups aren&#8217;t formed to make unilateral decisions and &#8220;ship&#8221; whatever they decide on into the wild. In some cases, the deliverables they have are pretty well-defined (e.g. The Loop blog posts), but in others, the goals are really more about coming up with proposals for new solutions where all of the knowledge, resources, and specialization required to execute comes together in one place. Think of them more as highly-specialized advisory groups than product teams.</p>



<p>So with that said, what have we been up to?<br></p>



<h2>Setting a course and expectations for Meta</h2>



<p>We’ve got a broad group of folks looking at the problem of how far out of alignment we’ve become with our meta community. The folks in this group have worked with us for the longest, and many have a long history of working both with and within our meta communities. While we’re aware that meta needs attention at the functionality level, this group’s priority is getting us back into alignment with the community.</p>



<p>This project has unearthed a lot of very strong feelings and opinions, both internally and externally. Many in this group have close ties to people in the Meta community and feel strongly that we should be reaching out to them more and making them a bigger part of our decision making. Others have had experiences that cause them to fear the feedback they receive there. Some of them feel like they just can’t succeed in having conversations with our meta community and worry about how they’ll get their jobs done.</p>



<p>Opinions and feelings about the best way forward <em>are </em>extremely valid things to consider, but the devil is in the <s>details</s> data, too. We’ve spent a lot of time re-examining how we look at engagement on meta in terms of the ways people participate, and how that correlates to their participation on the main site. Looking at data about meta that’s eluded us until recently (we promise we’re not ever going to call it metadata), it’s clear that our focus there needs a lot of work and better resourcing. </p>



<p>We all need to be on the same page about the role that meta plays in decisions, and expectations need to be set and consistently met. We’re close to being done with a plan to move forward and we’ll be sharing it with you soon. The key takeaway for now is that we’ve heard you, and we want to work our way to a place where all of us feel trust and cooperation again.</p>



<h2>Working with and supporting our moderators</h2>



<p>There are two teams that are exploring a couple different approaches here. </p>



<p>Folks primarily from our community management team have been working on putting together more in-depth training for moderators. The goal of the project is to provide moderators with short courses that dive into issues that they’re likely to face as moderators. From best-practices and guidelines for identifying and handling PII (personally-identifiable information) to conflict management and resolution in online communities, our objective is to set moderators up for success and provide them with a continued path of learning.</p>



<div class="wp-block-columns">
<div class="wp-block-column">
<p><img src="/wp-content/uploads/2020/02/icon-approve.png" width="18" alt="icon" class="va-middle mr6"><strong class="fc-green-400">Completed</strong></p>



<ul><li>Discovery &amp; research: consult with active moderators and find out what kind of materials would be most helpful.</li><li>Discovery on module format, use cases for discovering the availability of training content.</li><li>Review of our moderator agreement to include updates surrounding our privacy policy, moderator reinstatement process, and clearer wording (currently being reviewed by legal).</li></ul>
</div>



<div class="wp-block-column">
<p><img src="/wp-content/uploads/2020/02/icon-thinking.png" width="18" alt="icon" class="va-middle mr6"> <strong class="fc-blue-500">Upcoming</strong></p>



<ul><li>Initial drafts of training modules and proposed moderator agreement shared with all moderators for feedback and discussion.</li></ul>
</div>
</div>



<p>Additionally, in a <a href="https://stackoverflow.blog/2020/01/21/scripting-the-future-of-stack-2020-plans-vision/">recent blog post</a>, we mentioned that we are forming a moderator council. We have determined the structure of the council, but are still working out all of the details. We are going to kick off the process soon by creating a pro-tempore council. The moderators on the pro-tempore council will help finalize and shape the permanent council&#8217;s structure. They will also help build the lines of the communication with all of the internal teams who are interested in hearing from the moderators across the network.</p>



<div class="wp-block-columns">
<div class="wp-block-column">
<p><img src="/wp-content/uploads/2020/02/icon-approve.png" width="18" alt="icon" class="va-middle mr6"><strong class="fc-green-400">Completed</strong></p>



<ul><li>Discovery &amp; research: we’ve gathered a lot of feedback from moderators around the network in large and small group settings.</li></ul>
</div>



<div class="wp-block-column">
<p><img src="/wp-content/uploads/2020/02/icon-thinking.png" width="18" alt="icon" class="va-middle mr6"> <strong class="fc-blue-500">Upcoming</strong></p>



<ul><li>Draft charter for council structure and function to be shared with all moderators for feedback and discussion.</li></ul>
</div>
</div>



<h2>Gathering diverse feedback</h2>



<p>We’re putting a good deal of effort into making sure that we gather and analyze feedback in a way that gives us a better understanding of everyone’s perspectives, frustrations, and specific recommendations for improvement. We’re very excited with what we’re learning, even though we’ve got a ton of work left to do.</p>



<div class="wp-block-columns">
<div class="wp-block-column">
<p><img src="/wp-content/uploads/2020/02/icon-approve.png" width="18" alt="icon" class="va-middle mr6"><strong class="fc-green-400">Completed</strong></p>



<ul><li>An <a href="https://meta.stackoverflow.com/questions/393552/an-account-of-my-meeting-with-the-stack-overflow-management-team">in-person meeting</a> with one of our Stack Overflow moderators, with many very helpful takeaways. </li></ul>
</div>



<div class="wp-block-column">
<p><img src="/wp-content/uploads/2020/02/icon-thinking.png" width="18" alt="icon" class="va-middle mr6"> <strong class="fc-blue-500">Upcoming</strong></p>



<ul><li>Fast coding of free-form responses from all surveys. Problems talk to us with data much faster with more accuracy.</li><li>Initial discovery for a format to facilitate more face-to-face communication between a diverse group of users and people working on community-facing products across a variety of teams.</li><li>Initial discovery for a format to hold regular group conversations between folks in our community, product, and senior leadership teams with our community moderators. </li></ul>
</div>
</div>



<p>We want to say a <strong>huge</strong> thank you to all of you that have participated in our surveys and interviews so far. Your feedback has been extremely valuable and we look forward to being able to interact with many more of you on a more regular basis!</p>



<h2>Keeping you updated</h2>



<p>It&#8217;s this post! As mentioned before, we are planning to post these updates periodically. In our view, being consistent and dependable in this area is important, so some of these updates might not have a lot of meat to them as some initiatives or projects take time. But we want you to know that these initiatives are on our radar and taken seriously.</p>



<h2>In Closing</h2>



<p>So this is a broadly unfiltered look at where we are, directly from behind the curtains at Stack HQ. While we will always share the outcome of the important conversations and debates, we want to include you by letting you know what those conversations are. This is especially true if what we’re discussing is how we listen to and support you.  We hope we can continue moving forward here and that 2020 brings some much-needed relief and clarity to our community efforts.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/17/community-working-group-updates-february-2020/">Community working group updates: February 2020</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/17/community-working-group-updates-february-2020/feed/</wfw:commentRss>
		<slash:comments>10</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15017</post-id>	</item>
		<item>
		<title>This week, #StackOverflowKnows fast planes, math with dates, and code comments</title>
		<link>https://stackoverflow.blog/2020/02/14/this-week-stackoverflowknows-fast-planes-math-with-dates-and-code-comments/</link>
				<comments>https://stackoverflow.blog/2020/02/14/this-week-stackoverflowknows-fast-planes-math-with-dates-and-code-comments/#respond</comments>
				<pubDate>Fri, 14 Feb 2020 15:42:36 +0000</pubDate>
		<dc:creator><![CDATA[Ryan Donovan]]></dc:creator>
				<category><![CDATA[#StackOverflowKnows]]></category>
		<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[stackoverflow]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15097</guid>
				<description><![CDATA[<p>Happy mandated romance day, dear reader. While we forgot to get you a card and ate all the chocolates, we are ready to pop the question. A few questions actually. This week, we’ve got comments on code comments, bad math as the basis for good math, and concerns that your personal keyboard could be stealing…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/14/this-week-stackoverflowknows-fast-planes-math-with-dates-and-code-comments/">This week, #StackOverflowKnows fast planes, math with dates, and code comments</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>Happy mandated romance day, dear reader. While we forgot to get you a card and ate all the chocolates, we are ready to pop the question. A few questions actually. This week, we’ve got comments on code comments, bad math as the basis for good math, and concerns that your personal keyboard could be stealing passwords at work. <br></p>



<h4><a href="https://aviation.stackexchange.com/questions/74041/what-is-the-commercial-passenger-aircraft-top-speed-record">What is the commercial passenger aircraft top speed record?</a></h4>



<p><em>aviation.stackexchange.com</em></p>



<p>How fast is the fastest plane? That depends on how you measure speed.</p>



<h4><a href="https://mathoverflow.net/questions/352001/examples-of-incorrect-arguments-being-fertilizer-for-good-mathematics">Examples of incorrect arguments being fertilizer for good mathematics?</a></h4>



<p><em>math.stackexchange.com</em></p>



<p>The first step to being right is being wrong. And in fact, these same steps were taken <a href="https://mathoverflow.net/questions/115032/non-rigorous-reasoning-in-rigorous-mathematics">7</a> and <a href="https://mathoverflow.net/questions/879/most-interesting-mathematics-mistake">10 </a>years ago. </p>



<h4><a href="https://stackoverflow.com/questions/60071278/why-does-the-difference-between-30-march-and-1-march-2020-erroneously-give-28-da">Why does the difference between 30 March and 1 March 2020 erroneously give 28 days instead of 29?</a></h4>



<p><em>stackoverflow.com</em></p>



<p>Don&#8217;t try to do math with the time. The numbers don’t always add up. </p>



<h4><a href="https://softwareengineering.stackexchange.com/questions/404737/how-to-avoid-comments-about-one-line-of-code-for-cleanliness">How to avoid comments about one line of code for cleanliness</a></h4>



<p><em>softwareengineering.stackexchange.com</em></p>



<p>An uncommon commentary about the value of code comments.<a href="https://twitter.com/hashtag/StackOverflowKnows?src=hashtag_click">&nbsp;</a><br></p>



<h4><a href="https://security.stackexchange.com/questions/225637/can-keylogger-software-exist-solely-on-a-keyboard-pcb">Can keylogger software exist solely on a keyboard PCB?</a></h4>



<p><em>security.stackexchange.com</em></p>



<p>Could bringing your favorite keyboard to work be a security risk?<a href="https://twitter.com/hashtag/StackOverflowKnows?src=hashtag_click"> </a>And if so, would they be worried about hackers or a malicious insider? </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/14/this-week-stackoverflowknows-fast-planes-math-with-dates-and-code-comments/">This week, #StackOverflowKnows fast planes, math with dates, and code comments</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/14/this-week-stackoverflowknows-fast-planes-math-with-dates-and-code-comments/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15097</post-id>	</item>
		<item>
		<title>Ben Popper is the worst coder in the world: Something awry with my array</title>
		<link>https://stackoverflow.blog/2020/02/13/ben-popper-is-the-worst-coder-in-the-world-something-awry-with-my-array/</link>
				<comments>https://stackoverflow.blog/2020/02/13/ben-popper-is-the-worst-coder-in-the-world-something-awry-with-my-array/#comments</comments>
				<pubDate>Thu, 13 Feb 2020 15:50:45 +0000</pubDate>
		<dc:creator><![CDATA[Ben Popper]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[arrays]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[stackoverflow]]></category>
		<category><![CDATA[worst coder in the world]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15078</guid>
				<description><![CDATA[<p>Our intrepid new coder meets his first data structure. With an array of concepts in front of him, will he push  his learning until it pops for him?</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/13/ben-popper-is-the-worst-coder-in-the-world-something-awry-with-my-array/">Ben Popper is the worst coder in the world: Something awry with my array</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p><em>This is part 4 of an ongoing series detailing my journey from total noob to hobbyist coder. I share my thoughts as I learn the basics of programming. You can find the rest of the series <a href="https://stackoverflow.blog/tag/worst-coder-in-the-world/">here</a>.</em></p>



<p>My StackCodes curriculum relies on FreeCodeCamp for lessons. I felt at least partly at home during the HTML and CSS lessons, having spent over a decade in the world of digital media. I’ve worked with TypePad, WordPress, Chorus, and several homebrew systems. When I was working at The Verge, we had regular discussions with the team making product tweaks to the software.&nbsp;<br></p>



<p>When you’re going through the HTML and CSS, each lesson explains what the purpose of your code would be in a real-world application, and shows you how your code changes the website in real time, right in the browser. That all changes when you get to Javascript. I’ll give you an example. When you get to arrays in the FreeCodeCamp curriculum doesn’t explain how this data structure fits into the history of computer programming or how you might use it in a real world application today. You’re learning by rote in a vacuum.&nbsp;<br></p>



<figure class="wp-block-image"><img src="https://lh6.googleusercontent.com/nTLCro9AzTxv0JIKPDs66LiSGrMlryLVPIAOQXkaP2UjUf9uh6PAyY8Emt_0Th-oXodrWJnWcn9Pca4HNZHkS9TiwUe2I0QvfW3lm-SGwKtl92kA7fnwF63Bi6m1UmkeZn3iHs4l" alt=""/></figure>



<p>I was able to breeze through these array lessons without stumbling over any character errors, but I doubt I would retain the information very well, because I don’t have a clue what I’m building or why. When the course shifts to functions, there is no explanation of how that might be related to arrays.&nbsp;<br></p>



<p>As it turns out, this is a common experience. As noted in a 2017 <a href="https://apsce.net/icce/icce2017/140.115.135.84/icce/icce2017/sites/default/files/proceedings/main/C5/Muse%20A%20Musically%20Inspired%20Game%20To%20Teach%20Arrays%20and%20Linked%20Lists.pdf">academic paper</a> on the topic, “In the field of computing, data structures is a fundamental course that lays a critical foundation for the rest of the curriculum and is a solid basis for industry projects. A sound understanding of data structures, hence is indispensable for any student aiming to pursue a career in this field.” Ok, it’s important, but, “Data structures course is perceived to be a difficult subject for students, particularly the ones in high school because it is difficult for them to visualize how the data structures are structured and analyze its properties; hence they do not get the required motivation to pursue it in the way it should be.”<br></p>



<a href="https://stackoverflow.com/teams?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=extended-trial&amp;utm_content=blog-placement" class="d-block mx-auto ta-center mt48 mb32"><img src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-search-less-728x90@2x-1200x148.png" width="728" height="90" alt="" class="wp-image-15003" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-search-less-728x90@2x-1200x148.png 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-search-less-728x90@2x-300x37.png 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-search-less-728x90@2x-768x95.png 768w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-search-less-728x90@2x.png 1456w " sizes="(max-width: 728px) 100vw, 728px" /></a>



<p>My sentiments exactly. Luckily, a little research turned up some options for a more engaging approach to learning about arrays. When you start <a href="https://courses.edx.org/courses/course-v1:UCSanDiegoX+CSE100x+1T2018/course/#block-v1:UCSanDiegoX+CSE100x+1T2018+type@chapter+block@0a15a9888ebe4beeaf772e03db28e97a">teaching</a> about optimizing <em>time complexity</em> in order to defeat the Nazis, I’m sitting up and paying attention!&nbsp;<br></p>



<figure class="wp-block-image"><img src="https://lh3.googleusercontent.com/Lhoq6UACgenP4AyYTdDGfMzNgIhZrtyCcvYt-o_06brV9ot8TTsPF_pi2poBbVoeSEJJk98IX80lBkfJOwbhbcqOkLGI1rFJYh9uymk12jwkIPff9vZ7E8FKpftixMpZSsZehKvL" alt=""/></figure>



<p>This <a href="https://www.udemy.com/course/data-structures-part-1-lognacademy/learn/lecture/2587894#overview">Udemy course</a> also helped. It uses the metaphor of a grocery store. You have an array of fruits. I can easily imagine how a computerized inventory system might go about tracking what produce was in stock based on bar codes entered by the cashier at the time of sale.&nbsp;<br></p>



<p>In the 2017 paper I linked above, the authors suggest that music might be a useful tool for teaching students about data structures.&nbsp;<br></p>



<p>“Muse can be considered as a practical application of this approach that teaches the operations on arrays and linked lists through music. There is a mapping between the musical notes and their corresponding tones (SouthCalMusic), (Do Re Mi Isn&#8217;t Just Child&#8217;s Play: How Solfege Training Can Improve Your Ear). This mapping is exploited for explaining the concepts of arrays and linked lists as shown in Table 1. The implication of this mapping is that different sequences of musical notes produce different tunes. Also, it is implicit that the various operations on arrays and linked lists of musical notes manipulate the sequence of notes differently. So, this difference in the sequences or the effect of the operations is brought out through different tunes. Hence, the similarity and the difference in the musical tunes is analogous to the difference in 803 arrays and linked lists.”<br></p>



<figure class="wp-block-image"><img src="https://lh5.googleusercontent.com/LeeDbry7q4acJAGqrQLg_L4KnPOgjAJJSOYQiMUM30g1-J1ed6e56k9pZQ6Rtskn-UAXP9Ad7iFi4qcPlIic0FKl2gJILkWnnr3G-CQAWQ_9e_TIq5pziRm8ksnLKX6RqCgBuN3M" alt=""/></figure>



<p>When I wrote my first column in this series, I said that I had an idealized vision of programming in my head, that it would change my brain In strange and unexpected ways. I’m still far from mastering even basic computers science, but I can feel my mind starting to discover new pathways, new frameworks and metaphors for thinking about life. From arranging musical notes to tracking fruit on a shelf, from allocating hours in my week to exercise versus family time, or organizing the editorial calendar here at Stack Overflow, arrays seem to be everywhere. Like the Fibonacci sequence, once you start to understand it, you start to see it everywhere in nature, a hidden layer of structure that was around you all the time.&nbsp;</p>



<p>&#8212;</p>



<p><em><strong>Our 2020 <a href="https://stackoverflow.az1.qualtrics.com/jfe/form/SV_eL0mFVwuo7KWeXP?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=dev-survey-2020&amp;site=stackoverflow.com">Developer Survey</a> is open. We want to hear from everyone who codes. Professional or hobbyist, Stack Overflow user or not, share your thoughts with us so we can get a picture of the world&#8217;s programmers.</strong></em><br>&#8212;</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/13/ben-popper-is-the-worst-coder-in-the-world-something-awry-with-my-array/">Ben Popper is the worst coder in the world: Something awry with my array</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/13/ben-popper-is-the-worst-coder-in-the-world-something-awry-with-my-array/feed/</wfw:commentRss>
		<slash:comments>28</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15078</post-id>	</item>
		<item>
		<title>When laziness is efficient: Make the most of your command line</title>
		<link>https://stackoverflow.blog/2020/02/12/when-laziness-is-efficient-make-the-most-of-your-command-line/</link>
				<comments>https://stackoverflow.blog/2020/02/12/when-laziness-is-efficient-make-the-most-of-your-command-line/#comments</comments>
				<pubDate>Wed, 12 Feb 2020 14:47:47 +0000</pubDate>
		<dc:creator><![CDATA[Breanne Boland]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[bash]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[command line]]></category>
		<category><![CDATA[devops]]></category>
		<category><![CDATA[stackoverflow]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15039</guid>
				<description><![CDATA[<p>DevOps job posts often ask for automation skills, which is a positive way of asking for someone who’s professionally lazy in a way that results in efficiency. The good news is that developers can also learn a few tricks from the land of ops to make their days easier and their work better. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/12/when-laziness-is-efficient-make-the-most-of-your-command-line/">When laziness is efficient: Make the most of your command line</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>A terminal is never just a terminal. An elaborate prompt can mean someone digs deeply into optimizing the tools she uses, while the information it contains can give you an idea of what kind of engineering she’s done. What you type into the command line can tell you about environment variables, hidden configs, and OS defaults you never knew about. You can make it speak shorthand only known to your terminal and you. And all of it can help you work more efficiently and effectively. </p>



<p><a href="https://en.wikipedia.org/wiki/Bash_(Unix_shell)">Bash</a> (a term used for both the Unix shell and the command language; I’ll be using the second meaning in this post) is usually a skill mentioned only in job descriptions for site reliability engineers and other ops jobs. Those same job posts often ask for automation skills, which is a positive way of asking for someone who’s professionally lazy in a way that results in efficiency. The good news is that developers can also learn a few tricks from the land of ops to make their days easier and their work better.&nbsp;</p>



<h2>Your own personal(ized) terminal</h2>



<p>There are lots of ways to customize your command line prompt and terminal to make you more efficient at work. We’ll start with possibly the most powerful one: meet <code>~/.bashrc</code> and <code>~/.bash_profile</code>. </p>



<p>This file exists under several different names, depending on your OS and what you’re trying to accomplish, and it can hold a lot of things that can make your life easier: shorter aliases for common commands, your custom <a href="http://www.linfo.org/path_env_var.html">PATH</a>, Bash functions to populate your prompt with environment information, history length, command line completion, default editors, and more. With a little observation of your terminal habits (and a little knowledge of <a href="http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO.html">Bash</a>, the command language used in many terminals), you can put all kinds of things in here that will make your life easier. </p>



<p>Which file you use depends on your OS. <a href="http://www.joshstaiger.org/archives/2005/07/bash_profile_vs.html">This post</a> gives a rundown on the purposes and tradeoffs of the two files. If you use a Mac, though, use <code>~/.bash_profile</code>. Run <code>source ~/.bash_profile</code> once you’ve saved your changes, so they’re live in your terminal (or just close your terminal window and open a new one).</p>



<p>What else should you put in your beautifully customized new file? Let’s start with aliases.</p>



<p>When automating things in ops work, I watch what operations I do more than a couple of times, make notes on what I did, and put those on a list of likely script ideas. Once it’s clear I’ll be doing it again and again, I know it’s worth the time to put a solution into code. You can do the same thing with your own habits. What commands are you typing all the time? What values are you frequently using? These can all be aliases. </p>



<p>For example, <code>git commit</code> and <code>git checkout</code> can become <code>gc </code>and <code>gco </code>(or whatever matches your mental map of abbreviations). But you can go further than that by aliasing long commands with lots of flags and arguments. Here’s how to make one:</p>



<p><code>alias $preferredAlias='$commandToAlias'</code></p>



<p><code>alias</code> is the Bash command here (you can make an alias directly on the command line too, and it will only be available for that session until you close that terminal). <code>$preferredAlias</code> is your nice, short name for <code>$commandToAlias</code>, the longer, more cumbersome command you’re typing all the time. No spaces around the <code>= </code>and don’t forget the single <em>straight</em> quotes around the command you’re aliasing. You can also chain commands together using <code>&amp;&amp;</code>. Ever sat next to someone whose command line navigation was completely opaque because they’d optimized their work into a flurry of short aliases? Now you can be that person, too. </p>



<p>Here are a couple I use:</p>



<ul><li><code>mkcd='mkdir $1 &amp;&amp; cd $1'</code> (consolidating a common pair of operations; the $1 takes the first argument, in this case the new file you want to <code>cd</code> into)</li><li><code>tfplan='terraform init &amp;&amp; terraform plan'</code> (preventing a common mistake for me; this can be used to chain any two commonly paired commands)</li></ul>



<p>If you frequently work across different OSes (varying flavors of Linux, Mac OS), you can go a little further by creating multiple tailored dotfiles that assign slightly differing commands that achieve the same thing to the same alias. No more remembering the minute differences that only come up every month or two—it’s the same couple of characters wherever you are. If you’re prone to misspelling commands (looking at you, <code>gerp</code>), you can alias those too. </p>



<p>Now let’s look at another capability of dotfiles: customizing your prompt.&nbsp;</p>



<h2>A constant source of truth on the command line</h2>



<p>Your terminal prompt is one of the places you can be kindest to yourself, putting what you need in there so you don’t have to type <code>pwd</code> all the time or wonder exactly how long ago you typed that fateful command. At a minimum, I suggest adding a timestamp with minutes to it; that way, if you need to backtrack through recent work to tie cause to effect, you can precisely anchor an action’s time with minimal work. Beyond that, I also suggest adding your working directory and current git branch. My go-to tool for setting this up inexpensively is <a href="http://ezprompt.net/">EzPrompt</a>, which lets you drag and drop your desired prompt elements and returns the Bash you need to add to <code>~/.bash_profile</code>. It’s a good, simple start when you’re first cultivating your dotfiles. </p>



<p>If you want to get a little more involved, you can try something like <a href="https://github.com/powerline/powerline">Powerline</a>, which looks slick and offers more involved status information. And if you want to roll your own, self-educate about <a href="http://www.marinamele.com/2014/05/customize-colors-of-your-terminal-in-mac-os-x.html">how to work with colors in the terminal</a> and <a href="https://www.cyberciti.biz/faq/bash-shell-change-the-color-of-my-shell-prompt-under-linux-or-unix/">the elements you can add to your prompt</a>. There’s a whole galaxy of options out there, and <a href="https://terminalsare.sexy/">Terminals Are Sexy</a> provides guidance to some of the constellations you can explore. Hand-crafted customization is a great way to get used to Bash syntax. If you’re looking to do something more complex with a lengthier command, <a href="https://github.com/codekitchen/pipeline">Pipeline</a> provides an interactive environment to help you refine your output, showing you what your command produces as you edit it.</p>



<p>Once you’ve gotten your file how you like it, do the extra step of creating a personal dotfiles repo. Keep it sanitized (so no keys, tokens, or passwords), and you’ll have safe access to your familiar prompt and whatever other settings you love at every new computer you work on. </p>



<p>You’ve made your prompt your friend. Next, let’s look at making what comes after that into an ally too.&nbsp;</p>



<figure class="wp-block-image size-large"><a href="https://stackoverflow.com/teams?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=extended-trial&amp;utm_content=blog-placement"><img src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-pings-728x90@2x-1200x148.png" width="728" height="90" alt="" class="wp-image-15000" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-pings-728x90@2x-1200x148.png 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-pings-728x90@2x-300x37.png 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-pings-728x90@2x-768x95.png 768w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-pings-728x90@2x.png 1456w " sizes="(max-width: 728px) 100vw, 728px" /></a></figure>



<h2>The just-enough approach to learning Bash</h2>



<p>Bash can be a lot, even when you deal with it every day (especially if some of the codebase comes from someone with an aversion to comments). Not every dev <em>must </em>know Bash, but every dev will benefit from knowing at least some. If nothing else, it helps you understand exactly what’s happening when you use some long, pasted <code>wget</code> command to install a new program. </p>



<p>The good news is that, with a few strategies, you can navigate most of the Bash you’re likely to encounter without having to become an expert. One of my favorite tools is <a href="https://explainshell.com/">Explainshell</a>. It can be difficult to get a good, succinct, and completely relevant explanation for what a sample Bash command means, particularly when you get four or five flags deep into it. Man pages are always a good place to start, but Explainshell is an excellent complement. Paste in your command, and the site breaks down each piece so that you actually know what that long string of commands and flags from that seven-year-old Q&amp;A does. </p>



<p>Sometimes, half the work of navigating the command line is figuring out what subcommands are available. If you’re dealing with a complex tool (looking at you, <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-completion.html">AWS CLI</a>) and find yourself referring to the docs more often than you’d like, take a minute to search for an autocomplete feature for it. Sometimes autocomplete is available as a separate but still official package; other times, a third party has made their own complementary tool. That’s one of the joys of the command line: you will rarely encounter a problem that’s unique to you, and there’s a good chance someone has been annoyed into action and fixed it.<br></p>



<p>If you end up continuing to work with the command line (and I hope you do), getting acquainted with pipes demystifies a lot of this work. A pipe in Linux is when you use the <code>|</code> symbol to chain together commands, piping output from one to another. In Unix and Linux, each tool was designed to do one thing well, and these individual tools can then be chained together as needed to satisfy more complex needs. This is a strategy I use a lot, particularly when I need to create and sift through output in the terminal. </p>



<p>My most common pipe involves adding <code>| grep -i $searchTerm</code> after a command with long output I’d prefer not to pick through manually, if I’m only searching for one thing. (You can use <code>-A</code> and <code>-B</code> to add lines before and after for context, with the number of lines you want as a parameter after each flag. See the <a href="http://linuxcommand.org/lc3_man_pages/grep1.html">grep man page</a> to learn more.) </p>



<p>Also useful: piping the output to <code>less</code>, which is better if I do want to scroll through the whole output, or at least navigate it and search within the open file, using <code>/$searchTerm</code>, <code>n</code> to see the next entry, and <code>N</code> to see the previous. You can also use <a href="https://www.geeksforgeeks.org/cut-command-linux-examples/"><code>cut</code></a> or <a href="https://www.cyberciti.biz/faq/bash-scripting-using-awk/"><code>awk</code></a> to manipulate the output, which is particularly useful if you need to create a file of that output with a very specific format. And if you find yourself parsing JSON output much, getting acquainted with <a href="https://stedolan.github.io/jq/">jq</a> can save you some time.</p>



<p>Let’s look at some of the other conveniences the command line offers. <code>sudo !!</code> repeats your previous command with <code>sudo</code> pasted in front of it. (The <code>!!</code> is Unix/Linux shorthand for “the previous command” and can be used in other situations too.) So if you ran something fairly involved but forgot that it needed root-level permissions, just use <code>sudo !!</code>. Similarly useful: <code>!$</code>, which gives you the value of the first argument of the previous command, so <code>ls ~/Desktop</code> and <code>cd !$</code> would show you the files in <code>~/Desktop</code> and then move you to that directory. And if you need to return to your previous directory and don’t remember the whole path, just type <code>cd -</code> to back up one <code>cd</code> move.&nbsp;</p>



<h2>Faster navigation in text</h2>



<p>Here’s a seemingly simple thing I learned a few years ago that regularly startles even long-tenured engineers. Did you know that you can click into the middle of a line in your terminal? Alt-click will move your cursor to where you need to go. It still requires moving your hands off the keyboard, so it’s a little clunky compared with some keyboard navigation. But it’s a useful tool, and oddly impressive—I’ve stunned people by doing that in front of them and then got the joy of sharing it with them. Now you know it too. </p>



<p>The keyboard shortcut methods of moving your cursor can be equally impressive, though. You can get a lot of mileage out of terminal keyboard shortcuts (to say nothing about making your work a little easier). You can jump to the beginning or end of the line with ctrl-A or E, cut the line from your cursor to the beginning of the line with ctrl-U, or delete the previous word with ctrl-W. Here’s <a href="https://support.apple.com/guide/terminal/keyboard-shortcuts-trmlshtcts/mac">Apple’s long list of keyboard shortcuts for the terminal</a>, which generally work on a Linux command line too. I suggest picking a couple you want to adopt, writing them on a sticky note and putting it on your monitor, and making yourself do it the new way until it feels natural. Then move to the next commands you want to commit to muscle memory, and soon enough, you too can be very efficient… if very confusing to watch for those who don’t work this way. (But then you get to do the kind thing of teaching <em>them</em> the thing you just learned, and the cycle continues.)</p>



<h2>Time travel, terminal style</h2>



<p>If you only need to refer to your last command, <code>!!</code> or just arrowing up and down are great, straightforward options. But what if you need to dig deeper into the past? To search your terminal history, type ctrl-R and then begin typing. Want to see the whole thing? Just type <code>history</code>. </p>



<p>The Mac default is 500 history entries, which is not that much for a heavily used terminal. You can check your history length with <code>echo $HISTFILESIZE</code>. Want to increase its retention? Time to edit <code>~/.bash_profile</code> again. Just set <code>HISTSIZE</code> and <code>HISTFILESIZE</code> to a very large number—10000000 is a good option. Add <code>export HISTSIZE=10000000</code> and <code>export HISTFILESIZE=10000000</code> to <code>~/.bash_profile</code> (and don’t forget to <code>source ~/.bash_profile</code> again or open a new terminal window for it to take effect). For more details on the difference between these two variables, check out the accepted answer <a href="https://stackoverflow.com/questions/19454837/bash-histsize-vs-histfilesize">here</a>. </p>



<p>Now that your history is (more) infinite, it might be good to know how to clean it up. It lives at <code>~/.bash_history</code>, which means you can delete it entirely with <code>rm ~/.bash_history</code>.</p>



<p>But let’s look at some of the other information accessible via the command line: environment variables.&nbsp;</p>



<h2>Your terminal’s hidden values: revealed!</h2>



<p>Environment variables can come from many different places. Some are just part of your OS; you can see some common ones <a href="https://bash.cyberciti.biz/guide/Variables#Commonly_Used_Shell_Variables">here</a>. Others may be put in place via <code>~/.bash_profile</code> when you set them yourself in the terminal or via config or other files run on your system. It’s quick and easy to type <code>echo $varName</code> in the terminal and see if a specific value is set, but what if you don’t know what variables have been set? That’s where <code>set</code>, <code>printenv</code>, and <code>env</code> come in. </p>



<p>These three programs overlap some in output but aren’t identical. Here’s a quick rundown:&nbsp;</p>



<ul><li><code><a href="https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html">set</a> </code>is more complete and will include variables you’ve set in addition to the ones inherent to your environment.&nbsp;</li><li><a href="http://man7.org/linux/man-pages/man1/printenv.1.html"><code>printenv</code></a> and <a href="http://man7.org/linux/man-pages/man1/env.1.html"><code>env</code></a> offer similar output of built-in environment variables, but <code>env</code> has more robust capabilities beyond <code>printenv</code>’s simple display purposes, including running a program in a modified environment. The accepted answer <a href="https://unix.stackexchange.com/questions/123473/what-is-the-difference-between-env-and-printenv">here</a> provides some deep history about the existence of both commands and how and why they differ.&nbsp;</li></ul>



<p>You’ll likely get what you need with set, though. The output is longer, which means you’re more likely to need to pipe to grep or less, but it’s also more likely that you’ll find what you’re looking for.&nbsp;</p>



<h2>Better living through ops skills</h2>



<p>You’ve learned how to customize your command line and make it friendlier for troubleshooting. You’ve learned how to unearth surprise values hiding in your local environment variables. You’ve learned some of how to look like a wizard with aliases and keyboard shortcuts. And I bet you can start spreading the good word of <code>~/.bash_profile</code>. There’s more to Bash and terminal tricks than we’ve laid out here, but it’s yours to discover online—or just ask your friendly local ops engineer out for coffee and ask them their favorite terminal customization. You’ll probably learn more than you expect.  </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/12/when-laziness-is-efficient-make-the-most-of-your-command-line/">When laziness is efficient: Make the most of your command line</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/12/when-laziness-is-efficient-make-the-most-of-your-command-line/feed/</wfw:commentRss>
		<slash:comments>37</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15039</post-id>	</item>
		<item>
		<title>Podcast: Make my Monolith a Micro</title>
		<link>https://stackoverflow.blog/2020/02/11/podcast-make-my-monolith-a-micro/</link>
				<comments>https://stackoverflow.blog/2020/02/11/podcast-make-my-monolith-a-micro/#comments</comments>
				<pubDate>Tue, 11 Feb 2020 05:35:00 +0000</pubDate>
		<dc:creator><![CDATA[Ben Popper]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[The Stack Overflow Podcast]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[microservices]]></category>
		<category><![CDATA[monoliths]]></category>
		<category><![CDATA[stackoverflow]]></category>
		<category><![CDATA[the stack overflow podcast]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15019</guid>
				<description><![CDATA[<p>Sara returns from Miami. The crew chats about Monoliths vs microservices and the lessons we've learned as manager and ICs.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/11/podcast-make-my-monolith-a-micro/">Podcast: Make my Monolith a Micro</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<iframe height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/2fea92ba-261c-4ff1-8846-309c8048192c?dark=false"></iframe>



<p>On this week&#8217;s episode, the crew chats about Sara&#8217;s month working remote from Miami in a house full of nomad programmers. We argue over the pros and cons of monoliths vs microservices. And last but not least, we admit we&#8217;re all terrible managers in our own special way. </p>



<p>You can find the podcast and article that inspired our monolith chat <a href="https://changelog.com/posts/monoliths-are-the-future">here</a>. It&#8217;s the second of Kelsey Hightower&#8217;s &#8220;Unpopular Opinions&#8221; series.</p>



<p>We have heard the requests for full episodes transcripts and we know accessibility is important, so we&#8217;re working on a solution. Stay tuned.</p>



<p>The recipients of the lifeboat badges this episode were for questions that were between&nbsp;<a href="https://stackoverflow.com/questions/42266041/whatt-the-means-about-var-in-golang/42273674#42273674">three</a>&nbsp;and&nbsp;<a href="https://stackoverflow.com/questions/15477962/how-can-i-explicitly-change-the-rowstate-of-an-ado-net-datarow/15478285#15478285">six years old</a>. It&#8217;s a testament to the ongoing value of the knowledge shared on our network and to the contributions of our community to help others through questions and answers.</p>



<p>Last but not least, our&nbsp;<a href="https://stackoverflow.blog/2020/02/05/the-2020-developer-survey-is-now-open/">2020 Developer Survey</a>&nbsp;is open. It takes about 15-20 minutes to complete, and we want to hear from as many coders as possible, regardless of age, experience, or occupation.</p>



<p>This week&#8217;s episode was sponsored by mParticle. What could you do with better data? PMs, developers, and data analysts at customer-obsessed companies like Spotify and Airbnb use mParticle to unify and validate their customer data, streamline their growth stack, to guide product, and make business decisions. Visit&nbsp;<a rel="noreferrer noopener" href="http://mparticle.com/stack" target="_blank">mparticle.com/stack</a>&nbsp;to learn what mParticle can do for you.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/11/podcast-make-my-monolith-a-micro/">Podcast: Make my Monolith a Micro</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/11/podcast-make-my-monolith-a-micro/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15019</post-id>	</item>
		<item>
		<title>Hello World: Curing impostor syndrome by embracing the suck</title>
		<link>https://stackoverflow.blog/2020/02/10/hello-world-curing-imposter-syndrome-by-embracing-the-suck/</link>
				<comments>https://stackoverflow.blog/2020/02/10/hello-world-curing-imposter-syndrome-by-embracing-the-suck/#comments</comments>
				<pubDate>Mon, 10 Feb 2020 14:41:05 +0000</pubDate>
		<dc:creator><![CDATA[Jerome Hardaway]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[hello world]]></category>
		<category><![CDATA[impostor syndrome]]></category>
		<category><![CDATA[learning]]></category>
		<category><![CDATA[stackoverflow]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=15012</guid>
				<description><![CDATA[<p>One thing we continuously speak about in the programming community is impostor syndrome and how to cope with it, but no one talks about tangible steps on how to solve it within yourself. What if instead of learning how to endure, we learned how to cure it? While It’s something that happens to everyone at…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/10/hello-world-curing-imposter-syndrome-by-embracing-the-suck/">Hello World: Curing impostor syndrome by embracing the suck</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>One thing we continuously speak about in the programming community is impostor syndrome and how to cope with it, but no one talks about tangible steps on how to solve it within yourself. What if instead of learning how to endure, we learned how to cure it? While It’s something that happens to everyone at some point in their career, we do not speak about how to overcome this demon and defeat it.&nbsp;<br></p>



<p>As both a developer coming from another field and as a person who has heralded others into this industry, impostor syndrome and I know each other well. It is a neighbor that frequents the halls of my troops’ self esteem, while regularly trying to move back into the barracks of my mind as well. If you know it, you know it is a mastermind of real estate renting space in the heads of many.<br></p>



<p>Once a week I get a message from a troop on the cusp of giving up. They aren’t getting it as fast as the others around them, they feel overwhelmed or the reality hits them that this is hard. They feel like they aren’t cut out for it, that they don’t have “it.” It messes with their egos and makes them think that they are better off quitting and not wasting mine or the teams time.<br></p>



<p>The advice I give my troops on how to overcome it is to “embrace the suck.” Then we discuss the best course of action for them to win the day. Embracing the suck is military slang that means enduring tough situations to get to the progress on the other end. It means toughing it out, doing the hard stuff first because you know the result is going to be rewarding, and it is ingrained in our community.&nbsp;<br></p>



<p>Let&#8217;s talk about the tactics that I use to help my troops, and that has helped me.</p>



<h2>Find someone that keeps it real with you</h2>



<p>One of my troops came to me one day to speak. He was smart as a whip, but he wasn’t getting his breakthrough, so he wanted to know why he wasn’t getting his desired result. Now, having been in situations before where you tell people the truth, it can backfire and turn into a big issue, I was initially tepid. But I decided that the only way to help him reach his goal was to tell him was to “hero up” and be honest. I let him know that while he is smart, he doesn’t really finish projects and doesn’t go deep enough in his builds, and it&#8217;s reflected in his work. Employers read this as you might not be as dedicated to the craft as they need you to be. We then created a plan of action to get him where he needs to be. Three months later, he landed a job that made him happy. None of this would have happened if I lied to him and made him feel like he was doing everything right.&nbsp;</p>



<a href="https://stackoverflow.com/teams?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=extended-trial&amp;utm_content=blog-placement" class="d-block mx-auto ta-center mt48 mb32"><img src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-search-less-728x90@2x-1200x148.png" width="728" height="90" alt="" class="wp-image-15003" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-search-less-728x90@2x-1200x148.png 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-search-less-728x90@2x-300x37.png 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-search-less-728x90@2x-768x95.png 768w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-search-less-728x90@2x.png 1456w " sizes="(max-width: 728px) 100vw, 728px" /></a>



<p>One of the first steps to get over your impostor syndrome, is to find someone that is going to call you on your sh*t and let you know what you need to do to level up. By doing so you find someone much more valuable than any accountability partner, cause their only purpose is looking for the holes in your game. Before you clutch your pearls at this remember that this person’s sole purpose is to help you win. If you want to be better and stop feeling like you’re not up to snuff, you need at least one person who keeps it 100 with you and helps you identify weaknesses. That person will keep you grounded because they care about you, but they are objective, so their personal feelings will never interfere with telling you the truth and helping you become the best version of you.&nbsp;<br></p>



<p>Ironically, my wife is mine. She is the first person to call me out if I am not the best version of me, and she doesn’t sugarcoat it. She knows what to say to kick me into overdrive when I am subpar in my work. Find you someone who knows you and have them keep you honest.<br></p>



<h2>Identify and train the weakness</h2>



<p>Identifying weaknesses and training them for improvement is paramount. In the end, you’re only as strong as your weakest skill, so sharpening the areas you don&#8217;t feel the best in will help the areas that you are better in shine more. My coworker Tom is a great front end developer and a webpack ninja, but when he taught the team a PHP trick that made his front end skills look even more impressive. He was able to show things to our back end devs that they never saw. It made everyone step up their game.<br></p>



<p>Building a product that looks good has never been an issue for me; what always has been was coding challenges and <a href="https://www.lifesize.com/en/video-conferencing-blog/whiteboard-sharing">whiteboarding</a>. Full disclosure: I think that having people do things that have nothing to do with their job is the dumbest thing ever and an old gatekeeper tactic that keeps qualified talent out of the industry. Unfortunately, we have to deal with the world as it is until we get in a position to help mold it as it should be, and I am not the type to allow something like that to interfere with my goals, so I did the steps to get better.&nbsp;<br></p>



<p>I ordered a whiteboard off or Amazon and found <a href="https://www.w3resource.com/javascript-exercises/javascript-basic-exercises.php">150 perfect beginner exercises on W3C resources</a> that helped me focus on the syntax and think better without being too intimidating. I would spend only thirty minutes on a problem and no more. Time-boxing made it feel more real. The first one took me a week. I solved it in two days then built a UI for it because I wanted to train myself to go above and beyond in my craft. This practice led me to be able to do tougher challenges on <a href="https://www.hackerrank.com/">HackerRank</a> and <a href="https://exercism.io/">Exercism</a>. While it is still nowhere near my strong suit, I am not afraid to pick up the marker and get to work.&nbsp;<br></p>



<p>By identifying the weakness and training it, I also found a way to stand out by incorporating my strength (design and product building) into a part of the process. That way, it stayed exciting and engaging for me. It’s a reflection of my favorite saying, “Easy training, hard fight. Hard training, easy fight”.<br></p>



<p>I advise you to do the same. Identify your weaknesses based on the most harsh of critics; your interviews. Once you do that, make a plan and work diligently on shoring up your skills so that they can’t be used against you, but also help your other skills stand out.</p>



<h2>RTFM ( Read the freaking manual )<img src="https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f602.png" alt="😂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></h2>



<p>You know the old saying that if you don’t want people to know something, put it in a book? Well, for programming, you put it in the docs if you want to hide it. You would be amazed how many people will do numerous courses and read articles before going to the docs and looking (It&#8217;s me, I’m people <img src="https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f602.png" alt="😂" class="wp-smiley" style="height: 1em; max-height: 1em;" />).&nbsp;<br></p>



<p>When I first started, like many of you I always looked for the shiny new course, but now the MDN is my go to documentation resource. It holds more secrets than any of the books I have read, and it always has something new to show that instantly humbles me and makes me eager to learn more.&nbsp;<br></p>



<p>Having said that, I know that even with the vast improvements that docs have made over the years, they are still not as fun or engaging as some instructors&#8217; videos, but promise that it&#8217;s worth it. Reading them and taking notes will make you a better developer by giving you a better understanding of the tools you use as well as help expedite your expertise in the industry. You&#8217;re truly doing yourself a disservice by not reading open source documentation.<br></p>



<h2>Define your “real programmer“ metrics</h2>



<p>Impostor syndrome is all about feeling like you don’t belong there, so, for me, this was a big one. When did I considered myself a programmer? If everyone has computer science degrees and spoke about Big O, LIFO, and FIFO, what would make me feel like I was a programmer? So I had to decide for myself what the metrics were that made me feel like I was a programmer. Was it if I was contributing to open source regularly or doing projects after work? Was it if I was a person with a million followers on Twitter or if the folks at the famous programmer&#8217;s table knew my name?&nbsp;<br></p>



<p>It turned out to be simple: It was when I got paid while wearing the title. It’s an ode to when I was training to be on the Air Force Boxing team and the boxer Roy Jones Jr. used to scream at me “Skills pay bills.” Once I stopped comparing myself to everyone and defined what made me feel like a real programmer, I took that metric and moved forward. I honestly can’t answer this question for you, but you can. That’s the most fantastic thing about tech; you don’t have to follow anyone else’s rules, you can lead, support, or be a maverick and develop your path. It&#8217;s beautiful.</p>



<p></p>



<p>Hopefully these tips and tactics they I have used for myself and others will help you defeat impostor syndrome or help you help someone else who might be struggling. I really hope this is impactful and actionable for you because in the end as educators. we really are nothing more than the sum of the people we help.<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/10/hello-world-curing-imposter-syndrome-by-embracing-the-suck/">Hello World: Curing impostor syndrome by embracing the suck</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/10/hello-world-curing-imposter-syndrome-by-embracing-the-suck/feed/</wfw:commentRss>
		<slash:comments>33</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">15012</post-id>	</item>
		<item>
		<title>The Overflow #10: The 500-mile email</title>
		<link>https://stackoverflow.blog/2020/02/07/the-overflow-10-the-500-mile-email/</link>
				<comments>https://stackoverflow.blog/2020/02/07/the-overflow-10-the-500-mile-email/#comments</comments>
				<pubDate>Fri, 07 Feb 2020 15:09:00 +0000</pubDate>
		<dc:creator><![CDATA[Ryan Donovan]]></dc:creator>
				<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[The Overflow]]></category>
		<category><![CDATA[announcements]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[newsletter]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14991</guid>
				<description><![CDATA[<p>In this week's newsletter, we've we get right to the the point on floating point numbers, live coding that rocks, and how containers changed the world.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/07/the-overflow-10-the-500-mile-email/">The Overflow #10: The 500-mile email</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<tr>
                                <td style="padding-top: 20px; text-align: center;" class="adjust-logo">
                                    <h1 style="text-align: center; margin: 0; line-height: 1;">
                                        <img src="https://d2axdqolvqmdvx.cloudfront.net/5a861290-bdcc-4f59-af25-6c5bc0b9eb29/logotheoverflow.png" alt="The Overflow." height="" width="354" border="0" style="width: 100%; max-width: 354px; height: auto; display: block; margin: 0 auto; font-weight: normal; font-family: arial, sans-serif; font-size: 15px; color: #3C3F44;">
                                    </h1>
                                </td>
                            </tr>
                            <tr>
                                <td style="padding-bottom: 10px; font-family: 'Roboto Slab', arial, sans; font-size: 12px; line-height: 15px; color: #848D95; text-align: center; text-transform: uppercase; letter-spacing: .1em;" class="unstyle-auto-detected-links">
                                    February 2020
                                </td>
                            </tr>
                            <!-- Header : END -->
                            <!-- Intro : BEGIN -->
                            <tr>
                                <td style="padding-top: 20px;">
                                    <p style="margin: 0 0 30px;">
                                      Welcome to ISSUE #10 of The Overflow, a newsletter by developers, for developers, written and curated by the Stack Overflow team and <a href="https://cassidoo.co/" style="color: #0077cc; text-decoration: none;">Cassidy Williams</a> of <a href="https://reacttraining.com/" style="color: #0077cc; text-decoration: none;">React Training</a>. You can read more about it <a href="https://stackoverflow.blog/2019/10/01/introducing-overflow-newsletter-cassidy-williams" style="color: #0077cc; text-decoration: none;">here</a>. In this week&#8217;s newsletter, we get right to the the point on floating point numbers, live coding that rocks, and how containers changed the world.
                                    </p>
                                </td>
                            </tr>
                            <!-- Intro : END -->
                            <!-- Section : BEGIN -->
                            <tr>
                                <td style="padding: 30px 0 0; border-top: 1px solid #D6D8DB;" class="sm-pt">
                                    <table border="0" cellpadding="0" cellspacing="0" role="presentation">
                                        <tr>
                                            <td style="vertical-align: middle; padding: 0 10px 20px 0;">
                                                <img src="https://d2axdqolvqmdvx.cloudfront.net/d7aaecb9-5ebc-493a-be56-59637e03b531/iconblog2x.png" height="26" width="26" border="0" alt="" style="display: block; font-family: arial, sans-serif; font-size: 15px; line-height: 15px; color: #3C3F44;">
                                            </td>
                                            <td style="vertical-align: middle; padding-bottom: 20px;">
                                                <h2 style="margin: 0; font-family: 'Roboto Slab', arial, sans; font-size: 19px; line-height: 19px; font-weight: bold; color: #3C3F44;">
                                                    From the blog
                                                </h2>
                                            </td>
                                        </tr>
                                    </table>
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://stackoverflow.blog/2020/02/04/podcast-your-buddy-is-typing-teresa-dietrich/" style="font-weight: bold; color: #0077cc; text-decoration: none;">Podcast: Your Buddy is Typing</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">stackoverflow.blog</span><br>
                                           This week we sit down with Teresa Dietrich, Stack Overflow’s new Chief Product Officer. Teresa, a CMU grad and tech industry veteran, shares a story from her time at AOL: the day three little dots emerged without warning and turned their network upside down.


                                         
                                           <p style="margin: 0 0 30px;">
                                        <a href="https://stackoverflow.blog/2020/01/29/the-live-coding-language-that-lets-you-be-an-actual-rock-star/" style="font-weight: bold; color: #0077cc; text-decoration: none;">The live coding language that lets you be an actual rock star</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">stackoverflow.blog</span><br>
                                    Code on a screen is not likely to land you the legions of screaming fans that a sick guitar solo will. Unless you’re Sam Aaron, that is. He’s the creator of Sonic Pi, a live coding language for making music. It’s an open source project that he built which creates music from code in real time. 


                                    </p>
                                         
                                       
                            <!-- Section : END -->
                            <!-- Section : BEGIN -->
                            <tr>
                                <td style="padding: 30px 0 0; border-top: 1px solid #D6D8DB;" class="sm-pt">
                                    <table border="0" cellpadding="0" cellspacing="0" role="presentation">
                                        <tr>
                                            <td style="vertical-align: middle; padding: 0 10px 20px 0;">
                                                <img src="https://d2axdqolvqmdvx.cloudfront.net/8da5bcb5-7dbe-4415-88a5-476c819ff156/iconqa2x.png" height="26" width="26" border="0" alt="" style="display: block; font-family: arial, sans-serif; font-size: 15px; line-height: 15px; color: #3C3F44;">
                                            </td>
                                            <td style="vertical-align: middle; padding-bottom: 20px;">
                                                <h2 style="margin: 0; font-family: 'Roboto Slab', arial, sans; font-size: 19px; line-height: 19px; font-weight: bold; color: #3C3F44;">
                                                    Interesting questions
                                                </h2>
                                            </td>
                                        </tr>
                                    </table>
                                    
                                     <p style="margin: 0 0 30px;"><i> Found a good question or answer? Share it with the hashtag #StackOverflowKnows. We’ll include our favorites in the future.  </i></p>
                                    
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://physics.stackexchange.com/questions/528549/how-is-it-possible-there-are-uv-photos-while-our-eyes-cannot-detect-uv-waves" style="font-weight: bold; color: #0077cc; text-decoration: none;">How is it possible there are UV photos while our eyes cannot detect UV waves?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">physics.stackexchange.com</span><br>
                                    A UV camera is like playing light an octave lower.


                                    </p>
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://chemistry.stackexchange.com/questions/127021/what-substances-do-humans-consume-that-are-caloric-but-neither-protein-carb-no" style="font-weight: bold; color: #0077cc; text-decoration: none;">What substances do humans consume that are caloric but contain neither protein, carb, nor fat?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">chemistry.stackexchange.com</span><br>
                                    Well, without carb, protein, and fat, you’re just eating plant fiber like a panda. 
                                    </p>
                                    
                                    
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://retrocomputing.stackexchange.com/questions/13493/where-did-the-free-parameters-of-ieee-754-come-from" style="font-weight: bold; color: #0077cc; text-decoration: none;">Where did the free parameters of IEEE 754 come from?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">retrocomputing.stackexchange.com</span><br>
                                 Take a deep dive into the history of everyone’s favorite data type, the floating point number, and where its odd specifications come from.  
                                    </p> 
                                    
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://security.stackexchange.com/questions/225259/does-tor-help-us-to-prevent-isp-tracking" style="font-weight: bold; color: #0077cc; text-decoration: none;">Does Tor help us to prevent ISP tracking?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">security.stackexchange.com</span><br>
                                    For your traffic, Tor can hide what you’re sending and where, but not how much and when. 
                                    
                                    </p> 
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://law.stackexchange.com/questions/48724/does-gdpr-include-uk-customers-or-not-anymore" style="font-weight: bold; color: #0077cc; text-decoration: none;">Does GDPR include UK customers, or not anymore?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">law.stackexchange.com</span><br>
                                    Or do they need a GDPRexit as well?
                                    </p>
                                </td>
                            </tr>
                            <!-- Section : END -->
                            <!-- Section : BEGIN -->
                            <tr>
                                <td style="padding: 30px 0 0; border-top: 1px solid #D6D8DB;" class="sm-pt">
                                    <table border="0" cellpadding="0" cellspacing="0" role="presentation">
                                        <tr>
                                            <td style="vertical-align: middle; padding: 0 10px 20px 0;">
                                                <img src="https://d2axdqolvqmdvx.cloudfront.net/fae18822-12a0-46de-bab8-ddb30242697d/iconlinks2x.png" height="26" width="26" border="0" alt="" style="display: block; font-family: arial, sans-serif; font-size: 15px; line-height: 15px; color: #3C3F44;">
                                            </td>
                                            <td style="vertical-align: middle; padding-bottom: 20px;">
                                                <h2 style="margin: 0; font-family: 'Roboto Slab', arial, sans; font-size: 19px; line-height: 19px; font-weight: bold; color: #3C3F44;">
                                                    Links from around the web
                                                </h2>
                                            </td>
                                        </tr>
                                    </table>
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://blog.cloudflare.com/javascript-libraries-are-almost-never-updated/" style="font-weight: bold; color: #0077cc; text-decoration: none;">JavaScript libraries are almost never updated once installed</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">blog.cloudflare.com</span><br>
                                    Chances are, when you&#8217;re setting up a project, you install the libraries you need, then never touch them again. This is an interesting analysis of the &#8220;set it and forget it&#8221; trend.
                                    </p>
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://herewecode.io/blog/how-to-learn-flutter-in-2020/" style="font-weight: bold; color: #0077cc; text-decoration: none;">How to learn Flutter in 2020</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">herewecode.io</span><br>
                                    Flutter is trending in the mobile dev world, but learning a language like Dart can be intimidating and tedious. Here&#8217;s a great set of resources for getting up to speed.

                                    </p>
                                    <p style="margin: 0 0 30px;">
                                        <a href="http://www.ibiblio.org/harris/500milemail.html" style="font-weight: bold; color: #0077cc; text-decoration: none;">The case of the 500-mile email</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">ibiblio.org</span><br>
                                    Here&#8217;s an incredibly amusing story from the early 2000s, when email configurations were a little tougher to understand than they are today. Enjoy the laughs, and even better, enjoy your modern email client!

                                    </p>
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://dev.to/heroku/how-containers-changed-the-world-1jip" style="font-weight: bold; color: #0077cc; text-decoration: none;">How containers changed the world</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">dev.to</span><br>
                                    &#8220;Containers&#8221; can feel like just an overused buzzword, especially if you don&#8217;t use them or know how they work. If you&#8217;d like a great review on why they matter and how they increase dev productivity, this is the article for you!
                                    </p>
                                    
                                    
                                    
                                    <p style="margin: 0 0 30px;">
                                        <a href="https://sarahmhigley.com/writing/roles-and-relationships/" style="font-weight: bold; color: #0077cc; text-decoration: none;">Roles and relationships</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">sarahmhigley.com</span><br>
                                It&#8217;s easy to ride the accessibility train and think that as long as you&#8217;re adding ARIA attributes and roles that you&#8217;re in the clear. Here&#8217;s a good overview of the relationships between different roles, and how you can properly set up your application&#8217;s accessibility tree.
                                    </p>
                                   
                                </td>
                            </tr>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/07/the-overflow-10-the-500-mile-email/">The Overflow #10: The 500-mile email</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/07/the-overflow-10-the-500-mile-email/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14991</post-id>	</item>
		<item>
		<title>How Shapeways&#8217; software enables 3D printing at scale</title>
		<link>https://stackoverflow.blog/2020/02/06/how-shapeways-software-enables-3d-printing-at-scale/</link>
				<comments>https://stackoverflow.blog/2020/02/06/how-shapeways-software-enables-3d-printing-at-scale/#comments</comments>
				<pubDate>Thu, 06 Feb 2020 15:19:57 +0000</pubDate>
		<dc:creator><![CDATA[Matt Boyle]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Partner Content]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[3d printing]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[software development]]></category>
		<category><![CDATA[stackoverflow]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14955</guid>
				<description><![CDATA[<p>While most news about the 3D printing industry focuses on advancement in hardware and materials, software has played a crucial role in the democratization of 3D printing. Companies like Shapeways have delivered software to generate 3D files, prepare and optimize them for printing, and manufacture and distribute.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/06/how-shapeways-software-enables-3d-printing-at-scale/">How Shapeways&#8217; software enables 3D printing at scale</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>A decade or two ago, getting a custom part manufactured required you to have your own workshop or to make a visit to a factory floor. Today, you can create your own 3D model, upload it to a website, and have a functional product delivered to your door within a few days—a turn around time unimaginable just 20 years ago.<br></p>



<p>While most news about the 3D printing industry focuses on advancement in hardware and materials, software has played a crucial role in the democratization of 3D printing. Companies like Shapeways have delivered software to generate 3D files, prepare and optimize them for printing, and manufacture and distribute.<br></p>



<p>Shapeways’ primary technology offerings can split into two categories—the ability to upload, repair, price, and purchase 3D models in a variety of materials, and back-end systems driving the manufacturing, distribution, and fulfillment of our orders at a global scale. I’m going to discuss three distinct pieces of software that occur in separate steps in the buying process: one that help customers upload designs and make purchases: Model Processing; one that securely shows the customer the final printable model: ShapeJS; and one that helps us manufacture, distribute, and fulfill those design purchases: Inshape.&nbsp;</p>



<h2>Processing customer models</h2>



<p>Our first contact with a customer’s order is when they upload a 3D model. We have no control over the quality and printability of the model, so our software repairs errors during model generation where it can and analyzes their printability in a wide variety of materials. This is a very compute-heavy process—we calculate the model surface area and volume, determine the number of parts that the model is composed of, and examine the model for errors and attempt to repair them, all within a mean time of 25 seconds.&nbsp;<br></p>



<p>In order to deliver these results, we needed to build a system that leverages parallelism and provides easy scalability to handle fluctuations in load without breaking our SLA. To start, we decided to build individual services that are each responsible for evaluating different components of printability. These services fall into three categories: model validation, model pricing calculation, and model repair.&nbsp;<br></p>



<p>Model validation services are charged with validating that the model can be printed in the first place. These checks make sure that the file is valid, that we can process it, and that the model is manifold—water-tight. Pricing calculation services are responsible for generating pricing components of our models, including but not limited to volume, part count, and surface area. Finally, fixing services help us repair our customer models and ensure that they’re printable. This includes steps like repairing meshes, decimating models to reduce triangle counts, and fixing inverted matrices on the model. <br><br></p>



<p>Some of these services generate new files to facilitate printing, production, or image display on our site. These services are mostly implemented in Java (the language of choice for our 3D tools team), though some have been re-implemented in <a href="https://en.wikipedia.org/wiki/CUDA">CUDA</a> to run directly on GPUs for improved performance.<br></p>



<p>Once we implemented these services, we had to string them together into what we call a Model Processing Pipeline. This pipeline is a chain of the services described above that takes in a 3D file at the start and outputs a fully priced, printable, rendered 3D Model on Shapeways.com. We defined these pipelines in another service called the Director, which is effectively a <a href="https://en.wikipedia.org/wiki/Directed_acyclic_graph">directed acyclic graph</a> of model processing services.&nbsp;<br></p>



<p>To ensure that our services remain available at all times, we needed another layer to manage traffic. So rather than pointing directly to the services themselves, these steps indicate <a href="https://activemq.apache.org/">ActiveMQ</a> queues, which act as load balancers for a pool of services that can handle a pipeline step. Using ActiveMQ in this fashion allows us to run our services anywhere in our hybrid cloud, as well as to scale at the service level rather than the pipeline level. Need more mesh repair compute in Europe? Spin up more instances in either our data center or AWS and subscribe them to the queue. With this capability, we’re able to optimize our model processing compute power for both user experience and cost, providing a best-of-both-worlds experience for Shapeways and our customer base.<br></p>



<figure class="wp-block-image size-large"><a href="https://stackoverflow.com/teams?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=extended-trial&amp;utm_content=blog-placement"><img src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x-1200x148.png" alt="" class="wp-image-15005" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x-1200x148.png 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x-300x37.png 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x-768x95.png 768w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2020/02/sot-nocc-collaborate-728x90@2x.png 1456w " sizes="(max-width: 1200px) 100vw, 1200px" /></a></figure>



<h2>Secure real-time rendering</h2>



<p>Once we’ve got a printable model, we have to actually display it to the user in 3D for their review. Our uploaders have a chance to perform a visual review of key geometry components to be sure that our repair process didn’t alter the model. To assist with this review, we provide visualizations to help users understand potential problem areas with their models, such as thin walls or unintentionally connected parts. These visualizations are rendered directly on the users own computer graphics card, ensuring fast and reliable performance as they review their files.&nbsp;<br></p>



<p>Visualizing the customer’s own model is easy enough; they own the model, so they can render it on their system. But in addition to the online 3D printing service, Shapeways also provides a marketplace for our uploaders to open a shop and sell prints of their models. Our customers purchasing from our uploaders want to see a three-dimensional view of the models that they’re thinking about purchasing.&nbsp;<br></p>



<p>Here’s where the problem occurs—the industry-standard visualizations rendered on the consumers computer require us to transmit the entirety of the model file data to that users video card via WebGL. Bad actors can easily lift this 3D file from their own graphics cards, thereby stealing the model from the original uploader without paying for it, a massive violation of their IP rights. Shapeways takes the IP rights of all of our customers extremely seriously, so even the possibility of this edge case was deemed too risky to let stand. Therefore, we decided to build our own IP-safe 3D viewer to allow customers to view parts in 3D.&nbsp;<br></p>



<p>Enter <a href="https://shapejs.shapeways.com/v2/examples">ShapeJS</a>. ShapeJS is a JavaScript-based tool we created to generate and display 3D geometry in real-time on the user’s browser. We created ShapeJS as a research project—could we create a web-based, voxel-backed, IP-safe, 3D design interface for developers as opposed to for those with background in 3D modeling? The back end of ShapeJS is built entirely in CUDA and runs directly on a server GPU for high-performance rendering.<br></p>



<p>ShapeJS is a parametric design tool, which means that you describe the geometry you want to create in code, and the tool converts this into printable 3D geometry. For example, here’s a simple ShapeJS function to create a <a href="https://en.wikipedia.org/wiki/Gyroid">gyroid</a> extruded through a sphere.&nbsp;<br></p>



<pre class="wp-block-preformatted"> function main(args) {
    var radius=25*MM;
    var sphere=new Sphere(radius);
    var gyroid=new VolumePatterns.Gyroid(args.period*MM,args.thickness*MM);
    var intersect=new Intersection();
    intersect.setBlend(2*MM);
    intersect.add(sphere);
    intersect.add(gyroid);
    var s=26*MM;
    return new Scene(intersect,new Bounds(-s,s,-s,s,-s,s));
}
</pre>



<p>Let’s take it a few lines at a time.<br></p>



<pre class="wp-block-preformatted">   var radius=25*MM;
   var sphere=new Sphere(radius);
   var gyroid=new VolumePatterns.Gyroid(args.period*MM,args.thickness*MM);</pre>



<p>These first three lines define two pieces of geometry: a sphere of radius 25mm and a gyroid with period and thickness defined by user-provided arguments.<br></p>



<pre class="wp-block-preformatted">   var intersect=new Intersection();
   intersect.setBlend(2*MM);
   intersect.add(sphere);
   intersect.add(gyroid);</pre>



<p>These four lines create a boolean intersection, set a blending radius to define how sharply the objects intersect each other (think photoshop blur tool), and then add both our sphere and our gyroid to the intersection. This effectively creates the sphere, then removes from it the area defined by the gyroid.&nbsp;<br></p>



<pre class="wp-block-preformatted">var s=26*MM;
return new Scene(intersect,new Bounds(-s,s,-s,s,-s,s));
</pre>



<p>These final two lines create a ShapeJS Scene, which describes the visual render that will be returned to the ShapeJS interpreter for display. This scene is 52 milimeters wide, and contains the intersection of the sphere and the gyroid right in the middle. Running this function in the ShapeJS IDE will result in a nice, posable gyroid. You can play around with this <a href="http://shapejs.shapeways.com/ide?shapeJsScript=/rrstatic/javascript/shapejs/2.0/scripts/gyroid.js">here</a>. There are other features such as configuring the UX that you’ll see in the code, but I omitted them for brevity.<br></p>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/oBzoDDnZn7eH4PrGrxfqGjo-kMRDT8xVLnehlS4O9NHXw_PQ3vgp4MpVm2X7VpquNtO1LBoXmplu8J2YjNF2pN0t4fwDSfkBXC8Wbgg_StrUQ7qxzwn2e5J8ICl_D_WgH1etA1Y1" alt=""/></figure>



<p>Now, let’s talk about IP safety. The crux of the issue is this: so long as we’re sending the actual 3D model file over the internet to the customer, we’re putting the model owner’s IP at risk. ShapeJS doesn’t work this way. Rather, what ShapeJS does is connect directly to a Shapeways-owned graphics card, where scripts interpret the model, and their results are returned to the user. The results, in this case, are 2D images of the portion of the 3D model that is visible in the scene. When the user interacts with the scene, the GPU renders the new “view” from the users perspective and streams it to their browser. This happens quite quickly and creates an animation that gives the end user the impression that they’re manipulating a 3D model in their browser. Here’s what those back end calls look like:</p>



<figure class="wp-block-image"><img src="https://lh5.googleusercontent.com/6q4kRK172TT7hfd_84r33TmFYjqOXCcgGilWW46D40v5_a4zSiHt-reqlCzXERbJkRDmPFQ9uuY6iSm7fnXTIf1DtkPF8YvTdr0fmji59VS2YCLBaOEvDA21EOAVDFjqELXOKb8L" alt=""/></figure>



<h2>Managing the 3D printer infrastructure</h2>



<p>Everything described up to this point is focused at the consumer-facing portion of Shapeways. However, we’re more than a website—Shapeways has two 3D printing facilities running around 80 machines in total, a supply chain network of over 70 production partners for overflow and special materials, and a global distribution footprint. We process over 10,000 individual (and often unique) parts through our system on a daily basis. In order to coordinate all of this activity, we’ve built an Enterprise Resource Planning (or ERP) tool, Inshape, from the ground-up, focused on the unique challenges presented by 3D printing.<br></p>



<p>ERPs are nothing new. Companies like Netsuite (now Oracle), SAP, Siemens, and more have been providing ERP software since the mid 90s. However, these solutions are aimed at traditional business—high-value individual customers purchasing large quantities of parts from a finite catalog of available offerings. For example, consider Ford Motor Company. They’ve got a set number of vehicles, each with a set bill of materials. When they need replacement headlamps from their provider, they know exactly what they’re buying, how much it costs, and who to pay for it.&nbsp;<br></p>



<p>Compare this to Shapeways: we have a large number of retail (implicity low-value, when compared to enterprises) customers, purchasing small quantities from a theoretically infinite catalogue of available offerings (something like 50% of what’s ordered on Shapeways on any given day is being ordered for the very first time). The available offerings just didn’t fit with our business needs. So if you can’t buy them, build them.&nbsp;<br></p>



<p>Inshape is a web-based ERP, designed with the goal of shepherding our customer orders from placement to shipment quickly, reliably, and at a high level of quality. Under the hood, Inshape is a collection of tools and services built to meet our goals, including up-to-the-second part tracking, workflow planning, quality monitoring, machine interfaces, and shipping provider integrations. I’ll speak specifically about two technically interesting features of Inshape: build planning and equipment monitoring<br></p>



<p>When most people think of a 3D printer, the first image that pops into mind is something like a makerbot: a desktop printer that produces a single part at a time. At Shapeways, we’re using industrial 3D printers capable of producing up to 1000 parts at once. In order to use our machines as efficiently as possible, we need to get as many of our current backlog of parts into a printer as we safely can on every single build. This is what’s known in computer science as a <a href="https://en.wikipedia.org/wiki/Packing_problems">Packing Problem</a>. Where we differ from the norm is that we’re not packing known objects; we’re packing a unique set of parts that varies every single time we need to pack a job.&nbsp;<br></p>



<p>To solve this problem, we’ve built our own, in-house packing solution. We combine the knowledge we have about our customer lead times, specific geometries in our pipeline, known capabilities of our individual printers, and years of experience manufacturing parts into a service which autonomously and iteratively packs jobs for production. We’ve been able to almost double the industry standard of job density though this system, resulting in shorter lead times for our customers and more throughput for our factories.<br></p>



<p>Now, about those machines. As mentioned earlier, they’re not your standard desktop 3D printers. They’re expensive assets that have maintenance requirements, service contracts, and individuals designated to each of them who are responsible for keeping them up and running. These machines produce a ton of data about each individual job—how long did it run, how much material did it consume, what percentage of each individual layer of the build was exposed to the sintering laser&#8230; the list goes on. On most of our printers, however, this data was never designed to leave the machine. This makes it almost impossible to aggregate this data with the overall production data that we have in our system. Boo!<br></p>



<p>The good news is that, by hook or by crook, we’re able to retrieve this data from most of our machines. Whether it’s by API client (the best case) to remotely monitoring log files and inferring actions (not the best case), we have designed a system to collect data from these machines and aggregate it in a primary data center location. The system is really neat—we’ve built a service that’s capable of being deployed as a primary (in the data center, as an authoritative source) or buffer (in the factories, directly communicating to machines) configuration. This split enables us to have real-time access to machine data in our factories for real-time decisions, while ensuring eventual consistency in our data centers for more historical reports like efficiency or uptime. As we continue to invest in understanding our manufacturing equipment, we see a direct correlation in our efficiency and speed of manufacturing.<br></p>



<p>As you can see, software is a critical part of the 3D printing world. Whether it’s preparing a file for production, creating compelling visuals for merchandising and sales, or facilitating the production, fulfillment, and quality of the end print, if you don’t have the right software, you don’t have much. I hope this peek behind the curtain has been helpful. Thanks for reading!<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/06/how-shapeways-software-enables-3d-printing-at-scale/">How Shapeways&#8217; software enables 3D printing at scale</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/06/how-shapeways-software-enables-3d-printing-at-scale/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14955</post-id>	</item>
		<item>
		<title>The 2020 Developer Survey is now open!</title>
		<link>https://stackoverflow.blog/2020/02/05/the-2020-developer-survey-is-now-open/</link>
				<comments>https://stackoverflow.blog/2020/02/05/the-2020-developer-survey-is-now-open/#comments</comments>
				<pubDate>Wed, 05 Feb 2020 16:30:09 +0000</pubDate>
		<dc:creator><![CDATA[Ryan Donovan]]></dc:creator>
				<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[announcements]]></category>
		<category><![CDATA[developer survey]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14933</guid>
				<description><![CDATA[<p>It’s that time of year again—we’re launching our 2020 Developer Survey. We love watching how this survey data evolves year-over-year, and this year we are focused on collecting insights from a sample that is representative of coders around the world.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/05/the-2020-developer-survey-is-now-open/">The 2020 Developer Survey is now open!</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>It’s that time of year again—we’re launching our <a href="https://stackoverflow.com/dev-survey/start?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=dev-survey-2020">2020 Developer Survey</a>. We can’t believe that it’s been that long from our first one, where we saw Android developers overtake iOS devs in the battle for mobile supremacy. That survey only had 2,500 respondents. We’ve been able to reach more developers every year. While we&#8217;d love that number to continue to grow, we want that to happen while collecting insights from a representative sample of everyone.</p>



<p>That’s right, we want our survey to represent <strong>everyone who codes</strong>. The more data points that we can&nbsp; gather on what life is like for developers around the world, the more useful the results will be to you and the tech ecosystem at large. While we have included a few questions about Stack Overflow itself, the majority of the survey covers general programming topics, like the languages people love and hate. This is larger than us; it’s about the programming community as a whole, whether they’re active participants on our network or not.&nbsp;</p>



<p>For this survey to work, we need your help. If you’re reading this, you’re probably an engaged Stack Overflow user. We’ve been testing with some beta users, and found that it takes about 20 minutes to <a href="https://stackoverflow.com/dev-survey/start?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=dev-survey-2020">complete the survey</a>. That&#8217;s right, in the time it takes to watch a single episode of <em>Friends,</em> you get to make your voice heard in the data that will define this moment in coding. The survey will be open and accepting your answers until February 25.</p>



<p>In addition to taking the survey, we ask that you share this with every programmer that you know (because we know not everybody who codes visits Stack Overflow or reads the blog). Drop the link in your work’s #engineering chat channel, share in on your social media accounts, and get folks involved however you can.&nbsp;</p>



<p>We learned last year that a surprising number of people who code aren’t doing it for work, but as a hobby or a form of continuing education. We want to hear from those voices as well. Here’s an incredible stat we came across recently: most big business surveys peg the number of active software developers around the globe at 20-25 million. But over 50 million unique visitors come to Stack Overflow every month. There are twice as many people working with code as recorded in official stats, and we want to hear from all of you.</p>



<p>Despite the broad reach of Stack Overflow, we don’t manage to reach everyone. <a href="https://insights.stackoverflow.com/survey/2019#community">Previous surveys</a> have indicated that we still need to do some work to welcome everyone, and we’re committed to improving year-over-year, which includes gauging the welcomeness of our site through questions in the survey. So please, if you code in any capacity, contribute to the survey. And if you have friends that code but don’t typically use Stack Overflow, send them the link and encourage them to share their thoughts.</p>



<p>One thing to note: if you use a third-party ad-blocking plugin, you may see error messages during the survey. Our third-party survey partner, Qualtrics, doesn’t work very well with certain ad-blockers and security software. To avoid issues that may prevent you from taking the survey, we ask that you specifically <strong>unblock Qualtrics</strong> in your plugins or <strong>pause the plugin </strong>while you take the survey.&nbsp;</p>



<p>So get in there and <a href="https://stackoverflow.com/dev-survey/start?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=dev-survey-2020">tell us</a> what it’s like being a developer in 2020! We’ll share our results in a few months once everyone has had their say and we’ve had time to analyze the insight you’ve given us.&nbsp;<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/05/the-2020-developer-survey-is-now-open/">The 2020 Developer Survey is now open!</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/05/the-2020-developer-survey-is-now-open/feed/</wfw:commentRss>
		<slash:comments>11</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14933</post-id>	</item>
		<item>
		<title>Podcast: Your Buddy is Typing</title>
		<link>https://stackoverflow.blog/2020/02/04/podcast-your-buddy-is-typing-teresa-dietrich/</link>
				<comments>https://stackoverflow.blog/2020/02/04/podcast-your-buddy-is-typing-teresa-dietrich/#comments</comments>
				<pubDate>Tue, 04 Feb 2020 05:30:00 +0000</pubDate>
		<dc:creator><![CDATA[Ben Popper]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[The Stack Overflow Podcast]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[stackoverflow]]></category>
		<category><![CDATA[the stack overflow podcast]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14911</guid>
				<description><![CDATA[<p>Teresa Dietrich, Stack Overflow's new Chief Product Officer, talks about the time a new feature for AOL Instant Messenger almost took down the company's whole network.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/04/podcast-your-buddy-is-typing-teresa-dietrich/">Podcast: Your Buddy is Typing</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<iframe height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/c8a268f2-7f00-4c8a-a487-b51c21b0fccc?dark=false"></iframe>



<p>This week we sit down with Teresa Dietrich, Stack Overflow&#8217;s <a href="https://www.businesswire.com/news/home/20200115005134/en/Stack-Overflow-Bolsters-Leadership-Team-New-Chief">new Chief Product Officer</a>. Teresa, a CMU grad and tech industry veteran, shares a story from her time at AOL: the day three little dots emerged without warning and turned their network upside down.</p>



<p>At the time, AOL was one of the largest providers of dial-up internet access and its messaging platform was amongst the biggest in the world. As Teresa tells it:</p>



<p><em>My first job out of college was at AOL during the height of the first Internet rush. I was in technology operations, first as a network engineer, then eventually reaching senior network architect. That job helped shape my perspective and the way I think about problems, both in how I architect, but also troubleshoot.&nbsp;</em></p>



<p><em>At the time, I had no idea what I was a part of. The scale of problems that we saw was just amazing to me. Just two years out of college, and I was actually helping to keep CNN.COM up on September 11th, 12th, and 13th.</em></p>



<p><em>I was also there when AIM launched the three dots. When I’m on my iPhone or Slack and I see dot, dot, dot when someone is typing, sometimes I have a little PTSD thinking back to the launch. Because we had no idea how much chaos that would cause.&nbsp;</em></p>



<center><iframe width="720" height="480" src="https://www.youtube.com/embed/-gAZRN3SCBw" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></center>



<p><em>This was a random day in the middle of the week. All of a sudden, we started getting these alerts of router crashes throughout our data center, throughout multiple data centers. We all jump up and look at the logs to see what the router was doing and looking at bandwidth graphs. The bandwidth hadn&#8217;t gone up at all. There was no discernible change from before they started crashing to when they started crashing.</em></p>



<p><em>So we&#8217;re trying to look at the data we don’t look at as often. We&#8217;re calling into our data center techs, getting sniffers plugged into some of the routers where there&#8217;s crashes going on and trying to figure out what is going on. I mean, it was literally like every 30 seconds, another router was falling over. So we&#8217;d get it back up. And it worked for awhile. We were like, are there gremlins in the data center? What&#8217;s going on here? We finally got the sniffers plugged in and we&#8217;re starting to sniff traffic. We started seeing these 60 byte packets being sent from the AIM servers.</em></p>



<p><em>Those of us who are also AIM users, some of us said, you know, it&#8217;s funny they launched that “Your buddy is typing” indicator today. We noticed that happening for those of us who updated our clients. What we realized is they were sending an awful lot of packets. “Your buddy is typing&#8230;” “Your buddy has stopped typing.” “Your buddy is typing&#8230;&#8221;&nbsp;</em></p>



<p>&nbsp;<em>At some level, we knew this was a limitation of the hardware. In talking to Cisco or Juniper we knew the packet per second limitation of our routers, but we never worried about it. We weren&#8217;t tracking that.</em></p>



<p><em>You never track and collect and graph a metric until you realize you need it. So we literally had to call over to the AIM development team and say, “Shut it down and let&#8217;s work together and figure out how we can implement this feature without sending an insane number of 60 byte packets and taking down large swaths of the network.</em>&#8221; <em>It ended up shifting to a state change check and eventually we had millions and millions of concurrent users enjoying the feature on a daily basis. </em></p>



<p>Along with a great story of her time at AOL, we also chat about what the job of a <a href="https://www.businesswire.com/news/home/20200115005134/en/Stack-Overflow-Bolsters-Leadership-Team-New-Chief">chief product officer</a> is today. At a place like Stack Overflow, how do you unite functional departments across the company &#8211; from marketing to sales to engineering. How do you figure out the right incentives, so that the data you&#8217;re measuring against is aligned with the long term health of the company and the community?</p>



<p>&#8220;I don&#8217;t focus on shipping,  I focus on impact,&#8221; Teresa told us. &#8220;That&#8217;s where product management, engineering, and design come together. Product management is focused on value. Engineering is focused on quality, and design is focused on usability. If you think of that as Venn diagram, impact is where those three things overlap and happen.&#8221; </p>



<p>Lastly, we chat about the incredible velocity with which new coding languages and development frameworks emerge in the tech industry. Teresa shares her philosophy for encouraging an engineering team to level up and learn new skills while ensuring that this kind of continuous evolution doesn&#8217;t create a lot of friction for the overall organization. </p>



<p>&#8220;That which we measure, we incentivize towards,&#8221; is one of her favorite sayings, and Teresa applies it to scoping an overall product roadmap for a company, including what tools, new and old, to use along the way.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/04/podcast-your-buddy-is-typing-teresa-dietrich/">Podcast: Your Buddy is Typing</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/04/podcast-your-buddy-is-typing-teresa-dietrich/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14911</post-id>	</item>
		<item>
		<title>Does your web app need a front-end framework?</title>
		<link>https://stackoverflow.blog/2020/02/03/is-it-time-for-a-front-end-framework/</link>
				<comments>https://stackoverflow.blog/2020/02/03/is-it-time-for-a-front-end-framework/#comments</comments>
				<pubDate>Mon, 03 Feb 2020 15:10:33 +0000</pubDate>
		<dc:creator><![CDATA[Max Pekarsky]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[front-end]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[web dev]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14904</guid>
				<description><![CDATA[<p>You’ve likely heard about front-end frameworks. Names like React, Vue, and Angular abound in tutorials and Hacker News debates. If you’ve wondered why and when these frameworks are used and whether it’s time you implement one in your project, you’re not alone. A few years ago, while working on a side project, Hackterms, my own…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/03/is-it-time-for-a-front-end-framework/">Does your web app need a front-end framework?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>You’ve likely heard about front-end frameworks. Names like React, Vue, and Angular abound in tutorials and Hacker News debates. If you’ve wondered why and when these frameworks are used and whether it’s time you implement one in your project, you’re not alone. A few years ago, while working on a side project, <a href="https://www.hackterms.com/">Hackterms</a>, my own front end became unwieldy. I had a loose sense that implementing a framework was the right next step, but I had little idea about what they did. (We’ll come back to how that turned out at the end of the article.) This is the explanation I wish had then. In this post, we’ll take a bird’s eye view of the problem front-end frameworks are trying to solve and when you might want to use one.</p>



<p>Specifically, we’ll review:</p>



<ol><li>How a front end grows.&nbsp;</li><li>The architecture problems you might encounter as it scales.</li><li>How a front-end framework might help address these.&nbsp;</li><li>Other alternatives you might consider.</li></ol>



<p>Quick aside: “front-end framework” <a href="https://css-tricks.com/poll-results-front-end-front-end/">gets a hyphen</a> since it’s a compound adjective. However, your app has a “front end”—noun, no hyphen. Get nerdy with me.</p>



<h2><strong>Some terms to review</strong></h2>



<p>We’re going to talk about front-end frameworks a bunch (you might have gotten a hint from the title), so let’s get on the same page around terminology:</p>



<p><br>A <a href="https://stackoverflow.com/questions/2964140/what-is-a-software-framework"><strong>software framework</strong></a> is a pre-written app structure for you to build on top of. Practically, it’s a collection of files and directories you add your own code and files to. A framework is meant to help you build applications quicker by addressing common development problems and often starts you out with:</p>



<ul><li>Boilerplate code, covering functions that are reused by most applications.</li><li>A directory structure, often following a design philosophy.</li><li>A set of design principles your type of application frequently encounters. Frameworks that enforce these principles, like Ruby on Rails, are usually referred to as <em>opinionated</em>.<br><br></li></ul>



<p>A <strong>front end</strong> is the presentation layer of your application. It’s often described as all the stuff the user sees, but more generally, it’s any code that&#8217;s responsible for efficiently displaying data to the user. So, the front end includes building intuitive and pleasant interfaces, as well as efficiently storing, presenting, and updating data received from the back end or API.<br></p>



<p>A <strong>front-end framework</strong> is a scaffold for building your front end. It usually includes some way to structure your files (for example, via components or a CSS preprocessor), make AJAX requests, style your components, and associate data with DOM elements.<br></p>



<h2>A growing app</h2>



<p>You can build a simple frontend with just three files: HTML, CSS, and JavaScript. However, as your app scales, your files will grow along with it, filling up with inscrutable and unmaintainable <a href="https://www.hackterms.com/spaghetti%20code"><strong>spaghetti code</strong></a>.<br></p>



<p>As is tradition, let’s look at a silly example: let’s say you’re building <strong>MySquare</strong>, a leaderboard for competitive board gamers. In this app, users can share the board games they’ve played, their league-sanctioned competitive results (there’s now a league, roll with it), and short reviews of competitive matches. The most important feature of the app is the user profile page:</p>



<figure class="wp-block-image"><img src="https://lh5.googleusercontent.com/Omxe7H15cZuwKDbnxiTvKKYypLqqrOMPjvt4ftnrvOMaRj7AVAu8Ei6_xtUm_vEnA2heE9RyCl3EaLgrd7w7Mr7ahVdurW07GRDmwF3TNfiLJdvD8nR-LKH4ZOX84nPvxenGbFzS" alt=""/></figure>



<p>You build the first version of this profile page with the three basic technologies, HTML, CSS, and JavaScript. It works something like this:&nbsp;<br></p>



<ul><li>On the initial page load, the back end initially sends over a blank profile page with minimal styling. Then, and for all future loads, the front end requests user data via AJAX.</li><li>The back end sends over some public user data as JSON, and you use JavaScript to dynamically append DOM elements for game badges and records onto the page.&nbsp;</li><li>When you decide to build game-specific pages that list all the users and their records, you create new JavaScript files that replicate much of the code, since they’re drawing on the same game data.&nbsp;</li><li>Each game badge (and match badge) uses the same HTML, so you store the markup in a JavaScript string and figure out a way to inject game-specific data in there, <em>ex</em>: <code>“&lt;p&gt;{{Game Name}}&lt;/p&gt;”</code>. Then, you append the badge HTML onto the page for every game.</li><li>When a user updates some value on the page, you can either read data from the DOM by querying for attributes, or by attaching event listeners to every element—getting the data by reading it from the DOM.<br><br></li></ul>



<p>As MySquare gets popular and your dataset grows, this approach quickly becomes unwieldy:<br><br></p>



<ul><li>You find yourself appending data to the page and then reading it from the DOM by grabbing <code>&lt;div&gt;</code> values or reading ids or data attributes.&nbsp;</li><li>The number of JavaScript and CSS files balloons, and there’s lots of repeated code between them.&nbsp;</li><li>You’re binding event listeners to common UI elements like input fields and buttons, then writing functions to update the values in those same elements.</li><li>When you need to make even a small change, you worry about how it’ll impact the rest of the application.</li><li>When your friend offers to help with the development work (for some equity, of course), you spend hours explaining how your code works.</li></ul>



<p>Managing these problems is feasible with vanilla JavaScript and enough patience. With planning and forethought, you might be able to structure your app to anticipate some of these issues. However, as your front end grows, these problems will only deepen—you can never be sure how your app is going to evolve.&nbsp;<br></p>



<p>You realize that storing your data in the DOM and endlessly appending HTML stored in JavaScript strings can’t be the best way to tackle this project. Fortunately, there’s no need to reinvent the wheel. When you find yourself needing to build a robust, maintainable UI, it’s time for… you guessed it! A front-end framework.</p>



<h2>Enter, framework</h2>



<p>Front-end frameworks exist because for many apps, the front end grows and strains in predictable ways. While each popular framework offers its own design philosophy, they are all attempting to solve the same general problems we encountered earlier:<br></p>



<ul><li>Your code should be maintainable: easy for you and others to read, test, and change.</li><li>Complex interfaces are usually made of the same components. You should be able to create and reuse these components to easily create new pages.</li><li>Since DOM manipulations are slow, you want to perform as few element updates as possible.</li><li>You should be easily able to manipulate your UI based on data.</li><li>Your UI should be consistent and intuitive; this means standardizing typography, color, buttons, inputs, and other elements.</li><li>You shouldn’t need to reinvent the wheel and write tons of boilerplate when it comes to solving these common front-end challenges.</li><li>You should have a common language through which to communicate your ideas and patterns with other developers.</li></ul>



<p>Different frameworks address some, but usually not all, of these questions. Some, like <a href="https://getbootstrap.com/">Bootstrap</a> and <a href="https://semantic-ui.com/">SemanticUI</a>, focus on creating readable, maintainable HTML and CSS, emphasizing consistent visual design. Others, like <a href="https://vuejs.org/">Vue</a>, <a href="https://reactjs.org/">React</a>, and <a href="https://angularjs.io">Angular</a>, triumph at structuring data flow throughout your application, allowing you to focus on manipulating the data rather than the DOM.<br></p>



<p>(<a href="https://twitter.com/sarah_edo">Sarah Drasner</a> has <a href="https://www.smashingmagazine.com/2018/02/jquery-vue-javascript/">a fantastic introduction</a> that demonstrates the difference between reading data from the DOM and storing it in JS. Although her example discusses the switch from jQuery to Vue, you can read it as a broader mindset shift from DOM manipulation to focusing on data structures.)<br></p>



<p>What would MySquare look like if you implemented a popular front-end framework, like React? Here are a few changes you would experience:<br></p>



<ol><li>You would create reusable HTML/CSS/JavaScript components with data placeholders for the game badges, match records, and other common elements. The framework would then render these elements based on incoming data (the JSON we get from the server or APIs). For example, if the JSON has nine game records, we render nine <code>&lt;Match&gt;</code> components, with match data automatically inserted.</li><li>You would follow the boilerplate directory structure to create components, scripts, and stylesheets in a way that’s easy to follow and maintain. Need to make a change to the structure and styling of game records? Find the small, standalone <code>&lt;Match&gt;</code> component and make your changes.</li><li>You would be able to take advantage of most recent JavaScript features as well as a CSS-preprocessor like SASS to write concise, expressive, modern code. The framework will transpile this to the HTML/CSS/JavaScript that browsers understand.</li><li>With this infrastructure in place, you could focus on manipulating the data instead of worrying about the DOM. Our framework’s data-binding features will automatically re-render the relevant components when the data changes. For example, if you receive data on a new match result from the server, the framework will automatically append another <code>&lt;Match&gt;</code> component onto the screen.</li><li>If you found yourself stuck on a problem, you could leverage the framework community to get help. It should even be easier to explain your problem since you’re following framework conventions that help build popular front-end features.</li><li>Because popular frameworks often follow similar design principles, it would be easier to collaborate with other developers, even those who don’t develop in your specific framework—you wouldn’t need to walk new developers through your own custom code structure.</li></ol>



<h3>Separation of concerns</h3>



<p>Ideally, you would want your front end to operate as a standalone application, requesting data from the back end, processing, and displaying it (you might hear this called “consuming an API”). The principle underpinning this is referred to as “<a href="https://en.wikipedia.org/wiki/Separation_of_concerns">separation of concerns</a>”, and it states that each part of your program should operate independently, have a clear, singular purpose, and communicate via a well-defined interface. Although your front end doesn’t have to implement a framework to follow the separation of concerns principle, most frameworks encourage this architectural pattern.<br></p>



<p>The advantage to the resulting modular design is that developers can work on different parts of your application independently as long as their component accepts predictable inputs and delivers predictable outputs. Having a front end with a single responsibility (made up of modular components that follow the same principle) makes it easy to adapt to change. If you decide to move from Angular to React, for example, you can do so confidently; both frameworks expect data from the back end, so you can focus on how React’s interface receives that data and how it uses it, not how the front end is embedded in your larger application.<br></p>



<p>As the dedicated view layer of your application, your front end should be solely responsible for logic around:&nbsp;</p>



<ul><li>which elements should be displayed or hidden</li><li>when to request data or send updates to the server</li><li>when to display simple validation and error messages</li><li>which styling choices to make based on data</li></ul>



<p>Here are two MySquare scenarios: one where the architecture follows separation of concerns, and the other where it violates it. See if you can figure out which is which!<br></p>



<ol><li>The back end sends over a list of game records; each record contains a score, names of two players, and the match date. The front end appends an HTML component for each match, with a red or green background color, depending on who won the match.</li><li>The back end sends over a list of game records; each record contains a score, names of two players, the match date, and a color hex code for winning/losing match styling, calculated based on which profile is requesting the code. The front end adds a component per match, styling it with the background color sent over by the backend.</li></ol>



<p>Did you catch the violation? The back end shouldn’t be concerned with styling. That logic should live in the front end, which determines <em>how</em> data is displayed. If your designers want to spruce up the MySquare design, they shouldn’t need to worry about data structures.<br></p>



<h3>Advantages to using a framework</h3>



<p>Let’s recap the major ways in which adopting a front-end framework will help our quickly growing app:<br></p>



<ol><li><strong>Maintainability</strong>: Breaking up your app into reusable, standalone components makes it easier to make quick changes that don’t impact the rest of the application.&nbsp;</li><li><strong>Separation of concerns: </strong>Modern framework design encourages a maintainable, modular architecture and allows your front-end developers to focus on what they do best: taking data and displaying it to users in an intuitive and efficient way.&nbsp;</li><li><strong>Speed: </strong>Boilerplate code aimed at addressing common problems makes it easier for you to get your app up and running; component-based design makes it quicker to develop.</li><li><strong>Collaboration: </strong>Since frameworks often follow similar design patterns, it’s easier for developers who are new to your codebase to develop and maintain your app.</li><li><strong>Community:</strong> Popular frameworks have a community of people around them with dedicated tutorials, forums, meetups, and generally supportive developers you can seek help from.&nbsp;</li></ol>



<h2>Disadvantages and alternatives</h2>



<p>Of course, like any tool, a front-end framework isn’t always the right solution for your application. Here are a few factors to consider before implementing one.<br></p>



<h3>Disadvantages</h3>



<ol><li><strong>Abstracted, overhead code: </strong>Until you’re thoroughly familiar with it, framework code is a black box. It can be hard to discern how much of the code is helpful to your application and frustrating to fix bugs resulting from code you’re not familiar with.</li><li><strong>Learning curve: </strong>Learning to use a framework effectively takes time. To be productive, you need to understand the syntax, tooling, <em>and</em> philosophy behind how a framework functions. For projects where speed is essential, learning a brand new technology might not be the best use of your time.</li><li><strong>Overkill for smaller projects: </strong>If you’re looking to deploy a static site or a site where every component is unique, you might not need the power and overhead of a full-fledged framework. It might still be helpful to implement a minimal framework or even library—we’ll discuss these in the next section.</li><li><strong>Setup: </strong>Setting up and customizing a framework to your specific use case takes time. If speed is essential, go with what you know, or what your development team is comfortable with.</li><li><strong>Strong opinions:</strong> An opinionated framework may feel constricting, and its design principles may clash with yours. Make sure you research the specific framework you’re implementing. If you prefer to build from scratch, go with your own solution.</li><li><strong>Ecosystem evolution: </strong>The JavaScript framework ecosystem is <a href="https://stackoverflow.blog/2018/01/11/brutal-lifecycle-javascript-frameworks/">famously volatile</a>. The hottest framework of today may not be popular next year, and with this shift, developers and support may be hard to find.</li></ol>



<h3>Alternatives</h3>



<p>There are a few alternatives to large JavaScript frameworks like Vue, React, and Angular. As we mentioned earlier, different front-end frameworks attempt to solve different problems. Depending on your needs,&nbsp; smaller frameworks and libraries may work for you. Additionally, you could abandon separation of concerns and go with a monolith full-stack app with server-side rendered views. Here are a few alternatives to consider:<br><br><strong>Templating engines</strong>: If all you need are reusable components, consider a templating engine like <a href="https://handlebarsjs.com/">Handlebars.js</a>, <a href="https://ejs.co/">EJS</a>, <a href="http://underscore.js">Underscore.js</a>, or <a href="https://github.com/janl/mustache.js">mustache</a>. These engines allow you to store HTML/CSS/JavaScript components and insert JavaScript variables into them. I mentioned struggling with how to scale my project, Hackterms, at the start of this article. In retrospect, I&nbsp; absolutely should have used a full-fledged framework. However, at the time, I was short on time and patience, so I successfully used Handlebars to create reusable templates.<br></p>



<p><strong>CSS frameworks and libraries</strong>: If you’re looking to create a consistent UI, a tool like <a href="https://getbootstrap.com/">Bootstrap</a>, <a href="https://semantic-ui.com/">SemanticUI</a>, <a href="https://bulma.io/">Bulma</a>, or <a href="https://tailwindcss.com/">Tailwind</a> might be a good option. Someone once described using a CSS framework as “having a designer looking over your shoulder, nudging you towards good practices.” You don’t have to inherit the <em>visual</em> design of these frameworks, but for a developer without a strong design background, it can be really helpful to know how many fonts to use, what different button states are, and what intuitive forms look like.<br></p>



<p><strong>Full-stack monolith apps:</strong> Many full-stack frameworks, like <a href="https://guides.rubyonrails.org/action_view_overview.html">Ruby on Rails</a>, <a href="https://www.meteor.com/tutorials/blaze/templates">Meteor.js</a>, and <a href="https://docs.djangoproject.com/en/3.0/topics/http/views/">Django</a>, come with their own templating engines, which render HTML on the server. <a href="https://stackoverflow.com/a/33953973">Server-side rendering</a> and <a href="https://stackoverflow.com/questions/45661006/what-is-the-difference-between-monolith-and-n-layer/45661246#45661246">monolith</a> architecture are both concepts that deserve their own blog posts, but you can think of this option as picking one full-stack framework for your <em>entire</em> application and writing the presentation layer and server logic within a single codebase. Most full-stack frameworks do allow you to plug in front-end frameworks of your choice, but default you to using their own templating engines. This is a good solution if you want to double down on using a single framework for your entire app; it can also be a quick way to prototype a full-stack application.<br></p>



<h2>In conclusion</h2>



<p>Front-end frameworks are a powerful tool for developing complex user interfaces. They encourage you to build out a maintainable, modular, standalone architecture that makes it easy to build your application and collaborate with other developers. Popular frameworks are backed by supportive communities, a wealth of documentation and tutorials, and offer battle-tested code that tackles common challenges that front ends pose as they scale. Frameworks allow you to tap into the most modern JavaScript features and offer tooling that makes it easy to prototype apps. Finally, they empower you with a shared language to discuss your architecture and challenges.<br><br></p>



<p>Front-end frameworks and libraries come in many shapes and sizes—you can use a full-fledged UI framework to build out your entire front end, implement a CSS library to tighten your visual design, or use a templating engine to create reusable components.<br></p>



<p>However, a front-end framework can be overkill for smaller projects and prototypes, and the steep learning curve, coupled with the quickly evolving JavaScript ecosystem, can make it difficult to implement in a young project. At the end of the day, you should implement a popular framework if you’re excited to learn about well-tested design principles, expect your front end to scale, or need to prototype quickly when performance isn’t a major concern. If you like thoroughly understanding every part of your application, or don’t want to learn a new technology, then it’s probably not the best option.<br><br>Hopefully, this overview has given you an idea of the problems a front-end framework solves, and whether it’s the right fit for your next project. What has your experience with front-end frameworks been like? Which is your framework of choice? Looking forward to your comments below!</p>



<p><br><em>Many thanks to </em><a href="http://jamesmayr.com"><em>James Mayr</em></a><em> and </em><a href="https://www.linkedin.com/in/laurenrisberg/"><em>Lauren Risberg</em></a> <em>for reviewing this article, catching many errors, and making great suggestions.</em><br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/02/03/is-it-time-for-a-front-end-framework/">Does your web app need a front-end framework?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/02/03/is-it-time-for-a-front-end-framework/feed/</wfw:commentRss>
		<slash:comments>43</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14904</post-id>	</item>
		<item>
		<title>This week, #StackOverflowKnows the coronavirus’s long tail, sulfuric acid spills and tiny malicious code</title>
		<link>https://stackoverflow.blog/2020/01/31/this-week-stackoverflowknows-the-coronavirus-long-tail-sulfuric-acid-spills-and-tiny-malicious-code/</link>
				<comments>https://stackoverflow.blog/2020/01/31/this-week-stackoverflowknows-the-coronavirus-long-tail-sulfuric-acid-spills-and-tiny-malicious-code/#comments</comments>
				<pubDate>Fri, 31 Jan 2020 14:42:53 +0000</pubDate>
		<dc:creator><![CDATA[Ryan Donovan]]></dc:creator>
				<category><![CDATA[#StackOverflowKnows]]></category>
		<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[apollo13]]></category>
		<category><![CDATA[coronavirus]]></category>
		<category><![CDATA[cryptography]]></category>
		<category><![CDATA[malicious code]]></category>
		<category><![CDATA[sulfuric acid]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14890</guid>
				<description><![CDATA[<p>The first month of the new year is almost over just in time for everyone to give up on their resolutions. But fear not! Stack Overflow and our coterie of Exchanges have a bevy of delicious questions to strengthen your resolve. Take a gander at the genetics of the coronavirus, the waste products of Apollo…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/31/this-week-stackoverflowknows-the-coronavirus-long-tail-sulfuric-acid-spills-and-tiny-malicious-code/">This week, #StackOverflowKnows the coronavirus’s long tail, sulfuric acid spills and tiny malicious code</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>The first month of the new year is almost over just in time for everyone to give up on their resolutions. But fear not! Stack Overflow and our coterie of Exchanges have a bevy of delicious questions to strengthen your resolve. Take a gander at the genetics of the coronavirus, the waste products of Apollo 13, and the littlest malicious code.&nbsp;<br></p>



<h4><a href="https://bioinformatics.stackexchange.com/questions/11227/why-does-the-wuhan-coronavirus-genome-end-in-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa">Why does the Wuhan coronavirus genome end in aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa (33 a&#8217;s)?</a></h4>



<p><em>bioinformatics.stackexchange.com</em></p>



<p>One of our Stack Exchange communities sheds a little light on the genetic makeup of the Wuhan coronavirus and the strange set of nucleotides at the end.&nbsp;</p>



<h4><a href="https://space.stackexchange.com/questions/41071/what-did-the-apollo-missions-do-with-old-lioh-canisters-the-water-they-produce">&nbsp;What did the Apollo missions do with old LiOH canisters &amp; the water they produced?</a>&nbsp;</h4>



<p><em>space.stackexchange.com&nbsp;</em></p>



<p>My memory of <em>Apollo 13 </em>is a little rusty, but I don’t remember Tom Hanks properly disposing of the used canisters in the movie.&nbsp;<br></p>



<h4><a href="https://chemistry.stackexchange.com/questions/126119/neutralizing-a-sulfuric-acid-spill">Neutralizing a sulfuric acid spill</a></h4>



<p><em>chemistry.stackexchange.com</em></p>



<p>When you spilled that sulfuric acid, again. &#8212; “Asking for a friend.”</p>



<h4><a href="https://security.stackexchange.com/questions/224673/can-malicious-code-fit-in-14-bytes">Can malicious code fit in 14 bytes?</a></h4>



<p><em>security.stackexchange.com</em></p>



<p>Honey, I shrunk the malicious code! Some people say that good things come in small packages. Apparently, bad things can also come in small packages.&nbsp;<br></p>



<h4><a href="https://crypto.stackexchange.com/questions/77000/is-128-bit-security-still-considered-strong-in-2020-within-the-context-of-both">Is 128-bit security still considered strong in 2020, within the context of both ECC Asym &amp; Sym ciphers?</a></h4>



<p><em>crypto.stackexchange.com</em></p>



<p>128-bit is still secure unless the attacker has 34 million years and .1 nanoseconds worth of the total energy output of the sun. But you can probably bump up to 256 if you want. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/31/this-week-stackoverflowknows-the-coronavirus-long-tail-sulfuric-acid-spills-and-tiny-malicious-code/">This week, #StackOverflowKnows the coronavirus’s long tail, sulfuric acid spills and tiny malicious code</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/31/this-week-stackoverflowknows-the-coronavirus-long-tail-sulfuric-acid-spills-and-tiny-malicious-code/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14890</post-id>	</item>
		<item>
		<title>Micro-interactions with react-spring: Part 3</title>
		<link>https://stackoverflow.blog/2020/01/30/micro-interactions-with-react-spring-part-3/</link>
				<comments>https://stackoverflow.blog/2020/01/30/micro-interactions-with-react-spring-part-3/#comments</comments>
				<pubDate>Thu, 30 Jan 2020 15:08:24 +0000</pubDate>
		<dc:creator><![CDATA[Emma Bostian]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[animation]]></category>
		<category><![CDATA[react-spring]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14876</guid>
				<description><![CDATA[<p>In the first post in this series, we examined the basics of micro-interactions: what are they, why should you use them, how you build them. In the second post, we built two animated menus. In this tutorial, we’ll build two fun animations: a modal and an image gallery. Modal: Image Gallery: Building an animated modal…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/30/micro-interactions-with-react-spring-part-3/">Micro-interactions with react-spring: Part 3</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>In the <a href="https://stackoverflow.blog/2020/01/16/how-to-create-micro-interactions-with-react-spring-part-1/">first post</a> in this series, we examined the basics of micro-interactions: what are they, why should you use them, how you build them. In the <a href="https://stackoverflow.blog/2020/01/23/micro-interactions-with-react-spring-part-2/">second post</a>, we built two animated menus.<br></p>



<p>In this tutorial, we’ll build two fun animations: a modal and an image gallery.<br></p>



<p><a href="https://codesandbox.io/s/react-spring-animated-modal-sl19p">Modal</a>:</p>



<iframe src="https://codesandbox.io/embed/react-spring-animated-modal-sl19p?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" title="React Spring Animated Modal" allow="geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>



<p><a href="https://codesandbox.io/s/react-spring-animated-image-gallery-5vs9d">Image Gallery</a>:</p>



<iframe src="https://codesandbox.io/embed/react-spring-animated-image-gallery-5vs9d?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" title="React Spring Animated Image Gallery" allow="geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>



<h1>Building an animated modal</h1>



<h2>What we’ll build</h2>



<p>We’ll use react-spring’s useTransition to illustrate how you can mount and unmount a component, in our case a modal, from the DOM and mount photos to and from a photo gallery.<br></p>



<p><em><a href="https://codesandbox.io/s/react-spring-animated-menu-qe6kn">Embed Code Sandbox</a></em>:</p>



<iframe src="https://codesandbox.io/embed/react-spring-animated-menu-qe6kn?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" title="React Spring Animated Menu" allow="geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>



<figure class="wp-block-image"><img src="https://lh6.googleusercontent.com/Xt4x9GI2xjh-UoPP35QlzlwwpOrX0PTyk5MrVmjaxTiVEHnmBV4M6JS6wnZlgYJxHGOKVu6vaSz5jDTU7gpUKlIzqGm-o6PVn4oFN31gmHHop18AJjvOEDQuJ5Mv54aoLqoql0Rs" alt=""/></figure>



<h2>Defining the micro-interaction</h2>



<p>In the previous blog, we looked at the pieces of a micro-interaction. Let’s define the interaction trigger, state definition, and animation definition for our modal component.</p>



<h3>Interaction trigger</h3>



<p>Our modal will be triggered by a button in the main UI and will be dismissed when the Close button inside of the modal is clicked.</p>



<h3>State definition</h3>



<p>Our modal will be in one of two states:</p>



<ul><li><code>visible</code></li><li><code>hidden</code></li></ul>



<h3>Animation Definition</h3>



<p>When the modal trigger button is clicked, the modal will fade in and translate its Y position from the top of the viewport.<br></p>



<p>When the modal close button is clicked, the modal will fade out and translate its Y position towards the top of the viewport.<br></p>



<h2>Let’s build a modal</h2>



<p>Create a new <a href="http://codesandbox.io/">React Code Sandbox</a> and add <code>react-spring</code> as a dependency.<br></p>



<p>Next, create a new file in the <code>src</code> directory called <code>Modal.js</code>. The modal will fade in and slide in from the top of the viewport on enter, and fade out and slide out towards the top of the viewport on exit.<br></p>



<p><em>If you have an App.js file, you can delete it—we’ll be working in index.js. You’ll also have to remove the import to App.js and the instantiation of the component inside index.js. Replace index.js with the following code:</em><br></p>



<p><a href="https://gist.github.com/emmabostian/298ba649936bf82dfbbadf6d146e366d">index.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/298ba649936bf82dfbbadf6d146e366d.js"></script>



<p>Create a new file called <code>modal.css</code> in the <code>src</code> directory and add the following code. We won’t cover styling in this tutorial, so we’ve provided everything you need to focus on the animation.<br></p>



<p><a href="https://gist.github.com/emmabostian/576396e3c31eb9f41b2642dcf4b66a5a">Modal.css</a>:<br></p>



<script src="https://gist.github.com/emmabostian/576396e3c31eb9f41b2642dcf4b66a5a.js"></script>



<p>Let&#8217;s also add a style to <code>styles.css</code>:<br></p>



<p><a href="https://gist.github.com/emmabostian/ff79873a1b3e68ed58c567c33c05d46d">Styles.css</a>:<br></p>



<script src="https://gist.github.com/emmabostian/ff79873a1b3e68ed58c567c33c05d46d.js"></script>



<p>Inside <code>Modal.js</code> import React,  <code>{ animated } from "react-spring"</code> and <code>modal.css</code>.<br></p>



<p><a href="https://gist.github.com/emmabostian/67875d4669607a8d91744c3b8fae6b50">Modal.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/67875d4669607a8d91744c3b8fae6b50.js"></script>



<p>For now, let&#8217;s simply return a <code>&lt;div></code> with &#8220;Modal&#8221; written inside to ensure everything is rendering as expected.<br></p>



<p><a href="https://gist.github.com/emmabostian/fca8ef470b9b452304b47afe83d3ebab">Modal.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/fca8ef470b9b452304b47afe83d3ebab.js"></script>



<p>The majority of the animation work will be done in <code>index.js</code> because this is where our state will live.<br></p>



<p>In <code>index.js</code> import our Modal component, <code>useTransition</code> from <code>react-spring</code>, and add <code>useState</code> to the React import.<br></p>



<p><a href="https://gist.github.com/emmabostian/61efab80f836de4f5cae0c1ff4957b73">Index.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/61efab80f836de4f5cae0c1ff4957b73.js"></script>



<p>If you have them, remove the Code Sandbox <code>h1</code> and <code>h2</code> elements and instantiate our Modal component.<br></p>



<p><a href="https://gist.github.com/emmabostian/757f77a93a5d11a48a64d56f7650bda1">Index.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/757f77a93a5d11a48a64d56f7650bda1.js"></script>



<p>You should see &#8220;Modal&#8221; rendering in the UI.</p>



<figure class="wp-block-image"><img src="https://lh3.googleusercontent.com/q-6c0YxliidXU7THno_qHPMkBX-NQbJ-HkZc_RROpebv4tGKR2FPXJGYVPSNs6W3BkEwtIrKyaPLLplMxPF6BokyA0HjDK_Mq01PbzMhxn8FxxM6T8GcHsb7I3CTiROMYHT6U4W0" alt=""/></figure>



<p>Let&#8217;s add some state to show and hide our modal. To show our modal, we&#8217;ll have a &#8220;Show modal&#8221; button. Since our modal will not be visible by default, we&#8217;ll initialize the <code>modalVisible</code> state to false.<br></p>



<p>Before the return statement inside of <code>App</code>, add the following:<br></p>



<p><a href="https://gist.github.com/emmabostian/398fde78e9cdad3fe760675af2bfaeca">Index.js</a></p>



<script src="https://gist.github.com/emmabostian/398fde78e9cdad3fe760675af2bfaeca.js"></script>



<p>Now let&#8217;s build our animation using react-spring&#8217;s <code>useTransition</code> which mounts and unmounts a component from the DOM.<br></p>



<p>Underneath the <code>useState</code> hook, let&#8217;s declare a <code>fadingAnimation</code> const and set it equal to the result of calling <code>useTransition</code>.<br></p>



<p><a href="https://gist.github.com/emmabostian/326b3ba8a69fbc0de27bb22f6c81fed0">Index.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/326b3ba8a69fbc0de27bb22f6c81fed0.js"></script>



<p>This hook takes three arguments:</p>



<ol><li>The first argument is the state this animation is dependent on, in our case <code>modalVisible</code>.</li><li>The second argument is the keys for each item. React requires keys for elements which are being mapped over, and since the result of calling the <code>useTransition</code>hook must be mapped over, we must pass a value for <code>key</code>, which in our case is null (since we just have one item, the modal).</li><li>The third argument is the lifecycle definition. The lifecycle definition object takes several required properties. We have to define these three properties to use <code>useTransition</code>: </li></ol>



<ul><li>from</li><li>enter</li><li>leave</li></ul>



<p>You can view the full list of optional properties <a href="https://www.react-spring.io/docs/hooks/use-transition)">here</a>.<br></p>



<p>Each of these three values expects an object with the CSS properties that change during the animation.</p>



<p>We want our modal to transition from an opacity of 0 and start outside of the viewport. When the modal enters, we want to fade it in by changing the opacity to 1 and slide in from the top by translating the Y-property. And on leave we want the modal to fade out and slide out towards the top.<br></p>



<p><a href="https://gist.github.com/emmabostian/6003e4e46a60c2d9b485eebf8408e66b">Index.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/6003e4e46a60c2d9b485eebf8408e66b.js"></script>



<p>The <code>useTransition</code> hook requires its results to be mapped over in the render function. So let&#8217;s replace the simple <code>&lt;Modal /></code> with a JSX expression which maps over <code>fadingAnimation</code>.</p>



<p>We can de-structure <code>item</code>, <code>key</code>, and <code>props</code> out of <code>fadingAnimation</code>. <code>props</code> is a bit confusing as it&#8217;s actually the animation we&#8217;re going to be passing to our modal component, so let&#8217;s rename it <code>style</code> to make it more clear.</p>



<p>We will pass <code>style</code> as an argument to our modal component, as well as <code>key</code>.</p>



<p>We also need to pass a function which will close the modal by updating the <code>modalVisible</code> state when the Close modal button is clicked.<br></p>



<p><a href="https://gist.github.com/emmabostian/3261e849e074d0b232eda7c9cbd00b00">Index.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/3261e849e074d0b232eda7c9cbd00b00.js"></script>



<p>Now let&#8217;s add a button to show the modal. Before the transition mapping, add the following.<br></p>



<p><a href="https://gist.github.com/emmabostian/fe0d26ae593fa873ed4ae146fa8b5b38">Index.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/fe0d26ae593fa873ed4ae146fa8b5b38.js"></script>



<p>Here is our finalized <code>index.js</code><br></p>



<p><a href="https://gist.github.com/emmabostian/7af066576ae9a2d1c852e19eba044121">Index.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/7af066576ae9a2d1c852e19eba044121.js"></script>



<p>When the UI is rendered we see a button:</p>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/mOftOAQy4yj2QjMh5dvtNoM1ETDIMzwrULHlB_jdQ_w93i3ObgdPIPv4Qse2KCLLaV7Bcs94Cq-Nh45xf26vMWQM-uhN39tFdhuN1S0TT3TeoIAnVmRO6QO8FOVNJ1Vo8gIAKO32" alt=""/></figure>



<figure class="wp-block-image"><img src="https://lh3.googleusercontent.com/SBc9ofa-t5OBxrkkRHOakqVQx7Fa_wFnu71QPfWMGr9EMOPCLeoK4H6ou95WWBuAkjSkMF3LIZNpBAxSQOprCWrsZ8DlajwP61QaAMB4J9BBdA-wvgSCj5fIoEn5RJNC9iWk8S1S" alt=""/></figure>



<p>And when we click it, we see the word “Modal”, but there is currently no animation.</p>



<p>Now let&#8217;s build our modal. This will take two arguments:<br></p>



<ul><li><code>style</code>: The animation</li><li><code>closeModal</code>: The event handler for closing the modal</li></ul>



<p><a href="https://gist.github.com/emmabostian/26fe36d686958d56284942599f279a50">Modal.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/26fe36d686958d56284942599f279a50.js"></script>



<p>The modal will contain a title, some content, and a close button, so let&#8217;s add those, as well as some class names for styling.<br></p>



<p><a href="https://gist.github.com/emmabostian/0245634245cf881b437cafd61921d63c">Modal.js</a>:</p>



<script src="https://gist.github.com/emmabostian/0245634245cf881b437cafd61921d63c.js"></script>



<p>Let&#8217;s pass our <code>closeModal</code> function to the close button as an on click handler so the user can dismiss the modal.<br></p>



<p><a href="https://gist.github.com/emmabostian/0629fe02e5238e284d73b991d933488c">Modal.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/0629fe02e5238e284d73b991d933488c.js"></script>



<p>If we head back to the browser, we can see our modal appears and closes, but isn&#8217;t being animated.<br></p>



<p>This is because we have to use a special animated HTML element to get our modal to animate. Any element we want to be animated must be prefaced by <code>animated</code>., for example <code>&lt;animated.div></code>. So let&#8217;s change our <code>&lt;div></code> elements into animated divs.<br></p>



<p><a href="https://gist.github.com/emmabostian/dff42c16b72caea286e252afe5fb98db">Modal.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/dff42c16b72caea286e252afe5fb98db.js"></script>



<p>Lastly, we have to pass <code>style</code> to <code>&lt;animated.div></code> as a prop to see our animation.<br></p>



<p><a href="https://gist.github.com/emmabostian/d5ec869cdd3468a27d845d239dd2e6e8">Modal.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/d5ec869cdd3468a27d845d239dd2e6e8.js"></script>



<p>And that&#8217;s it! You now have a fully-animated modal which mounts and unmounts when it&#8217;s shown and hidden.<br></p>



<p><a href="https://codesandbox.io/s/github/emmawedekind/react-spring-animated-modal/tree/master/?fontsize=14&amp;hidenavigation=1&amp;theme=dark">View the final code here</a>:<br></p>



<iframe
     src="https://codesandbox.io/embed/github/emmawedekind/react-spring-animated-modal/tree/master/?fontsize=14&#038;hidenavigation=1&#038;theme=dark"
     style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"
     title="react-spring-animated-modal"
     allow="geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb"
     sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"
   ></iframe>



<h1>Building an image gallery</h1>



<p>Making an image gallery with plain JavaScript, and animating it, can be tedious. But not with react-spring! Let&#8217;s make an image gallery that switches between three photos.</p>



<h2>What We’ll Build</h2>



<figure class="wp-block-image"><img src="https://lh6.googleusercontent.com/CYOk53zQbc2EdYzNvPqx_xUVSFsekATW3slZSUwe9YuUOcDPdhJp192SCW0nq5voJA967EM69ZgTu-E6easpP6pEUALdH3mQ2xezZws0qRsMWQiqxFCmLkSGmV875zpg04GHb8OK" alt=""/></figure>



<p><a href="https://codesandbox.io/s/react-spring-animated-image-gallery-5vs9d">The end code:</a><br></p>



<iframe
     src="https://codesandbox.io/embed/react-spring-animated-image-gallery-5vs9d?fontsize=14&#038;hidenavigation=1&#038;theme=dark"
     style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"
     title="React Spring Animated Image Gallery"
     allow="geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb"
     sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"
   ></iframe>



<h2>Defining The micro-interaction</h2>



<h3>Interaction trigger</h3>



<p>The gallery will transition to the next image when the user clicks anywhere in the viewport.</p>



<h3>State definition</h3>



<p>We will have three images in our gallery so its state will be one of the following states, each number representing the image currently being shown.<br></p>



<ul><li><code>0</code></li><li><code>1</code></li><li><code>2</code></li></ul>



<h3>Animation definition</h3>



<p>The leaving image will fade out and slide to the left while the entering image will fade in and slide in from the right.</p>



<h2>Let’s build an image gallery</h2>



<p>Let&#8217;s make an image gallery that switches between three photos.<br></p>



<p>Create a <a href="http://codesandbox.io/">React Code Sandbox</a> and add <code>react-spring</code> as a dependency.<br></p>



<p><em>If you have an App.js file, you can delete it—we’ll be working in index.js. You’ll also have to remove the import to App.js and the instantiation of the component inside index.js. Replace index.js with the following code:</em><br></p>



<p><a href="https://gist.github.com/emmabostian/298ba649936bf82dfbbadf6d146e366d">index.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/298ba649936bf82dfbbadf6d146e366d.js"></script>



<p>Create two new files: <code>Gallery.js</code> and <code>gallery.css</code> and add the following code to <code>gallery.css</code>. We won’t be covering CSS today so we’ve provided the styling for you!<br></p>



<p><a href="https://gist.github.com/emmabostian/aaf58ed1303af19dcdf3b0f6f98b37e5">Gallery.css</a>:<br></p>



<script src="https://gist.github.com/emmabostian/aaf58ed1303af19dcdf3b0f6f98b37e5.js"></script>



<p>Create an <code>images</code> folder in the root and add three photos.<br></p>



<p>You can find some on <a href="http://unsplash.com/">Unsplash</a>. I added <code>mountains.jpg</code>, <code>beach.jpg</code>, and <code>desert.jpg</code>.<br></p>



<p>Inside of <code>Gallery.js</code>, import the following packages, as well as the three images you just uploaded, and the CSS file.<br></p>



<p><a href="https://gist.github.com/emmabostian/e263a6374020e37904b3532a70f42c8e">Gallery.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/e263a6374020e37904b3532a70f42c8e.js"></script>



<p>Now let&#8217;s define three images we want to iterate between. Each will take in a style and render an <code>animated.img</code> tag (as react-spring requires any animatable element to be prefaced with <code>animated</code>. ) with its respective image source, alt tag, and style.<br></p>



<p><a href="https://gist.github.com/emmabostian/edbe8e98577642f35b07cecef408a8a7">Gallery.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/edbe8e98577642f35b07cecef408a8a7.js"></script>



<p>Next, let&#8217;s set up our component.<br></p>



<p><a href="https://gist.github.com/emmabostian/78ddd761c7b6ec9f64f9cd322e3046db">Gallery.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/78ddd761c7b6ec9f64f9cd322e3046db.js"></script>



<p>First we need to establish our state for which photo we&#8217;re currently viewing. Above the return statement, we&#8217;ll call this state <code>index</code> and it&#8217;s setter function <code>setIndex</code>, and initialize the value to <code>0</code> for the first image.<br></p>



<p><a href="https://gist.github.com/emmabostian/2c34fdfbbf5a35116137618db5d98858">Gallery.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/2c34fdfbbf5a35116137618db5d98858.js"></script>



<p>When the user clicks anywhere in the viewport, we want to switch to the next image. We can use <code>useCallback</code> to do this.<br></p>



<p>Since we have three images, we want to ensure the state value remains either 0, 1, or 2, so we can use modulus to grab the remainder of the next state value divided by three.<br></p>



<p>For example if the state is currently 2 and we want the next photo, we add 1, which totals 3. Since 3 is outside the bounds of the number of photos we have (indexing from 0, we have 0, 1 and 2 for available photo indices), let&#8217;s mod it by 3 to get the remainder.<br></p>



<p>(2 + 1) % 3 = 0 because 3 mod 3 yields a remainder of 0.<br></p>



<p>You can read more about mods <a href="https://riptutorial.com/javascript/example/760/remainder---modulus----">here</a>.<br></p>



<p><a href="https://gist.github.com/emmabostian/65dfc78cc997c838981652248591cddc">Gallery.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/65dfc78cc997c838981652248591cddc.js"></script>



<p>Let&#8217;s add our <code>onClick</code> handler as an argument on the wrapping <code>&lt;div></code> so the user can switch to the next photo by clicking in the viewport.<br></p>



<p><a href="https://gist.github.com/emmabostian/ce5dc60071c77e6391025f0a76d9ac3d">Gallery.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/ce5dc60071c77e6391025f0a76d9ac3d.js"></script>



<p>Next, let&#8217;s set up our animation. We&#8217;ll use <code>useTransition</code> to mount and unmount the photos from the DOM so we&#8217;re only rendering one at a time.<br></p>



<p><code>useTransition</code> takes in three arguments:<br></p>



<ul><li><code>item</code>: The index for our photo</li><li><code>key</code>: The key for our mapped over item</li><li><code>lifecycle</code>: An object describing the animation</li></ul>



<p>We want our images to fade in and out while sliding them into and out of view so we&#8217;ll define <code>opacity</code> and <code>transform</code> at each of the lifecycle steps.<br></p>



<p>We will also add a <code>config</code> option to change the speed at which this animation occurs. You can check the full options for config <a href="https://www.react-spring.io/docs/hooks/api">here</a>.<br></p>



<p><a href="https://gist.github.com/emmabostian/c88791dab8806b5f1e9a8fbb42cc0b66">Gallery.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/c88791dab8806b5f1e9a8fbb42cc0b66.js"></script>



<p>Now we&#8217;re ready to add some JSX. Let&#8217;s first render a paragraph that tells the user they can click anywhere to change to the next image.<br></p>



<p><a href="https://gist.github.com/emmabostian/abd39c7a4bef618c085a71f93dbfd7f0">Gallery.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/abd39c7a4bef618c085a71f93dbfd7f0.js"></script>



<p>Since <code>useTransition</code> requires we map over its return value, let&#8217;s map over our transitions and render each image. We&#8217;ll de-structure <code>item</code>, <code>props</code>, and <code>key</code> from <code>transitions</code>.<br></p>



<p>Then we&#8217;ll grab the image component from our <code>images</code> array by using the <code>item</code>, or <code>index</code> defined in <code>useTransition</code>.<br></p>



<p>Finally we&#8217;ll return the Image component and pass it the <code>key</code> and <code>props</code> (as the style attribute).<br></p>



<p><a href="https://gist.github.com/emmabostian/8c700da6b273b9bb33220d3e5f4a8fbf">Gallery.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/8c700da6b273b9bb33220d3e5f4a8fbf.js"></script>



<p>Here is our completed <code><a href="https://gist.github.com/emmabostian/0b619af6ae176b01c0ee55747171226a">Gallery.js</a></code>:<br></p>



<script src="https://gist.github.com/emmabostian/0b619af6ae176b01c0ee55747171226a.js"></script>



<p>Finally let&#8217;s head back to <code>index.js</code> to import our Gallery component and render it.<br></p>



<p><a href="https://gist.github.com/emmabostian/64301d33d9f6b47ca982f14cd5ba98be">index.js</a>:<br></p>



<script src="https://gist.github.com/emmabostian/64301d33d9f6b47ca982f14cd5ba98be.js"></script>



<p>And that&#8217;s it! You now have a fully-functional image gallery.<br></p>



<p>You can view the final code <a href="https://codesandbox.io/s/amazing-wiles-5vs9d?fontsize=14&amp;hidenavigation=1&amp;theme=dark">here</a>:<br></p>



<iframe
     src="https://codesandbox.io/embed/react-spring-animated-image-gallery-5vs9d?fontsize=14&#038;hidenavigation=1&#038;theme=dark"
     style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"
     title="React Spring Animated Image Gallery"
     allow="geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb"
     sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"
   ></iframe>



<h1>Conclusion</h1>



<p>I hope this series of blog posts on creating micro-interactions with react-spring has empowered you to create fun interactions within your website.<br></p>



<p>You can create complex animations and interactions with just a few lines of code.<br></p>



<p>For more articles on micro-animations and micro-interactions check out the resources below.<br></p>



<ul><li><a href="https://hike.one/update/why-use-micro-animations-in-your-design">Why Use Micro-Animations In Your Design?</a></li><li><a href="https://uxdesign.cc/micro-interactions-why-when-and-how-to-use-them-to-boost-the-ux-17094b3baaa0">Micro-Interactions</a></li><li><a href="https://medium.com/@MentorMate/should-you-advocate-for-micro-animations-cdf625635261">Should You Advocate For Micro-Animations?</a></li><li><a href="https://blog.geekyants.com/micro-interactions-and-micro-animations-4eb2ed5cc7f3">Micro-Interactions &amp; Micro-Animations</a></li></ul>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/30/micro-interactions-with-react-spring-part-3/">Micro-interactions with react-spring: Part 3</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/30/micro-interactions-with-react-spring-part-3/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14876</post-id>	</item>
		<item>
		<title>The live coding language that lets you be an actual rock star</title>
		<link>https://stackoverflow.blog/2020/01/29/the-live-coding-language-that-lets-you-be-an-actual-rock-star/</link>
				<comments>https://stackoverflow.blog/2020/01/29/the-live-coding-language-that-lets-you-be-an-actual-rock-star/#comments</comments>
				<pubDate>Wed, 29 Jan 2020 18:31:27 +0000</pubDate>
		<dc:creator><![CDATA[Ryan Donovan]]></dc:creator>
				<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[live coding]]></category>
		<category><![CDATA[music]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14872</guid>
				<description><![CDATA[<p>Code on a screen is not likely to land you the legions of screaming fans that a sick guitar solo will. Unless you’re Sam Aaron, that is. He’s the creator of Sonic Pi, a live coding language for making music. It’s an open source project that he built which creates music from code in real time</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/29/the-live-coding-language-that-lets-you-be-an-actual-rock-star/">The live coding language that lets you be an actual rock star</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>You’ve seen those job listings that are looking for a “JavaScript Rock Star” and likely rolled your eyes. It seems silly to think that whatever skill you have at programming is going to get you featured in <em>Rolling Stone</em>. Besides, code on a screen is not likely to land you the legions of screaming fans that a sick guitar solo will.&nbsp;</p>



<p>Unless you’re Sam Aaron, that is. He’s the creator of <a href="https://sonic-pi.net/">Sonic Pi</a>, a live coding language for making music. It’s an open source project that he built which creates music from code in real time. The world of music is taking notice: <em>Rolling Stone</em> described him as “<a href="https://www.rollingstone.com/music/music-live-reviews/moogfest-2016-was-it-actually-the-future-of-music-58300/">transcending the present</a>” when he performed at the same festival as Grimes.&nbsp;</p>



<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<iframe title="Outrun" width="500" height="281" src="https://www.youtube.com/embed/rnCE7hxNGXw?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</div></figure>



<p>Sonic Pi works on simple loops of code. You enter a few commands that indicate beats, melodies, and samples to play. These commands are processed through a synthesizer backend called <a href="https://supercollider.github.io/">SuperCollider</a>.&nbsp; The essence of it is loop and repeat, but if you change the code during the performance, the music changes too. It’s a simple and powerful way to get anyone up and running with electronic music or basic programming concepts.&nbsp;</p>



<p>“If you&#8217;re a programmer who knows nothing about music then Sonic Pi can help you with that,” said Aaron. “If you&#8217;re a musician, who knows nothing about programming, Sonic Pi can help you with that. And if you know nothing about either, you’ve got a fun and exciting journey ahead of you.”</p>



<p>On its face, it’s gloriously simple. So simple, that a 10-year-old child can use it. Under the hood, there are some surprising technical challenges to get a language like this to work.&nbsp;</p>



<h2>Beginnings</h2>



<p>Before Sonic Pi, Aaron and his friend Jeff Rose had created <a href="http://overtone.github.io/">Overtone</a>, another live coding language built in Clojure. This project grew out his interest in domain-specific languages, which was the subject of his PhD thesis at Newcastle University. He continued working on Overtone as a researcher at Cambridge University. However, the money for that position was running out, so Aaron knew he would have to find something else to do.&nbsp;</p>



<p>That’s when he came across a three month project from the Broadcom Foundation—designers behind the Raspberry Pi’s chip —to build something to get children more involved in coding. “I put my hand up and said, I think I could do something with this. I can perhaps take Overtone and make it lighter, simpler, and reduce the functionality but focus it specifically at kids.&#8221;&nbsp;</p>



<p>That idea turned out to be more ambitious than he thought. He initially assumed the three month project would be to produce a prototype. But in the first meeting, it turned out they wanted a prototype, a teacher, a school, lesson plans, and a run through in that classroom with his assistance. That meant it had to be a fully functioning, battle tested system ready to be used by a classroom full of children.&nbsp;</p>



<p>Raspberry Pi version 1 was designed to be low cost and accessible, which also meant that it was low powered. Aaron initially tried a straight port of Overtone using Clojure. It took seven minutes for the namespaces to load up. “The implementation of Overtone wasn&#8217;t designed for speed for the low power of the Raspberry Pi 1,” said Aaron, “but also the Raspberry Pi 1 had very, very poor JVM support at that time. For example, floating points weren&#8217;t supported on the hardware and were software only. Luckily things have improved a lot since those early days.”</p>



<p>Aaron switched to Ruby, which performed well enough on the hardware and was also flexible. In fact, it’s so flexible, that you can modify the language itself to suit your needs. “Flexible languages like Ruby can be massaged into the domain that you want to work in,” said Aarom. “So Sonic Pi can be seen as taking Ruby as a piece of clay, and molding it into a musical instrument.”</p>



<p>The prototype turned out to be the easy part. The code for the first early version took two weeks to finish. The graphical interface, the language, the run timing were all completed quickly. “It was just a very, very, very simple system,” said Aaron. “All it did was beeping.”</p>



<p>When actual kids got a hold of the prototype, they understood how it worked and wanted more. “What really surprised me in the classes is that the kids would be like, ‘Oh this is a cool drum rhythm or this is a cool bassline,’” said Aaron. “And they were saying, ‘How do I play the drums at the same time as the bass?’ The system hadn&#8217;t been designed for that. That&#8217;s not on the UK computer science curriculum. But it was such a common question. I thought, well let&#8217;s just add it in.”</p>



<p>With concurrency came a lot of under the hood complexity. It revealed some fundamental difficulties that computers have with precise timing. Once he introduced multiple threads, they would quickly drift out of sync.&nbsp;</p>



<h2>Keep it simple</h2>



<p>Initially, Aaron used POSIX <a href="https://pubs.opengroup.org/onlinepubs/009695399/functions/sleep.html">sleep </a>to manage timing. But like most programmed sleep operations, this operation caused the computer to sleep for <em>at least</em> time T, then perform the next operation when the internal language scheduler picked it back up. “Computers currently are only about throughput, not about latency and timing,” said Aaron. Each delay would add up to throw off timing worse and worse as the song progressed.&nbsp;</p>



<p>Aaron’s solution was to build that internal delay into the sleep commands. Each time that you call a sleep command, it tracks how much time it takes to recover. Instead of sleeping for time T, it sleeps for T minus whatever additional time the previous calculations took. It compensates for drift automatically. SuperCollider, the synthesizer that actually played the sounds, was able to accept timestamps. That meant the language would run a little ahead of the sounds that it produced. “It&#8217;s not managing the time,” said Aaron, “it&#8217;s managing the idea of time, when things should happen and then setting them slightly ahead of time so that the synthesizer will then honor those timings as well as it can.”</p>



<p>All that hard work to create this timing is largely invisible to the end user. To them, it’s a simple set of live loops that anyone can understand. “The original constraints or the problem,” said Aaron, “which was to build something which might engage 10-year-olds in a computer science lesson, is a fabulous set of design constraints, not just suitable for that environment but also nightclubs. Making Sonic Pi easy to teach in a classroom turned out to also make it easy to perform with after you&#8217;ve had a few beers and you’re on stage at 2:00 in the morning in a nightclub.”</p>



<p>That mindset stuck with him for a couple of other complicated features. Inspired by 80s and 90s drum and bass, Aaron wanted to be able to take a drum break and slice it up into individual drum hit samples. He started with a solution that takes six lines of code, but over the next year, rethinks it to one that uses just four characters. “It&#8217;s really a simple idea,” said Aaron. “It&#8217;s one of those things where once you figure it out, its, ‘Ah, I should have done this all along,’ and that&#8217;s to treat a drum break as a list of drum hits.” You can now take <a href="https://www.bbc.com/news/magazine-32087287">Amen break</a>, process it real quick, and treat it like an array.&nbsp;&nbsp;</p>



<p>Another breakthrough was a system that made it easy to apply effects like reverb or distortion. As a guitarist, I have to buy a pedal or a pedal board, run a bunch of wires, and live with my choices. In Sonic Pi, I just enclose a block in with_fx: reverb or whatever the effect I want is. “Every time it sees this reverb command,” said Aaron, “it goes and buys new pedal and set that effect or codes it in memory and then executes it, does all the wiring automatically.” The system figures out when you’re done with the effect, it garbage collects it. You don’t have to worry about limits, memory usage, or deallocation.&nbsp;</p>



<p>“It&#8217;s a lot of fun, but the thought processes and the amount of effort it takes to get a complicated idea into a simple form, it&#8217;s effort,” said Aaron. “But once you&#8217;ve achieved that, then you&#8217;ve got something that is not only simple to explain and maintain and use, but it&#8217;s something that you can use to then come up with new ideas and build new things much more effectively than you could with the old things.”</p>



<h2>The beat goes on</h2>



<p>The Raspberry Pi Foundation supported Aaron for several years, and in that time, he’s been able to add plenty of features, but also work on the foundations. “I&#8217;m using Ruby, which is not known to be the most efficient language,” said Aaron. A lot of effort has gone into caching duplicated messages and making the underlying communication with SuperCollider, the synthesizer and MIDI engine, very efficient within the constraints of Ruby. But even with the caching, a synthesizer with an active MIDI clock could flood the system with a lot of time messages.&nbsp;</p>



<p>There are limits, which is why he’s now rebuilding the low level foundation in Rust. With the higher throughput that Rust enables, Aaron sees the possibility of an intermediate language in Sonic Pi, something that users never see, but that any user-facing tools compile into. “It means that Sonic Pi can start to become a target platform for other experimental languages,” said Aaron.&nbsp;</p>



<p>He’s been working with Thor Magnusson at Sussex University, the creator of <a href="http://www.ixi-audio.net/ixilang/">Ixi lang</a>, another live coding language for music, on an interface for Sonic Pi. “It&#8217;s very minimal in scope but super quick in a workshop to get people making melodies and rhythms,” said Aaron. “There are very few keystrokes. We&#8217;ve built a minimal version of Ixi Lang, which is going to be in the next version of Sonic Pi.”</p>



<p>By strengthening the foundations, Aaron sees the possibility of more high-level libraries built on top of it, even wild things like Markov chaining and AI assistance. Shoring up the foundations of the timing and events, ensuring that the same code produces the same music every time, means that high-level features will remain simple and easy to understand. “If I&#8217;m building too much stuff at a high level, it will all just collapse,” said Aaron. That’s important, because down the road, Aaron plans on adding distributed jamming so you and your friend can code in separate ZIP Codes and rock the same tune.&nbsp;</p>



<h2>Music++</h2>



<p>Lots of folks have used Sonic Pi to create very impressive musical projects. There’s a whole scene in Japan making music in VR spaces with Sonic Pi. A woman in India is making traditional music with it. A woman in Canada made a whole opera. And a guy in Finland has been making incredibly heavy metal music, taking advantage of the precision of the timing to rock out with double kick pedals and crazy time signatures.&nbsp;</p>



<p>Aaron himself performs quite a bit as well, both at music festivals and programming conferences. Since the Raspberry Pi Foundation funding ran out, it’s been one of his main sources of support to continue developing Sonic Pi. He even got to perform at the Royal Albert Hall alongside an orchestra and vocalists. “Being recognized on a similar level is a real achievement for me,” said Aaron. “I always found it very odd that when I went into schools, the computer science teachers were super excited like, ‘Yes! This is a tool we can educate our children.’ Whereas the music teachers often were, ‘Ooh, this is not a real musical instrument.’&#8221;</p>



<p>Even Aaron was dubious that it could be a real creative outlet, to replace his main tool, Overtone. It was built for kids, and maybe not as powerful, but the barrier to entry was so much lower. “Although it was much less powerful in a technical sense,” said Aaron, “it was a way more powerful tool because it was much easier to go from ideas in my head to code on the screen, music out of the speakers. That took moments whereas Overtone will take weeks.”</p>



<p>If you’re interested in trying it out, head over to the <a href="https://sonic-pi.net/">Sonic Pi website</a>. There’s an active community there, and Aaron has put in a lot of work to make the tutorials efficient and effective. If you like what he’s doing, consider donating to his <a href="https://patreon.com/samaaron">Patreon </a>or hiring him for your conference. And if you’re looking to make some sweet jams in your bedroom, download, compose away, and share your tunes in the comments.&nbsp;<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/29/the-live-coding-language-that-lets-you-be-an-actual-rock-star/">The live coding language that lets you be an actual rock star</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/29/the-live-coding-language-that-lets-you-be-an-actual-rock-star/feed/</wfw:commentRss>
		<slash:comments>11</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14872</post-id>	</item>
		<item>
		<title>Podcast &#8211; From Prison to Programming with the Code Cooperative</title>
		<link>https://stackoverflow.blog/2020/01/28/podcast-prison-programming-code-cooperative/</link>
				<comments>https://stackoverflow.blog/2020/01/28/podcast-prison-programming-code-cooperative/#comments</comments>
				<pubDate>Tue, 28 Jan 2020 15:18:06 +0000</pubDate>
		<dc:creator><![CDATA[Ben Popper]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[The Stack Overflow Podcast]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[stackoverflow]]></category>
		<category><![CDATA[the stack overflow podcast]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14849</guid>
				<description><![CDATA[<p>We chat with Alex Qin, co-founder and CEO of the Code Cooperative, about teaching formerly incarcerated individuals to code.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/28/podcast-prison-programming-code-cooperative/">Podcast &#8211; From Prison to Programming with the Code Cooperative</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<iframe height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/2f187409-af04-499a-97e6-205f3ce405c4?dark=false"></iframe>



<p>Our guest this week is Alex Qin, founder and CEO of the Code Cooperative. </p>



<p>Alex graduated from NYU with a degree in computer science and <a href="https://www.linkedin.com/in/alexandraqin/">worked</a> as a developer and engineer at several startups in New York City, eventually assuming senior roles like engineering team lead and director of technology.</p>



<p>Along the way, however, she found herself faced with discrimination and harassment. In 2016, she dramatically altered her appearance, an experience she discusses in a humorous and poignant talk &#8211; <a href="https://www.youtube.com/watch?v=6_tn-Tb-U3M">Shaving My Head Made me a Better Developer</a>.</p>



<p>In 2016 she read the book <a href="http://newjimcrow.com/"><em>The New Jim Crow</em></a> by Michelle Alexander and was inspired to do more to help people impacted by the justice system. She began organizing donations of unused laptops, and then moved on to help found the <a href="https://codecooperative.org/">Code Cooperative</a> in October of 2016. The group describes itself as a community of people who learn, use, and build technology to create life-changing possibilities for individuals and communities impacted by incarceration.</p>



<p>If you want to get involved, you can donate a laptop or make a financial contribution <a href="https://codecooperative.org/donate">here</a>. If you would like to volunteer as a mentor, you can apply <a href="https://codecooperative.org/volunteer">here</a>.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/28/podcast-prison-programming-code-cooperative/">Podcast &#8211; From Prison to Programming with the Code Cooperative</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/28/podcast-prison-programming-code-cooperative/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14849</post-id>	</item>
		<item>
		<title>Want to write for the SO blog? Here&#8217;re the guidelines.</title>
		<link>https://stackoverflow.blog/2020/01/27/blog-contributor-guidelines/</link>
				<comments>https://stackoverflow.blog/2020/01/27/blog-contributor-guidelines/#comments</comments>
				<pubDate>Mon, 27 Jan 2020 15:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Ryan Donovan]]></dc:creator>
				<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[announcements]]></category>
		<category><![CDATA[blog]]></category>
		<category><![CDATA[bulletin]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14834</guid>
				<description><![CDATA[<p>Got an idea for that would make a good post on the Stack Overflow blog? Here's what you can do to submit your idea and work with us. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/27/blog-contributor-guidelines/">Want to write for the SO blog? Here&#8217;re the guidelines.</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>We at the Stack Overflow blog want to provide our community, as well as the larger programming community, with interesting articles about what life is like as a coder today. Whether that’s coverage of <a href="https://stackoverflow.blog/2019/11/26/copying-code-from-stack-overflow-you-might-be-spreading-security-vulnerabilities/">research on security vulnerabilities in Stack Overflow code examples</a>, insights into what it really takes to be a <a href="https://stackoverflow.blog/2019/10/17/imho-the-mythical-fullstack-engineer/">full-stack engineer</a>, or a look at the <a href="https://stackoverflow.blog/2019/11/14/why-is-the-migration-to-python-3-taking-so-long/">never-ending migration from Python 2 to 3</a>, we hope the articles we publish are the ones that coders—hobbyists, beginners, or professionals—want to read.&nbsp;</p>



<p>Since you all are our audience, you have a pretty good idea of what works on the blog. That’s why we want blog post pitches from our community. If you have an article you want to write that you think we should publish, send us an email at <a href="mailto:pitches@stackoverflow.com">pitches@stackoverflow.com</a>, and please include the following:</p>



<ul><li>A suggested title for your article. This doesn’t have to be the final title, but it should give us a quick idea what you’re interested in writing.&nbsp;</li><li>A paragraph of information to flesh out the post idea. Why is this interesting?&nbsp;</li><li>A little about yourself and why you are the right person to write this article. What’s your background? Have you written before? If so, share some links to pieces similar to your pitch.</li></ul>



<p>If we decide to go ahead with your article, we’ll share a contract with you. We do own the copyrights of any article that we publish on our blog; on the plus side, we pay for published posts.</p>



<p>The next step is to either put together an outline or a first draft we can use to make sure we’re on the same page before spending time writing a longer, more detailed version. Please send all outlines and drafts in Google docs format so that we can track changes and collaborate effectively. I know lots of developers like to work in Markdown; if you do, render the HTML, then copy it into a GDoc.&nbsp;</p>



<p>A good draft is around 1500 words, plus or minus about 500 words. If you’re dropping a manifesto on us, we might consider splitting it into multiple pieces. You can include code samples, gists, CodePens, and more. If you want to include images, make sure you have permission to post them.&nbsp;</p>



<p>Once we get your draft, we’ll begin the process of editing. This is about making your article the best it can be. To do that, we’ll make suggestions on structure, wording, clarity, and grammar. You’ll get flashbacks to high school English, but you’ll end up with an article that everyone can be proud of.&nbsp;</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/27/blog-contributor-guidelines/">Want to write for the SO blog? Here&#8217;re the guidelines.</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/27/blog-contributor-guidelines/feed/</wfw:commentRss>
		<slash:comments>25</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14834</post-id>	</item>
		<item>
		<title>The Overflow #9: Rust and Redux</title>
		<link>https://stackoverflow.blog/2020/01/24/the-overflow-9-rust-and-redux/</link>
				<comments>https://stackoverflow.blog/2020/01/24/the-overflow-9-rust-and-redux/#comments</comments>
				<pubDate>Fri, 24 Jan 2020 14:24:35 +0000</pubDate>
		<dc:creator><![CDATA[Ryan Donovan]]></dc:creator>
				<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[The Overflow]]></category>
		<category><![CDATA[redux]]></category>
		<category><![CDATA[rust]]></category>
		<category><![CDATA[the overflow]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14826</guid>
				<description><![CDATA[<p>January 2020 Welcome to ISSUE #9 of The Overflow, a newsletter by developers, for developers, written and curated by the Stack Overflow team and Cassidy Williams of React Training. You can read more about it here. This week, we get a peek into the future of Stack Overflow, discover the longest possible free ride, and…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/24/the-overflow-9-rust-and-redux/">The Overflow #9: Rust and Redux</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<tr>
                            <td style="padding-top: 20px; text-align: center;" class="adjust-logo">
                                <h1 style="text-align: center; margin: 0; line-height: 1;">
                                    <img src="https://d2axdqolvqmdvx.cloudfront.net/5a861290-bdcc-4f59-af25-6c5bc0b9eb29/logotheoverflow.png" alt="The Overflow." height="" width="354" border="0" style="width: 100%; max-width: 354px; height: auto; display: block; margin: 0 auto; font-weight: normal; font-family: arial, sans-serif; font-size: 15px; color: #3C3F44;">
                                </h1>
                            </td>
                        </tr>
                        <tr>
                            <td style="padding-bottom: 10px; font-family: 'Roboto Slab', arial, sans; font-size: 12px; line-height: 15px; color: #848D95; text-align: center; text-transform: uppercase; letter-spacing: .1em;" class="unstyle-auto-detected-links">
                                January 2020
                            </td>
                        </tr>
                        <!-- Header : END -->
                        <!-- Intro : BEGIN -->
                        <tr>
                            <td style="padding-top: 20px;">
                                <p style="margin: 0 0 30px;">
                                  Welcome to ISSUE #9 of The Overflow, a newsletter by developers, for developers, written and curated by the Stack Overflow team and <a href="https://cassidoo.co/" style="color: #0077cc; text-decoration: none;">Cassidy Williams</a> of <a href="https://reacttraining.com/" style="color: #0077cc; text-decoration: none;">React Training</a>. You can read more about it <a href="https://stackoverflow.blog/2019/10/01/introducing-overflow-newsletter-cassidy-williams" style="color: #0077cc; text-decoration: none;">here</a>. This week, we get a peek into the future of Stack Overflow, discover the longest possible free ride, and check out a mobile OS made from React Native. 
                                </p>
                            </td>
                        </tr>
                        <!-- Intro : END -->
                        <!-- Section : BEGIN -->
                        <tr>
                            <td style="padding: 30px 0 0; border-top: 1px solid #D6D8DB;" class="sm-pt">
                                <table border="0" cellpadding="0" cellspacing="0" role="presentation">
                                    <tr>
                                        <td style="vertical-align: middle; padding: 0 10px 20px 0;">
                                            <img src="https://d2axdqolvqmdvx.cloudfront.net/d7aaecb9-5ebc-493a-be56-59637e03b531/iconblog2x.png" height="26" width="26" border="0" alt="" style="display: block; font-family: arial, sans-serif; font-size: 15px; line-height: 15px; color: #3C3F44;">
                                        </td>
                                        <td style="vertical-align: middle; padding-bottom: 20px;">
                                            <h2 style="margin: 0; font-family: 'Roboto Slab', arial, sans; font-size: 19px; line-height: 19px; font-weight: bold; color: #3C3F44;">
                                                From the blog
                                            </h2>
                                        </td>
                                    </tr>
                                </table>
                                <p style="margin: 0 0 30px;">
                                    <a href="https://stackoverflow.blog/2020/01/21/scripting-the-future-of-stack-2020-plans-vision/" style="font-weight: bold; color: #0077cc; text-decoration: none;">Scripting the future of Stack Overflow</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">stackoverflow.blog</span><br>
                                A note from our new CEO, Prashanth Chandrasekar, reflecting on his first 90 days and laying out his vision for 2020.



                                       <p style="margin: 0 0 30px;">
                                    <a href="https://stackoverflow.blog/2020/01/20/what-is-rust-and-why-is-it-so-popular/" style="font-weight: bold; color: #0077cc; text-decoration: none;">What is Rust and why is it so popular?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">stackoverflow.blog</span><br>
                                 Rust has been Stack Overflow’s most loved language for four years in a row, indicating that many of those who have had the opportunity to use Rust have fallen in love with it. However, the roughly 97% of survey respondents who haven’t used Rust may wonder, “What’s the deal with Rust?”


                                </p>


                        <!-- Section : END -->
                        <!-- Section : BEGIN -->
                        <tr>
                            <td style="padding: 30px 0 0; border-top: 1px solid #D6D8DB;" class="sm-pt">
                                <table border="0" cellpadding="0" cellspacing="0" role="presentation">
                                    <tr>
                                        <td style="vertical-align: middle; padding: 0 10px 20px 0;">
                                            <img src="https://d2axdqolvqmdvx.cloudfront.net/8da5bcb5-7dbe-4415-88a5-476c819ff156/iconqa2x.png" height="26" width="26" border="0" alt="" style="display: block; font-family: arial, sans-serif; font-size: 15px; line-height: 15px; color: #3C3F44;">
                                        </td>
                                        <td style="vertical-align: middle; padding-bottom: 20px;">
                                            <h2 style="margin: 0; font-family: 'Roboto Slab', arial, sans; font-size: 19px; line-height: 19px; font-weight: bold; color: #3C3F44;">
                                                Interesting questions
                                            </h2>
                                        </td>
                                    </tr>
                                </table>

                                 <p style="margin: 0 0 30px;"><i> Found a good question or answer? Share it with the hashtag #StackOverflowKnows. We’ll include our favorites in the future.  </i></p>

                                <p style="margin: 0 0 30px;">
                                    <a href="https://academia.stackexchange.com/questions/143131/nature-of-pure-mathematics-research" style="font-weight: bold; color: #0077cc; text-decoration: none;">The nature of pure mathematics research</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">academia.stackexchange.com</span><br>
                                Pure vs applied &#8211; what are the different skill sets in mathematics and which type is right for you?


                                </p>
                                <p style="margin: 0 0 30px;">
                                    <a href="https://travel.stackexchange.com/questions/151994/whats-the-longest-distance-that-can-be-traveled-by-only-using-free-transportati" style="font-weight: bold; color: #0077cc; text-decoration: none;">What&#8217;s the longest distance that can be traveled by only using free transportation?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">travel.stackexchange.com</span><br>
                                Hitching excluded, how far can a cheapskate like me travel without paying a cent?
                                </p>
                                <p style="margin: 0 0 30px;">
                                    <a href="https://security.stackexchange.com/questions/224015/can-someone-steal-my-ip-address-and-use-it-as-their-own " style="font-weight: bold; color: #0077cc; text-decoration: none;">Can someone steal my IP address and use it as their own?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">security.stackexchange.com</span><br>
                                It sounds like the plot of a bad cop show. But it turns out, it could actually happen.

                                </p> 
                                <p style="margin: 0 0 30px;">
                                    <a href="https://sqa.stackexchange.com/questions/42112/how-can-internet-explorer-5-be-emulated-in-2020" style="font-weight: bold; color: #0077cc; text-decoration: none;">How can Internet Explorer 5 be emulated in 2020?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">sqa.stackexchange.com</span><br>
                                We’ve heard of being stubborn, but still using Internet Explorer 5 takes the cake.

                                </p> 
                                <p style="margin: 0 0 30px;">
                                    <a href="https://stackoverflow.com/questions/59820879/are-new-and-delete-getting-deprecated-in-c " style="font-weight: bold; color: #0077cc; text-decoration: none;">Are &#8216;new&#8217; and &#8216;delete&#8217; getting deprecated in C++?</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">stackoverflow.com</span><br>
                                Does this mean C++ will get a new new command once delete is deleted?
                                </p>
                            </td>
                        </tr>
                        <!-- Section : END -->
                        <!-- Section : BEGIN -->
                        <tr>
                            <td style="padding: 30px 0 0; border-top: 1px solid #D6D8DB;" class="sm-pt">
                                <table border="0" cellpadding="0" cellspacing="0" role="presentation">
                                    <tr>
                                        <td style="vertical-align: middle; padding: 0 10px 20px 0;">
                                            <img src="https://d2axdqolvqmdvx.cloudfront.net/fae18822-12a0-46de-bab8-ddb30242697d/iconlinks2x.png" height="26" width="26" border="0" alt="" style="display: block; font-family: arial, sans-serif; font-size: 15px; line-height: 15px; color: #3C3F44;">
                                        </td>
                                        <td style="vertical-align: middle; padding-bottom: 20px;">
                                            <h2 style="margin: 0; font-family: 'Roboto Slab', arial, sans; font-size: 19px; line-height: 19px; font-weight: bold; color: #3C3F44;">
                                                Links from around the web
                                            </h2>
                                        </td>
                                    </tr>
                                </table>
                                <p style="margin: 0 0 30px;">
                                    <a href="https://www.fluentcpp.com/2020/01/17/technical-debt-is-like-a-tetris-game/" style="font-weight: bold; color: #0077cc; text-decoration: none;">Technical debt is like a Tetris game</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">fluentcpp.com</span><br>
                                If you&#8217;re like us, you might have played a game or two of Tetris from time to time (okay, if you&#8217;re like us, you probably have had to cut yourself off from playing too much Tetris). This blog post discusses a really great analogy of technical debt being like a Tetris game.
                                </p>
                                <p style="margin: 0 0 30px;">
                                    <a href="https://dev.to/davidkpiano/redux-is-half-of-a-pattern-1-2-1hd7" style="font-weight: bold; color: #0077cc; text-decoration: none;">Redux is half of a pattern (1/2)</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">dev.to</span><br>
                               Not everyone is a huge Redux fan, but this post makes the point that it&#8217;s part of a larger pattern! It&#8217;s a cool concept to think about it going hand-in-hand with state machines.

                                </p>
                                <p style="margin: 0 0 30px;">
                                    <a href="https://medium.com/sanctuary-computer-inc/building-lightos-with-react-native-4b6e4ad1cd7f" style="font-weight: bold; color: #0077cc; text-decoration: none;">Building LightOS with React Native</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">medium.com</span><br>
                                Who knew you could use a framework like React Native to build a mobile operating system? We certainly did not. This is a really cool look into how it was done, and why!

                                </p>
                                <p style="margin: 0 0 30px;">
                                    <a href="https://babeljs.io/blog/2020/01/11/7.8.0" style="font-weight: bold; color: #0077cc; text-decoration: none;">Babel 7.8.0 Released: ECMAScript 2020, .mjs configuration files and @babel/cli improvements</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">babeljs.io</span><br>
                                 We could <i>babel</i> on and on about how cool this 7.8.0 release of Babel is!
                                </p>


                                 <p style="margin: 0 0 30px;" style="display: block;">
                                    <a href="https://stackoverflow.com/teams?utm_source=so-owned&#038;utm_medium=newsletter&#038;utm_campaign=extended-trial&#038;utm_content=newsletter" style="font-weight: bold; color: #0077cc; text-decoration: none;">Stack Overflow for Teams</a> <span style="color: #6A737C; font-size: 12px; line-height: 12px; border: 3px solid #FFEEA9; background-color: #FFEEA9; display: inline-block; border-radius: 3px;">promotion</span><br>
                                    <strong>Try it free.</strong> Stop the pings, dings, and distractions. Improve collaboration and share organizational knowledge with Teams. We now offer a free 30 day trial and no credit card is needed. 
                                </p>


                                <p style="margin: 0 0 30px;">
                                    <a href="https://blw.sh/blog/create-fast-local-docker-web-dev-environment/" style="font-weight: bold; color: #0077cc; text-decoration: none;">Creating a FAST-LOCAL docker web dev environment</a> <span style="color: #6A737C; font-size: 12px;" class="unstyle-auto-detected-links">blw.sh</span><br>
                             Setting up a Docker environment might seem like overkill for your projects, but it&#8217;s a great way to have a fast, local setup for making sure your applications work in the right environments. Here&#8217;s a nice quick post on how you can do it yourself!
                                </p>

                            </td>
                        </tr>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/24/the-overflow-9-rust-and-redux/">The Overflow #9: Rust and Redux</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/24/the-overflow-9-rust-and-redux/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14826</post-id>	</item>
		<item>
		<title>Micro-interactions with react-spring: Part 2</title>
		<link>https://stackoverflow.blog/2020/01/23/micro-interactions-with-react-spring-part-2/</link>
				<comments>https://stackoverflow.blog/2020/01/23/micro-interactions-with-react-spring-part-2/#comments</comments>
				<pubDate>Thu, 23 Jan 2020 13:48:00 +0000</pubDate>
		<dc:creator><![CDATA[Emma Bostian]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[animation]]></category>
		<category><![CDATA[react]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14803</guid>
				<description><![CDATA[<p>In the last article, we examined the basics of micro-interactions: what they are, why they’re important, and how to build one. In this tutorial, we’ll build something I have struggled with for many years: the animated navigation.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/23/micro-interactions-with-react-spring-part-2/">Micro-interactions with react-spring: Part 2</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>In <a href="https://stackoverflow.blog/2020/01/16/how-to-create-micro-interactions-with-react-spring-part-1/">the last article</a>, we examined the basics of micro-interactions: what they are, why they’re important, and how to build one. In this tutorial, we’ll build something I have struggled with for many years: the animated navigation.<br></p>



<p>Animating navigation is something you’ll probably encounter if you’re a web developer, as our applications and websites need to be responsive, but it can be tricky.You can animate a navigation bar with CSS transitions; however, it’s a bit tedious to find the right bezier curve for the job.<br></p>



<h1>What we’ll build</h1>



<p>We’ll use react-spring’s useSpring hook to illustrate how you can build a full page navigation menu and a sidebar which slides in from the right.<br></p>



<p><em><a href="https://codesandbox.io/s/react-spring-animated-menu-qe6kn">Embed Code Sandbox</a></em>:</p>



<iframe src="https://codesandbox.io/embed/react-spring-animated-menu-qe6kn?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" title="React Spring Animated Menu" allow="geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>



<h1>Defining the micro-interaction</h1>



<p>In the previous blog, we looked at the pieces of a micro-interaction. Let’s define the interaction trigger, state definition, and animation definition for our navigation menu.</p>



<h2>Interaction trigger</h2>



<p>The visibility of our menu will be triggered by clicking a hamburger menu and dismissed by clicking the X button inside of the menu.</p>



<h2>State definition</h2>



<p>Our menu will be in one of two states:<br></p>



<ul><li><code>visible</code></li><li><code>hidden</code></li></ul>



<h2>Animation definition</h2>



<p>We will build two menu animations:<br></p>



<ul><li><strong>Right menu</strong>, which will slide in from the right and fade in when visible and slide out towards the right and fade out when not visible.</li><li><strong>Full page menu</strong>,<strong> </strong>which will slide in from the top and fade in when visible and slide out towards the top and fade out when not visible.</li></ul>



<h1>Let’s build a menu</h1>



<p>First, create a new <a href="http://codesandbox.io/">React Code Sandbox</a> and add <code>react-spring</code> as a dependency.</p>



<p>Next, create two new files: <code>Menu.js</code> and <code>menu.css</code> in the <code>src</code> directory, and add the following code to <code>menu.css</code>. This tutorial won’t cover how to style our menu items, so we’ve provided the code for you.<br></p>



<p><a href="https://gist.github.com/emmabostian/b93d63a402c31b3b7e093d59f98b323f">Menu.css code</a>:<br></p>



<script src="https://gist.github.com/emmabostian/b93d63a402c31b3b7e093d59f98b323f.js"></script>



<p>Then add <a href="https://gist.github.com/emmabostian/b94ee70bcf43b8352919cbf7137014fc">the following CSS</a> to <code>styles.css</code>:<br></p>



<script src="https://gist.github.com/emmabostian/b94ee70bcf43b8352919cbf7137014fc.js"></script>



<p>Inside <code>Menu.js</code>, import <a href="https://gist.github.com/emmabostian/471505f5830024e41c36e4f4578e3de0">the following dependencies</a>:<br></p>



<script src="https://gist.github.com/emmabostian/471505f5830024e41c36e4f4578e3de0.js"></script>



<p>We will create two menus:</p>



<ul><li>One that slides in from the right side</li><li>One that is a full-page overlay</li></ul>



<figure class="wp-block-image"><img src="https://lh6.googleusercontent.com/KHIX0LQZEBJOvoVRIIvkUfYaOQQ_vM9JtMz3YwHMaaYmQGfQniZPU12Um7FK_3_mJjTDPwliR4ho1VG4W1RBmH_zrhwG_VaQWAomQAiE_Hn33t--R2ayreQa9D3msujggwsOepTE" alt=""/></figure>



<figure class="wp-block-image"><img src="https://lh6.googleusercontent.com/EjVSF_BRt3sOTLSPK33JUrDD6Yu7MBcPNHcb4pvEPKY78e5vEGtr1Fk-EOV0f6O1XSkw9JExZMdXv3Ez5gUJnJlr830mppMBv6lUYFJQvy_hEr9vViRheZ3Ih8tP81R2wAxtR16v" alt=""/></figure>



<h2>Right Menu</h2>



<p>Let&#8217;s create the right menu. Our menu will have four links:</p>



<ul><li>Home</li><li>About</li><li>Work</li><li>Contact</li></ul>



<p>Add the following to <code>Menu.js</code>:<br></p>



<script src="https://gist.github.com/emmabostian/2cc171a1b1b462dbb3530de834f275f4.js"></script>



<p>Now, let&#8217;s import our Menu component into the app and see it render.<br></p>



<p>In <code>index.js</code>, import the Menu component and replace the <code>h1</code> and <code>h2</code> elements from the Code Sandbox default starter with <code>&lt;Menu /&gt;</code>.<br></p>



<p><a href="https://gist.github.com/emmabostian/1259dce3b2a55b9efa69b7fbb9fe7c05">Index.js code</a>:</p>



<script src="https://gist.github.com/emmabostian/1259dce3b2a55b9efa69b7fbb9fe7c05.js"></script>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/x6sz59tITkPGJzkvyxSz-zADWOaPNKwV5-DBP0qcV4E6L0iiW7Vz56llaX4HWHIe0eJfyIrtw1rhyMR2b1J1F2NzrSiZCpNGsT8r22UbkBMR8Ig_CocXXq2D4NuIo-SfqUxCrwKL" alt=""/></figure>



<p>Now that our menu is rendering, let&#8217;s add some state to determine whether or not our menu should be visible.<br></p>



<p>Inside of <code>index.js</code>, add <code>{ useState }</code> to the React import.<br></p>



<p><a href="https://gist.github.com/emmabostian/4fd9abe350fec9a6397e0a09cb069a9a">Index.js code</a>:</p>



<script src="https://gist.github.com/emmabostian/4fd9abe350fec9a6397e0a09cb069a9a.js"></script>



<p>Next, let&#8217;s <a href="https://gist.github.com/emmabostian/cf37323548ac9aed6a3cddc171d3b2f1">declare our state</a> above the return statement. Since our menu will not be visible by default, we&#8217;ll initialize the state to false.<br></p>



<script src="https://gist.github.com/emmabostian/cf37323548ac9aed6a3cddc171d3b2f1.js"></script>



<p>Now let&#8217;s define our animation. We want the sidebar to fade in and slide in from the right when visible and fade out and slide out to the left when not visible.<br></p>



<p>To create this animation, we&#8217;ll use react-spring&#8217;s <code>useSpring</code> hook.<br></p>



<p>Import <code>useSpring</code> from <code>react-spring</code> and underneath the <code>useState</code> hook, <a href="https://gist.github.com/emmabostian/07bcff4ee1c1b846733a520c294dde8d">declare a new <code>const</code></a> named <code>rightSidebarAnimation</code> and set it equal to the result of calling <code>useSpring</code>:</p>



<script src="https://gist.github.com/emmabostian/07bcff4ee1c1b846733a520c294dde8d.js"></script>



<p>Now we&#8217;ll pass an object to react-spring&#8217;s <code>useSpring</code> hook which defines the CSS properties we want to animate. In our case, we want to animate opacity and the menu&#8217;s X-position.<br></p>



<p>We can use a ternary operator to decide when the opacity should be fully opaque (when visible) or transparent (when not visible) and when the X-position should be 0 (when visible) or 100% (when not visible).<br></p>



<p><a href="https://gist.github.com/emmabostian/c32636a64bb69397b17feff6a434f771">Index.js code</a>:</p>



<script src="https://gist.github.com/emmabostian/c32636a64bb69397b17feff6a434f771.js"></script>



<p>We also need to trigger the change in visibility. We&#8217;ll do this by adding a button.<br></p>



<p>Place a button element above the <code>&lt;MenuRight /&gt;</code> component. When clicked, the button will toggle the state of <code>rightMenuVisible</code>.<br></p>



<p>We can also use a ternary expression to change the label of the button to &#8220;Close&#8221; when the menu is open and &#8220;Side menu&#8221; when the menu is closed.<br></p>



<p><a href="https://gist.github.com/emmabostian/b0519c22a0f632774d0a49725451c2ee">Index.js code</a>:</p>



<script src="https://gist.github.com/emmabostian/b0519c22a0f632774d0a49725451c2ee.js"></script>



<p>Finally, <a href="https://gist.github.com/emmabostian/6be1301189b6d488d189757077e3cb0a">we have to pass <code>rightMenuAnimation</code></a> to the <code>MenuRight</code> component in order to get it to animate. We&#8217;ll pass this as the <code>style</code> attribute:<br></p>



<script src="https://gist.github.com/emmabostian/6be1301189b6d488d189757077e3cb0a.js"></script>



<p>Here is our <a href="https://gist.github.com/emmabostian/4bf99348e7cd40ca8d017a1fe4c1bfeb">completed <code>index.js</code> file</a>:<br></p>



<script src="https://gist.github.com/emmabostian/4bf99348e7cd40ca8d017a1fe4c1bfeb.js"></script>



<p>This is what your app should look like:<br></p>



<figure class="wp-block-image"><img src="https://lh3.googleusercontent.com/nzdZFDaxurt8AeUWXcuqR_pwY7b0SklBb7hJ_TYq7ZtWG40e34gwUjCYsedE-Dm_n7Swps3tBwV1-5Q9uN6XpBmZJ1i1TaUsUqgelu8BP6GCXV0dTzpIXFK0X8jUUi9SKYKHd0G-" alt=""/></figure>



<p></p>



<p>We have to do a couple more things to get our animation to work:<br></p>



<p>1. Pass the <code>style</code> attribute to our <code>MenuRight</code> component and add it as an attribute to the HTML element we want to animate.</p>



<p>2. Tell react-spring which element we want to animate.<br></p>



<p>Back in <code>Menu.js</code>, pass <code>style</code> as an argument to our component and add it as an attribute to our wrapping <code>div</code>.<br></p>



<p>To complete the second task and see our animation, we have to use a special HTML element to get our modal to animate.<br></p>



<p><strong>Any element we want to be animated must be prefaced by <code>animated</code>.</strong>, for example <code>&lt;animated.div&gt;</code>. So let&#8217;s import <code>{ animated }</code> from <code>react-spring</code> and change our <code>&lt;div&gt;</code> elements into animated divs.<br></p>



<p><a href="https://gist.github.com/emmabostian/8213c86f20cddfcb6ec2be2f8f97984c">Menu.js code</a>:</p>



<script src="https://gist.github.com/emmabostian/8213c86f20cddfcb6ec2be2f8f97984c.js"></script>



<p>Your UI should now have a Side Menu button in the top right corner which will transition the menu on click.</p>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/0rwiaa00VMMDqO06ZPIy1xW6LqpZikk5LHU8kmnKM-g4W-qpfRTCNQf9v4fGTWbc_KXYATUlbKaPgQHowrvXI4ZuuXUUkTewSFQKb5xHzp6kWpToIHNjnecKaQgPgHmX9hl4ArLE" alt=""/></figure>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/3yGo2ubuCWqW6wF9Y9HMC7_M2Zbo5SqEZpfdgbMM_SNYxj9BYI8_2LsroXCEcrH_1Dp3_PuY8IAZ88z4YyAOQvZn7RjdLkdS6-nelZZzIlgLXeU3KTKMimIPN8qf28qdiPt0nVEd" alt=""/></figure>



<p>And that&#8217;s it! Your menu should now be transitioning on click.<br></p>



<iframe src="https://codesandbox.io/embed/react-spring-animated-menu-qe6kn?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" title="React Spring Animated Menu" allow="geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>



<p><a href="https://codesandbox.io/s/boring-sun-qe6kn?fontsize=14&amp;hidenavigation=1&amp;theme=dark">You can grab the full code here.</a></p>



<h2>Full-page menu</h2>



<p>Now let&#8217;s build our full-page menu. This part of the tutorial will build off of the last section, so if you haven&#8217;t taken it, you should grab the code at the end of the previous section.</p>



<figure class="wp-block-image"><img src="https://lh6.googleusercontent.com/EjVSF_BRt3sOTLSPK33JUrDD6Yu7MBcPNHcb4pvEPKY78e5vEGtr1Fk-EOV0f6O1XSkw9JExZMdXv3Ez5gUJnJlr830mppMBv6lUYFJQvy_hEr9vViRheZ3Ih8tP81R2wAxtR16v" alt=""/></figure>



<p>The markup for our full-page menu will be identical to that of the right menu, with the exception of the class name on the outer div being <code>menu--full</code> instead of <code>menu--right</code>.<br></p>



<p>Add <a href="https://gist.github.com/emmabostian/b8ffce100ececce72419798863968b44">the following React component</a> to your `<code>Menu.js</code>` file:<br></p>



<script src="https://gist.github.com/emmabostian/b8ffce100ececce72419798863968b44.js"></script>



<p>In <code>index.js</code>, <a href="https://gist.github.com/emmabostian/e1c032dee0e61bdbe2bdc1e4ce623104">add our <code>MenuFull</code> component</a> to the import:<br></p>



<script src="https://gist.github.com/emmabostian/e1c032dee0e61bdbe2bdc1e4ce623104.js"></script>



<p>Let&#8217;s add another state to show and hide the full menu component.<br></p>



<p>Underneath the right menu state definition <a href="https://gist.github.com/emmabostian/89814d310316de5bf9f28439387729ee">add the following code</a>, which will initialize the visibility state of our full menu to false:<br></p>



<script src="https://gist.github.com/emmabostian/89814d310316de5bf9f28439387729ee.js"></script>



<p>Now let&#8217;s define our animation. We want our full page menu to start from an opacity of 0 and fade in to an opacity of 1. The menu will also start off the top of the screen (-100%) and transition from the top to take up the entirety of the viewport.<br></p>



<p>Underneath the <code>rightMenuAnimation</code> <a href="https://gist.github.com/emmabostian/3e1bcfee89be827742184b7e7db85c35">add the following</a>:</p>



<script src="https://gist.github.com/emmabostian/3e1bcfee89be827742184b7e7db85c35.js"></script>



<p>Let&#8217;s <a href="https://gist.github.com/emmabostian/16d8045aa902a57339b7260d22f2e589">add a button</a> to toggle the visibility of the full menu. Add this above the side menu button. We&#8217;ll use the same concept of changing the button text to &#8220;Close&#8221; when the menu is visible and &#8220;Full Menu&#8221; when the menu is hidden.<br></p>



<script src="https://gist.github.com/emmabostian/16d8045aa902a57339b7260d22f2e589.js"></script>



<p>Lastly let&#8217;s <a href="https://gist.github.com/emmabostian/8a6dfef80cae29d5ccc902cedd9b32d3">add our component</a>, passing it our transition as the <code>style</code> attribute with our newly declared <code>fullMenuTransition</code>. You can declare it before or after the side menu.<br></p>



<script src="https://gist.github.com/emmabostian/8a6dfef80cae29d5ccc902cedd9b32d3.js"></script>



<p>Here is the <a href="https://gist.github.com/emmabostian/e4e260041d535a9b217e58ed8957e452">completed <code>index.js</code></a>:<br></p>



<script src="https://gist.github.com/emmabostian/e4e260041d535a9b217e58ed8957e452.js"></script>



<p>And that’s it! Here is our completed full page menu!<br></p>



<figure class="wp-block-image"><img src="https://lh3.googleusercontent.com/TUZOw8S_WvZdsyBQW9U7IvXpWJeHml5tEeOoh1OFpUGf26RcziGCUPv2l7Gv0ty4nZchV0HRJXlqDuu1SbcqthLVOXXXIGNDaeaj6_weiEKpNni96bs0LP84n6F3bq0-FtTSi0Sk" alt=""/></figure>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/-FxmmkOCPHUIPnOw4ypj2Je7fTYkn4ItFDLzDLXtpVUa6JxFFzfcviqrn3G56XvJrmTcjjUQ-nMZbLkSrP2U4UD1RxISkYnpdRIZkF8TpO_2BZh7YqbyocEmmFhiEnZcThCE0EQD" alt=""/></figure>



<p><a href="https://codesandbox.io/s/boring-sun-qe6kn?fontsize=14&amp;hidenavigation=1&amp;theme=dark">You can grab the full code here.</a><br></p>



<iframe src="https://codesandbox.io/embed/react-spring-animated-menu-qe6kn?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" title="React Spring Animated Menu" allow="geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>



<h1>Conclusion</h1>



<p>Animating a menu doesn’t have to be complicated! In the next tutorial we’ll build a modal which is mounted and unmounted from the DOM as well as an image gallery!<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/23/micro-interactions-with-react-spring-part-2/">Micro-interactions with react-spring: Part 2</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/23/micro-interactions-with-react-spring-part-2/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14803</post-id>	</item>
		<item>
		<title>The Loop #2: Understanding Site Satisfaction, Summer 2019</title>
		<link>https://stackoverflow.blog/2020/01/22/the-loop-2-understanding-site-satisfaction-summer-2019/</link>
				<comments>https://stackoverflow.blog/2020/01/22/the-loop-2-understanding-site-satisfaction-summer-2019/#comments</comments>
				<pubDate>Wed, 22 Jan 2020 19:03:20 +0000</pubDate>
		<dc:creator><![CDATA[The Community Team]]></dc:creator>
				<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[The Loop]]></category>
		<category><![CDATA[research]]></category>
		<category><![CDATA[the loop]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14801</guid>
				<description><![CDATA[<p>We’re excited to share research highlights about the work we’ve been doing to understand how satisfied people are with Stack Overflow. We’ve been working hard to explore what users like best about Stack Overflow and what their top pain points are, with the goal of improving the overall experience of using the site. To this end, we’ve launched a site satisfaction survey, in which we continually survey users about their experiences using Stack Overflow.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/22/the-loop-2-understanding-site-satisfaction-summer-2019/">The Loop #2: Understanding Site Satisfaction, Summer 2019</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>Welcome to CHAPTER #2 of The Loop, a blog series from the Stack Overflow Community team. This post is a deep-dive into how satisfied users are with Stack Overflow.</p>



<hr class="wp-block-separator"/>



<p>We’re excited to share research highlights about the work we’ve been doing to understand how satisfied people are with Stack Overflow. We’ve been working hard to explore what users like best about Stack Overflow and what their top pain points are, with the goal of improving the overall experience of using the site. To this end, we’ve launched a site satisfaction survey, in which we continually survey users about their experiences using Stack Overflow.<br></p>



<p>We want to make sure that our users feel heard, and this site satisfaction survey is one of the many things we’re doing to gather feedback from our users so that we can incorporate this feedback into our product development and product roadmap decisions. In this post, we’ll be sharing more about this survey and the specific insights we gained from it.&nbsp;<br></p>



<h2>Survey Background</h2>



<p>With the site satisfaction survey, we wanted to gain insight into the pain points users encounter when using the site. Since July 2019, we have been using a monthly site satisfaction survey to ask a random sample of logged-in and anonymous users to report their satisfaction and provide us with open-ended feedback. This gives us a new wealth of insight into our users and also supplements other forms of feedback loops with users like user testing and 1:1 interviews.<br></p>



<p>In this survey, we asked users to answer the following question: “<em>What do you find most frustrating or unappealing about using Stack Overflow? </em>” We allowed users to write in their own answers so that we could gather rich and nuanced data in their own words. We manually coded 2,942 of these open-ended responses and organized responses into different themes so that we could better understand users’ frustrations with using the site. We labeled the open-ended responses in the survey with up to three codes each. Note that the findings in this post are from users who completed the survey in July, August, or the first half of September, 2019.<br></p>



<h2>Main Findings</h2>



<p>The graph below depicts the breakdown of the top themes from the open-ended survey responses:</p>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/w3zLHTufH4-FD6WrFRtnLJlu7pTneAjmG612BglL6ldjzHufJa7xVwHMDnvsQX7Y_QcI08eAzzZArNdyPzVXCRx_dUg_QfdPKof-sJh-f0LT149PIZ4FozY21afXKxwmm1IA-Fp1" alt="Unwelcoming community 10.6%, 
Design 9.8%, 
Artifact quality 9.7%,
Barrier to participation 8.3%, 
Discovery 8.0%, 
Overmoderation 7.1%, 
Voting 5.1%, 
Question quality 4.2%, 
Timely answers 3.5%, 
Other 3.2%, 
Comments 2.2%, 
Onboarding 2.1%, 
Social friction 1.8%, 
Subjective content 0.8%, 
Mobile app/site 0.6%, 
Welcoming backlash 0.5%, 
Job quality 0.4%, 
Review queues 0.3%"/></figure>



<p>The top three themes were:</p>



<p>1. Unwelcoming community (10.6% of responses): A perception of an unwelcoming community was the top thing that people found most frustrating or unappealing about Stack Overflow. We categorized responses that mentioned condescending or rude replies, and general comments about toxicity and lack of friendliness issues into this theme.</p>



<p><em>“The toxic nature of the community… Scares people from even signing up let alone asking questions”</em></p>



<p><em>“Some people are often condescending or rude”&nbsp;</em></p>



<p>2. Design (9.8% of responses): The next most common thing that people cited as an issue with Stack Overflow was design. Responses that discussed the user interface being confusing or cluttered, requests for a dark theme, and issues with the information architecture between Stack Overflow and Stack Exchange were categorized into this theme.&nbsp;&nbsp;&nbsp;&nbsp;<br></p>



<p><em>“Cluttered UI, confusing UI (e.g., I don’t know what to do when I’m on the page)”</em><br></p>



<p><em>“It seems like it has a messy layout with a lot of unnecessary text before the answer to a question”</em></p>



<p>3. Artifact quality (9.7% of responses): Another common theme we saw in the data was people citing issues with the quality of the answers on the site. Responses which mentioned outdated answers, wrong answers being accepted, answers not being accepted at all, or lack of answers were categorized into this theme. &nbsp;<br></p>



<p><em>“</em><em>Sometimes the answers assume prior knowledge which I do not possess</em><em>”</em><br></p>



<p><em>“When users mark questions as solved without giving the answer”</em></p>



<h2>How these research findings tie into our product roadmap</h2>



<p>This data is one of the key inputs that we use to inform our product roadmap.&nbsp;<br></p>



<p>Your feedback about unwelcoming community and perceptions of overmoderation led us to prioritize two important user-to-user feedback loops: the question closing experience and review queues. We know that getting a question closed or sharing and receiving feedback about a question can be frustrating and confusing to question askers, question closers, and those working hard to curate site content. That’s why we’re changing the question closing experience so that questions that need improvements are hidden more quickly and question authors are given specific guidance about how their questions can be improved. We’re also revamping the review queue experience so that it’s easier and more efficient to use.<br></p>



<p>Next, we heard your concerns about design loud and clear. Our design approach is focused on improved usability and accessibility through reduced clutter, clearer patterns, and integrating best practices into our site design. We’re prioritizing optimizations to the question page as well as reduced complexity of the reputation and privileges system. We’re also continuing work with the Stacks team to continue rolling out user-friendly design patterns.&nbsp;<br></p>



<p>Finally, we are taking steps to improve question and answer quality. The feedback that has historically been accessible to us frequently pointed to concerns with newly-asked questions, whereas the site satisfaction survey shared frustrations with the existing library of 18 million questions. We know both are important to everyone – which is why we’ve already revamped the question asking experience – but the site satisfaction survey feedback has helped us prioritize work focused on the library of questions. We want Stack Overflow to remain a source of high quality question and answer pairs, so we’ll soon be starting to explore ways to continue to keep the library of questions fresh and make it a trustworthy part of all developers’ toolkits.<br></p>



<p>We look forward to sharing additional updates about this work with you as time goes on, and we’re grateful to all the people who’ve generously shared their experiences and feedback with us.&nbsp;</p>



<hr class="wp-block-separator"/>



<p><img src="https://s.w.org/images/core/emoji/12.0.0-1/72x72/270b.png" alt="✋" class="wp-smiley" style="height: 1em; max-height: 1em;" />Opt-in to our <a href="https://stackoverflow.com/users/email/settings/current">Research email list</a> (must have a Stack Overflow account). You’ll receive invitations to participate in surveys, user interviews, and more. You’ll receive up to a few emails per year and can opt-out at any time.</p>



<p><img src="https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f4d6.png" alt="📖" class="wp-smiley" style="height: 1em; max-height: 1em;" />Read <a href="https://stackoverflow.blog/2019/12/11/the-loop-1-how-we-conduct-research-on-the-community-team/">CHAPTER #1</a> of The Loop, where Donna takes a deep-dive into our research approach: what it used to be, what it is now, and how it continues to evolve.&nbsp;<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/22/the-loop-2-understanding-site-satisfaction-summer-2019/">The Loop #2: Understanding Site Satisfaction, Summer 2019</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/22/the-loop-2-understanding-site-satisfaction-summer-2019/feed/</wfw:commentRss>
		<slash:comments>39</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14801</post-id>	</item>
		<item>
		<title>Scripting the Future of Stack Overflow</title>
		<link>https://stackoverflow.blog/2020/01/21/scripting-the-future-of-stack-2020-plans-vision/</link>
				<comments>https://stackoverflow.blog/2020/01/21/scripting-the-future-of-stack-2020-plans-vision/#comments</comments>
				<pubDate>Tue, 21 Jan 2020 16:35:27 +0000</pubDate>
		<dc:creator><![CDATA[Prashanth Chandrasekar]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Company]]></category>
		<category><![CDATA[Stackexchange]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[community]]></category>
		<category><![CDATA[company]]></category>
		<category><![CDATA[stackexchange]]></category>
		<category><![CDATA[stackoverflow]]></category>
		<category><![CDATA[vision 2020]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14783</guid>
				<description><![CDATA[<p>A note from our new CEO, Prashanth Chandrasekar, reflecting on his first 90 days and laying out his vision for 2020.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/21/scripting-the-future-of-stack-2020-plans-vision/">Scripting the Future of Stack Overflow</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>As we enter a new decade, there are tremendous forces converging—cloud computing, big data, AI, ML, and an increasingly diverse group of young coders from around the world. Every day, millions of developers visit Stack Overflow to find information they need as they push these exciting new technologies forward. There has been a massive shift since my days as a computer engineering graduate. I was fascinated by the power of languages like Perl, but had only my teachers, classmates, and a few small web forums and mailing lists as a community to support my learning. The numbers below really put into perspective the impact that our community generates and the opportunities that lie ahead:<br></p>



<ul><li>Across <a href="https://stackoverflow.com/?__hstc=188987252.d020206b7acd7bc1c5461a6c99cf58ed.1567541708616.1578075891491.1578077775475.196&amp;__hssc=188987252.3.1578077775475&amp;__hsfp=3792817741">Stack Overflow</a> and the <a href="https://stackexchange.com/sites">Stack Exchange network</a>, we saw around 10 billion page views from 100+ million unique visitors over the course of 2019.</li><li>In 2019, Stack Overflow added over <strong>2.8 million answers</strong> and 2.6 million new questions, with over 1.7 million new users joining the community. There are now over 18 million questions and 27 million answers on Stack Overflow, and over 150,000 people sign up for a Stack Overflow account each month, 12 years after we started.</li><li>Every day, users answer thousands of questions on topics like cloud technology, <a href="https://stackoverflow.com/questions/tagged/kubernetes">container orchestration</a>, and machine learning. There is an ever growing trove of knowledge on <a href="https://stackoverflow.com/questions/tagged/amazon-web-services?tab=Newest">Amazon Web Services</a>, <a href="https://stackoverflow.com/questions/tagged/google-cloud-platform">Google Cloud Platform</a>, and <a href="https://stackoverflow.com/search?q=azure&amp;mixed=0">Microsoft Azure</a>.</li><li>Our community members and volunteer moderators handled almost two million flags to keep inaccurate, abusive, unwelcoming, or inappropriate content off the site and in line with our updated <a href="https://stackoverflow.com/conduct">Code of Conduct</a>.</li><li>Hundreds of thousands of engineers leveraged the power of <a href="https://stackoverflow.com/teams">Stack Overflow for Teams</a>&nbsp;to better collaborate and ship products faster.</li><li>Over 40,000 jobs were posted on <a href="https://stackoverflow.com/jobs?__hstc=188987252.d020206b7acd7bc1c5461a6c99cf58ed.1567541708616.1578075891491.1578077775475.196&amp;__hssc=188987252.3.1578077775475&amp;__hsfp=3792817741">Stack Overflow Jobs</a> in 2019. We now have <strong>over 1,000,000 searchable profiles of developers</strong> who are interested in being contacted about a job on <a href="https://stackoverflow.com/talent/">Stack Overflow Talent</a>.</li><li>Almost a <strong>million </strong>developers found <a href="https://stackoverflow.com/advertising">new and useful tools</a> after seeing a company advertise on one of our sites.&nbsp;</li></ul>



<p>There are a handful of companies that are indispensable to the world of software and to our evolution to a digital society. Stack Overflow is privileged to be in this group of disruptive companies. Thanks to our founders Joel and Jeff, our employees all over the world, and the millions of community members who have contributed so meaningfully to our mission and laid the foundation for our future.<br></p>



<p>The work we do would not be possible without the contributions of our incredible community. Across Stack Overflow, hundreds of thousands of users, supported by hundreds of moderators, helped to review questions, triage answers, propose new tags, and keep the discourse respectful and on topic. The little actions taken on a daily basis add up to millions of important contributions. Alongside this tremendous activity, nuanced discussions about topics like cybersecurity, cloud server architecture, and data science are happening across our network of Stack Overflow and Stack Exchange sites.&nbsp;</p>



<h3><strong>Learning from the company and community — and evolving the organization</strong></h3>



<p>During my first three months at the company between October and December of 2019, I connected with all our employees around the world and spent a significant amount of time outside the office speaking with customers and community members. What became apparent in my conversations is that software development has evolved rapidly, and successful companies are evolving their own cultures and practices to keep pace.<br></p>



<p>For the modern developer, the lines between programming languages, software frameworks, cloud infrastructure, and DevOps are blurring. Developers and organizations are trying to keep up and compete (as the incumbent) or disrupt and take market share (from the incumbent) in an as-a-service digital economy. Every significant developer technology relies on coders finding answers by asking questions on Stack Overflow. But while Stack Overflow has played a massive role in empowering and enabling developers around the world to learn, write code, and build products faster, we as an organization have not kept up with the evolution of the industry.<br></p>



<p>It is critically important that we evolve our platform, community infrastructure, and culture to be more useful to our community so we continue to be a core part of a developer’s workflow. Of the ~90,000 respondents to our 2019 Stack Overflow Developer survey, 80% tagged themselves as hobbyist programmers, 60% wrote their first line of code before the age of 17, and only 10% were women. Statistics like these have significant implications on how we think about making our community more welcoming, engaging, and inclusive. <strong>The key to Stack Overflow’s future and growth are the millions of developers from around the world who find the site useful, but who haven’t yet been welcomed into the community. We need to expand our reach and engagement to ensure these developers join the conversation and push their own learning to new heights.</strong><br></p>



<p>A key part of great product development is to stay close to customers, listen, and take a thoughtful, data-driven, and research-oriented approach to building products. In our case, it is critical that we work closely with our community to listen, change, and evolve rapidly. As an example, over the past several months, we had a lot of dialog with our community about how best to enforce and evolve our code of conduct. We learned that we needed much better channels to listen to our moderators and community members. We have not evolved the existing channels of engagement for power users in our community, like Meta, or articulated how we intended to make improvements going forward. This has caused friction as our user base and business have rapidly grown. We acknowledge these issues, apologize for our mistakes, and have plans for improving in the future.<br></p>



<p>In the fourth quarter of 2019, we created a large task force made up of passionate community advocates from across the company to propose solutions to this core problem. The team’s mission is to improve our feedback loop and working relationship with our community. We added a member of our Community team to our leadership team and restructured the organization to invest in Product leadership to build Community-centric features. We are also forming a moderator council, which will include a group of users with diverse experience levels and backgrounds who can help guide our processes. We’re making hard choices and treating no assumptions as sacred in considering ways to evolve the community.<br></p>



<p>Most importantly, we kicked off a key large scale community survey named <a href="https://stackoverflow.blog/2019/11/25/introducing-the-loop-a-foundation-in-listening/">Through The Loop</a> and invited our entire community to share their suggestions, product feature requests, and ideas for how Stack Overflow should evolve more broadly. We’ve heard consistent feedback from you regarding key topics like question and answer quality, welcomingness and inclusion, and discovery for relevant questions and answers. <strong>All of this is in pursuit of new and more productive ways to work with and listen to our community</strong> <strong>in the next era of the company</strong>. We want to serve all of the millions of people who use Stack Overflow, not just those who know the most about how the site has worked in the past. To be clear, this does not mean channels like Meta will go away, but they need to grow to ensure that users are heard and responded to in a timely fashion.&nbsp;<br></p>



<p>We’ve completed the process of defining how our moderator council will be structured, shared an internal framework for asking coworkers tough community questions, defined the important functions that would be best served by more scalable solutions than Meta, and built outlines of our new moderator training modules. By the end of this quarter, all of these initiatives will be shared publicly with you, our users.<br></p>



<p>Community engagement and inclusion is a top priority for Stack Overflow in 2020. Already, the team has established and released a plan for improving communication and empowering our users internally. We are experimenting to improve in areas we know need work: encouraging more question asking, reduce user to user friction, expanding inclusion, and creating a more integrated experience between Stack Overflow and other technical sites on Stack Exchange. The results of all of this work is being shared publicly through our new <a href="https://stackoverflow.blog/2019/11/25/introducing-the-loop-a-foundation-in-listening/">Loop series</a> on the Stack Overflow blog and by subscribing to our Stack Overflow <a href="https://stackoverflow.blog/newsletter/">newsletter</a> and <a href="https://stackoverflow.blog/podcast/">podcast</a>. We have seen some encouraging results: more people are<a href="https://stackoverflow.blog/2019/11/12/research-update-a-b-testing-the-new-question-form/"> asking questions</a>, we cut the number of&nbsp;negative comments nearly in half, and December was our best month ever for new user signups!</p>



<i>Our latest podcast is a conversation with Prashanth on our plans for 2020. Give it a listen.</i><br> <iframe height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/6f8e084c-ee8d-49d5-a34e-e52f22b7dbc2?dark=false"></iframe><br>



<h3><strong>Building a business and serving every team</strong></h3>



<p>At the same time, Stack Overflow continues to grow and evolve as a business. We began with our <a href="https://stackoverflow.com/advertising">Advertising</a> product and then expanded to our <a href="https://stackoverflow.com/talent/en">Talent</a> product. My first quarter helping to manage these businesses has convinced me that Stack Overflow is an underestimated and perhaps even under recognized platform for helping developers connect with companies directly either to understand their developer-centric products or to find their next role at those companies. There’s a lot we can do to raise the awareness of these capabilities.<br></p>



<p>Our third line of business, <a href="https://stackoverflow.com/teams">Stack Overflow for Teams</a>, is our flagship SaaS product and lets development and technical teams use the power of Stack Overflow internally to answer questions about their own code and technology. It’s becoming an invaluable part of the toolset for developers and technical workers at tech giants like Microsoft, which has <a href="https://www.stackoverflowbusiness.com/case-studies/microsoft">over 70,000 users</a>. It’s also used by small startups <a href="https://stackoverflow.blog/2019/07/09/osso-vr-surgery-training-stack-overflow-teams/">like Osso VR</a>, which has a few dozen developers using the platform. The Enterprise version launched only two years ago and our mid-level Business tier just six months ago. Within this short period of time, Teams became the fastest growing product in our portfolio. We’re also expanding partnerships within the product. Stack Overflow for Teams integrates with lots of your favorite tools—Slack, Microsoft Teams, and Okta. Key developer workflow tools like GitHub Enterprise and Jira are coming shortly.&nbsp;<br></p>



<p>The way companies use Stack Overflow for Teams is fascinating, including one that hits close to home: development teams looking to ship product faster and be more responsive to their customers. This requires Engineering, Product Management, Product Marketing, and other teams to collaborate closely to not only build and ship products but also enable Sales and Customer Success teams to present accurate and up-to-date feature updates and roadmaps to prospects or customers. We recently made Stack Overflow for Teams <a href="https://stackoverflow.blog/2020/01/14/were-making-it-easier-to-try-stack-overflow-for-teams/">available for free for the first 30 days</a>, so everyone can experience the power that comes with this collaboration and knowledge sharing tool.<br></p>



<p>What I hear time and again in conversations with our customers and community members is that the tools we built to discuss writing code can be extremely useful across many areas of an organization—in Engineering, Product Development, Product Marketing, and even People, Business Operations, Legal, Customer Success, and Sales organizations. I know developers love data so I wanted to share highlights from a <a href="https://protect-us.mimecast.com/s/8BzmC9rYkPIr8goktoCTxV?domain=stackoverflowbusiness.com">study</a> we commissioned from Forrester Consulting to assess Teams’ TEI (Total Economic Impact). They sat down with four of our enterprise-sized customers and dug deep. After weeks of interviews and number crunching, the findings prove an incredible 179% return on investment. <strong>The full study also revealed some other surprisingly huge impact for companies that use Stack Overflow Teams:</strong><br></p>



<ul><li>$224,000 in question-asking time savings in the first year</li><li>$1.1M in question-answering time savings in the first year</li><li>Decreased time to market</li><li>More efficient onboarding for new team members</li></ul>



<p>These numbers are exciting and give everyone at the company a lot of confidence that we can continue to help developers and technical workers all around the world do their daily jobs better and more efficiently.&nbsp;</p>



<h3><strong>Growing Stack Overflow</strong></h3>



<p>In 2020, in order to continue to fuel our growth, we’re expanding and diversifying company leadership. Just last week we announced the <a href="http://www.oleantimesherald.com/business/stack-overflow-bolsters-leadership-team-with-new-chief-product-officer/article_48877c29-6834-5b43-86ab-628a0a5e5619.html">addition of Teresa Dietrich</a>, who joined as our Chief Product Officer and brings great technical leadership experience from companies like McKinsey New Ventures, Namely, and WebMD. We’ve also <a href="https://finance.yahoo.com/news/payscale-appoints-adrianna-burrows-chief-120010163.html">added Adrianna Burrows</a> to our Board. In addition to being a Stack Overflow alum, Adrianna has been a marketing leader at great companies like Microsoft, Cornerstone on Demand and is currently CMO of Payscale. I’m grateful to have their expertise to help drive the company forward.&nbsp;<br></p>



<p>Stack Overflow is already an indispensable part of the developer workflow from the perspective of our public community, but there is so much more to do for developers as they ship code. Many of the product innovations we’re excited to explore under Teresa’s leadership are the opportunities at the intersection of private and public Stack Overflow. Developers want us to be a more active part of their daily workflow. Coders already leverage public Q&amp;A several times a day to answer their most pressing development questions, but want a more integrated and more enriching experience, especially when combined with our private Teams product.&nbsp;<br></p>



<p>We are already seeing many companies leverage our community infrastructure to better support their own developer communities. <a href="https://stackoverflow.blog/2019/10/30/why-sencha-is-moving-its-support-forums-to-stack-overflow/">Sencha</a>, <a href="https://www.snowflake.com/blog/snowflake-forum-is-now-on-stack-overflow/">Snowflake</a>, and <a href="https://blog.mapbox.com/introducing-mapbox-developer-forums-on-stack-overflow-4c1ba2bf2efb">Mapbox</a> have all announced efforts to use Stack Overflow as a platform for helping programmers to use their products. “We want to make it easier and faster for anyone to find answers to their questions, especially questions that others have raised without needing to wait for a reply from our team,” <a href="https://blog.mapbox.com/introducing-mapbox-developer-forums-on-stack-overflow-4c1ba2bf2efb">wrote</a> Yaniv Markovski, head of support at Mapbox. “As a bonus, joining in on this community conversation creates a feedback loop that allows us to create better documentation and learn how we can improve our product.” We are currently exploring how we can create an exceptional experience for developers and companies to interact more directly on Stack Overflow— i.e., by creating more curated channels and spaces on Stack Overflow to interact more directly with specific communities. Stay tuned for more ideas here!<br></p>



<p>As we look forward to 2020, we plan to invest in public Q&amp;A, expand our community, and continue to cement our place as a pillar of the software industry and broader knowledge economy. We also know that we have work to do on improving how we engage with our community, as well as continuing to strive for more diversity, inclusion, and approachability.<br></p>



<p>This is a big mandate. So as we embark on the journey this coming year, I’ve asked everyone at Stack Overflow to maintain a growth mindset (through hard work, openness to feedback, and resilience), to always operate with our “why” at the center, and to conduct every meeting as if there is a community member and customer in the room. What I ask of you—anyone reading this post—is to continue to grow with us, to give us feedback through our new feedback loops, and to continue to rely on Stack Overflow and the Stack Exchange network as the essential resource for exchanging ideas and information on technical topics.<br></p>



<p>Visionary companies are guided by a mission, not just a sustainable business model, and seek out challenges that can help move humanity forward. We have the opportunity to do that at Stack Overflow, to realize our profound mission of helping write the script of the future by serving developers and technical workers. Let’s answer the most important questions in this great new era of technology, together.<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/21/scripting-the-future-of-stack-2020-plans-vision/">Scripting the Future of Stack Overflow</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/21/scripting-the-future-of-stack-2020-plans-vision/feed/</wfw:commentRss>
		<slash:comments>17</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14783</post-id>	</item>
		<item>
		<title>Podcast: A chat with our CEO about the future of our company and community</title>
		<link>https://stackoverflow.blog/2020/01/21/podcast-a-chat-with-our-ceo-about-the-future-of-our-company-and-community/</link>
				<comments>https://stackoverflow.blog/2020/01/21/podcast-a-chat-with-our-ceo-about-the-future-of-our-company-and-community/#comments</comments>
				<pubDate>Tue, 21 Jan 2020 05:35:00 +0000</pubDate>
		<dc:creator><![CDATA[Ben Popper]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[The Stack Overflow Podcast]]></category>
		<category><![CDATA[bulletin]]></category>
		<category><![CDATA[stackoverflow]]></category>
		<category><![CDATA[the stack overflow podcast]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14779</guid>
				<description><![CDATA[<p>We speak with our new CEO, Prashanth Chandrasekar, about his first three months on the job.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/21/podcast-a-chat-with-our-ceo-about-the-future-of-our-company-and-community/">Podcast: A chat with our CEO about the future of our company and community</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<iframe height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/6f8e084c-ee8d-49d5-a34e-e52f22b7dbc2?dark=false"></iframe>



<p>This week we chat with our CEO, Prashanth Chandrasekar, about the milestones our community achieved in 2019 and what we have planned for 2020.</p>



<h2>EPISODE NOTES</h2>



<p>Three months ago, we interviewed Prashanth during his first week on the job. Now, with a full quarter of work under his belt, our new CEO reflects on what we accomplished over the last decade and lays out his vision for where Stack Overflow, as a company and community, will be heading over the next year and beyond.</p>



<p>Paul explains why engineers prefer to give blunt feedback, even in a public setting, and why that approach makes sense for someone working on mission critical software systems. </p>



<p>Sara drops some hints about our plans for the future of the Stack Exchange network. One of these big goals is to better integrate knowledge from these with the activity that happens on Stack Overflow, so that the knowledge being shared on Server Fault or Super User can easily be found by users on Stack Overflow, and vice versa. Stay tuned for more details and feel free to share your thoughts for what would work to improve the user experience.</p>



<p>Prashanth talks about the forces reshaping the developer landscape: cloud services, machine learning, container orchestration, and more. How can we help new developers, both hobbyists and professionals, find what they need on our sites, and empower them so they feel comfortable asking questions and providing answers.</p>



<p></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/21/podcast-a-chat-with-our-ceo-about-the-future-of-our-company-and-community/">Podcast: A chat with our CEO about the future of our company and community</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/21/podcast-a-chat-with-our-ceo-about-the-future-of-our-company-and-community/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14779</post-id>	</item>
		<item>
		<title>What is Rust and why is it so popular?</title>
		<link>https://stackoverflow.blog/2020/01/20/what-is-rust-and-why-is-it-so-popular/</link>
				<comments>https://stackoverflow.blog/2020/01/20/what-is-rust-and-why-is-it-so-popular/#comments</comments>
				<pubDate>Mon, 20 Jan 2020 12:39:00 +0000</pubDate>
		<dc:creator><![CDATA[Jake Goulding]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[programming]]></category>
		<category><![CDATA[rust]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14760</guid>
				<description><![CDATA[<p>Rust has been Stack Overflow's most loved language for four years in a row, indicating that many of those who have had the opportunity to use Rust have fallen in love with it. However, the roughly 97% of survey respondents who haven't used Rust may wonder, "What's the deal with Rust?"</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/20/what-is-rust-and-why-is-it-so-popular/">What is Rust and why is it so popular?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>Rust has been <a href="https://insights.stackoverflow.com/survey/2019">Stack Overflow&#8217;s most loved language for four years in a row</a>, indicating that many of those who have had the opportunity to use Rust have fallen in love with it. However, the roughly 97% of survey respondents who haven&#8217;t used Rust may wonder, &#8220;What&#8217;s the deal with Rust?&#8221;</p>



<p>The short answer is that Rust solves pain points present in many other languages, providing a solid step forward with a limited number of downsides.</p>



<p>I’ll show a sample of what Rust offers to users of other programming languages and what the current ecosystem looks like. It’s not all roses in Rust-land, so I talk about the downsides, too.&nbsp;</p>



<h2>Coming from dynamically-typed languages</h2>



<p>The arguments between programmers who prefer dynamic versus static type systems are likely to endure for decades more, but it&#8217;s hard to argue about the benefits of static types. You only need to look at the rise of languages like TypeScript or features like Python&#8217;s type hints as people have become frustrated with the current state of dynamic typing in today&#8217;s larger codebases. Statically-typed languages allow for compiler-checked constraints on the data and its behavior, alleviating cognitive overhead and misunderstandings.</p>



<p>This isn&#8217;t to say that all static type systems are equivalent. Many statically-typed languages have a large asterisk next to them: they allow for the concept of <code>NULL</code>. This means any value may be what it says <strong>or nothing</strong>, effectively <a href="https://franklinchen.com/blog/2012/09/06/my-pittsburgh-ruby-talk-nil/">creating a second possible type for every type</a>. Like Haskell and some other modern programming languages, Rust encodes this possibility using an <em>optional type</em>, and the compiler requires you to handle the <code>None</code> case. This prevents occurrences of the dreaded <code>TypeError: Cannot read property 'foo' of null</code> runtime error (or language equivalent), instead promoting it to a compile time error you can resolve before a user ever sees it. Here&#8217;s an example of a function to greet someone whether or not we know their name; if we had forgotten the <code>None</code> case in the <code>match</code> or tried to use <code>name</code> as if it was an always-present <code>String</code> value, the compiler would complain.</p>



<script src="https://gist.github.com/shepmaster/233d9f6b2d8d71abfbb1f65fe7d5d921.js"></script>



<p>Rust&#8217;s static typing does its best to get out of the programmer&#8217;s way while encouraging long-term maintainability. Some statically-typed languages place a large burden on the programmer, requiring them to repeat the type of a variable multiple times, which hinders readability and refactoring. Other statically-typed languages allow whole-program type inference. While convenient during initial development, this reduces the ability of the compiler to provide useful error information when types no longer match. Rust learns from both of these styles and requires top-level items like function arguments and constants to have explicit types, while allowing type inference inside of function bodies. In this example, the Rust compiler can infer the type of <code>twice</code>, <code>2</code>, and <code>1</code> because the <code>val</code> parameter and the return type are declared as 32-bit signed integers.</p>



<script src="https://gist.github.com/shepmaster/fcb2d82aab1e0caa145c7664aa46a5f6.js"></script>



<h2>Coming from garbage-collected languages</h2>



<p>One of the biggest benefits of using a systems programming language is the ability to have control over low-level details.</p>



<p>Rust gives you the choice of storing data on the stack or on the heap and determines at compile time when memory is no longer needed and can be cleaned up. This allows efficient usage of memory as well as more performant memory access. <a href="https://www.tilde.io/">Tilde</a>, an early production user of Rust in their <a href="https://www.skylight.io/">Skylight</a> product, found they were able to <a href="https://www.rust-lang.org/static/pdfs/Rust-Tilde-Whitepaper.pdf">reduce their memory usage from 5GiB to 50MiB</a> by rewriting certain Java HTTP endpoints in idiomatic Rust. Savings like this quickly add up when cloud providers charge premium prices for increased memory or additional nodes.</p>



<p>Without the need to have a garbage collector continuously running, Rust projects are well-suited to be used as libraries by other programming languages via foreign-function interfaces. This allows existing projects to replace performance-critical pieces with speedy Rust code without the memory safety risks inherent with other systems programming languages. Some projects have even been <a href="https://people.gnome.org/~federico/blog/librsvg-is-almost-rustified.html">incrementally rewritten in Rust</a> using these techniques.</p>



<p>With direct access to hardware and memory, Rust is an ideal language for embedded and bare-metal development. You can write extremely low-level code, such as <a href="https://os.phil-opp.com/">operating system kernels</a> or <a href="https://docs.rust-embedded.org/discovery/">microcontroller applications</a>. Rust&#8217;s core types and functions as well as reusable library code shine in these especially challenging environments.</p>



<h2>Coming from other systems programming languages</h2>



<p>To many people, Rust is largely viewed as an alternative to other systems programming languages, like C or C++. The biggest benefit Rust can provide compared to these languages is the <em>borrow checker</em>. This is the part of the compiler responsible for ensuring that references do not outlive the data they refer to, and it helps eliminate entire classes of bugs caused by memory unsafety.</p>



<p>Unlike many existing systems programming languages, Rust doesn&#8217;t require that you spend all of your time mired in nitty-gritty details. Rust strives to have as many <em>zero-cost abstractions</em> as possible—abstractions that are as equally as performant as the equivalent hand-written code. In this example, we show how iterators, a primary Rust abstraction, can be used to succinctly create a vector containing the first ten square numbers.</p>



<script src="https://gist.github.com/shepmaster/41d82ea1f57ed3f363426ad5e72367e2.js"></script>



<p>When safe Rust isn&#8217;t able to express some concept, <a href="http://cliffle.com/p/dangerust/">you can use <em>unsafe</em> Rust</a>. This unlocks a few extra powers, but in exchange the programmer is now responsible for ensuring that the code is truly safe. This unsafe code can then be wrapped in higher-level abstractions which guarantee that all uses of the abstraction are safe.</p>



<p>Using unsafe code should be a calculated decision, as using it correctly requires as much thought and care as any other language where you are responsible for avoiding <a href="https://raphlinus.github.io/programming/rust/2018/08/17/undefined-behavior.html">undefined behavior</a>. Minimizing unsafe code is the best way to minimize the possibilities for segfaults and vulnerabilities due to memory unsafety.</p>



<p>Systems programming languages have the implicit expectation that they will be around effectively forever. While some modern development doesn&#8217;t require that amount of longevity, many businesses want to know that their fundamental code base will be usable for the foreseeable future. Rust recognizes this and has made conscious design decisions around backwards compatibility and stability; it&#8217;s a language <a href="https://www.youtube.com/watch?v=A3AdN7U24iU">designed for the next 40 years</a>.</p>



<h2>The Rust ecosystem</h2>



<p>The Rust experience is larger than a language specification and a compiler; many aspects of creating and maintaining production-quality software are treated as first-class citizens. Multiple concurrent Rust toolchains can be installed and managed via <a href="https://rustup.rs/">rustup</a>. Rust installations come with Cargo, a command line tool to manage dependencies, run tests, generate documentation, and more. Because dependencies, tests, and documentation are available by default, their usage is prevalent. <a href="https://crates.io/">crates.io</a> is the community site for sharing and discovering Rust libraries. Any library published to crates.io will have its documentation built and published on <a href="https://docs.rs/">docs.rs</a>.</p>



<p>In addition to the built-in tools, the Rust community has created a large number of development tools. Benchmarking, fuzzing, and property-based testing are all easily accessible and well-used in projects. Extra compiler lints are available from <a href="https://github.com/rust-lang/rust-clippy">Clippy</a> and automatic idiomatic formatting is provided by <a href="https://github.com/rust-lang/rustfmt">rustfmt</a>. IDE support is healthy and growing more capable every day.</p>



<p>Going beyond technical points, Rust has a vibrant, welcoming community. There are several official and unofficial avenues for people to get help, such as the <a href="https://discord.gg/rust-lang">chat</a>, the <a href="https://users.rust-lang.org/">user&#8217;s forum</a>, the <a href="https://www.reddit.com/r/rust/">Rust subreddit</a>, and, of course, Stack Overflow <a href="https://stackoverflow.com/questions/tagged/rust">questions and answers</a> and <a href="https://chat.stackoverflow.com/rooms/62927/rust">chatroom</a>. Rust has a <a href="https://www.rust-lang.org/policies/code-of-conduct">code of conduct</a> enforced by an awesome moderation team to make sure that the official spaces are welcoming, and most unofficial spaces also observe something similar.</p>



<p>Offline, Rust has multiple conferences across the globe, such as <a href="https://rustconf.com/">RustConf</a>, <a href="https://rust-belt-rust.com/">Rust Belt Rust</a>, <a href="https://blog.rustfest.eu/">RustFest</a>, <a href="https://rustlatam.org/">Rust Latam</a>, <a href="https://rustcon.asia/">RustCon Asia</a>, and more.</p>



<h2>It&#8217;s not all roses</h2>



<p>Rust&#8217;s strong type system and emphasis on memory safety—all enforced at compile time—mean that it&#8217;s extremely common to get errors when compiling your code. This can be a frustrating feeling for programmers not used to such an opinionated programming language. However, the Rust developers have spent a large amount of time working to improve the error messages to ensure that they are clear and actionable. Don&#8217;t let your eyes gloss over while reading Rust errors!</p>



<p>It&#8217;s especially common to hear someone complain that they&#8217;ve been &#8220;fighting the borrow checker.&#8221; While these errors can be disheartening, it&#8217;s important to recognize that each of the locations identified had the potential to introduce bugs and potential vulnerabilities in a language that didn&#8217;t perform the same checks.</p>



<p>In this example, we create a mutable string containing a name, then take a reference to the first three bytes of the name. While that reference is outstanding, we attempt to mutate the string by clearing it. There&#8217;s now no guarantee that the reference points to valid data and dereferencing it could lead to undefined behavior, so the compiler stops us:</p>



<script src="https://gist.github.com/shepmaster/7b4338af0ce3be877647d2e8f1354771.js"></script>



<script src="https://gist.github.com/shepmaster/22d5cfb40989a9f370dfb84a72665b00.js"></script>



<p>Helpfully, the error message incorporates our code and tries its hardest to explain the problem, pointing out exact locations.</p>



<p>Prototyping solutions in Rust can be challenging due to its statically-typed nature and because Rust requires covering 100% of the conditions, not just 99%. Edge cases must have applicable code, even when the programmer doesn&#8217;t yet know what the happy path should do. During early development, these edge cases can often be addressed by causing the program to crash, and then rigorous error handling can be added at a later point. This is a different workflow than in languages such as Ruby, where developers often try out code in a REPL and then move that to a prototype without considering error cases at all.</p>



<p>Rust is still relatively new, which means that some desired libraries may not be available yet. The upside is there&#8217;s plenty of fertile ground to develop these needed libraries, perhaps even taking advantage of recent developments in the relevant computer science fields. Due to this and Rust&#8217;s capabilities, some of Rust&#8217;s libraries, such as the <a href="https://github.com/rust-lang/regex">regex</a> crate, are the best-in-breed across any language.</p>



<p>While Rust has a strong commitment to stability and backwards compatibility, that doesn&#8217;t imply the language is finalized. A specific problem may not have access to language features that would make it simpler to express or perhaps even possible to express. As an example, Rust has had asynchronous futures for over three years, but stable <a href="https://blog.rust-lang.org/2019/11/07/Async-await-stable.html"><code>async</code> / <code>await</code></a> support in the language itself is only a few months old.</p>



<p>The Rust compiler is built on top of <a href="https://llvm.org/">LLVM</a>, which means that the number of target platforms will be smaller than C or C++.</p>



<h2>Come and join us!</h2>



<p>Regardless of which programming languages you love now, there&#8217;s bound to be something that excites or intrigues you about Rust. These are some of the reasons why I and others love Rust so much, and there&#8217;s many more. If you are looking for extra structure in your project, faster or more efficient code, or the ability to write performant code more quickly and safely, it&#8217;s time for you to see if Rust will be <em>your</em> next most-loved language!<br></p>



<p></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/20/what-is-rust-and-why-is-it-so-popular/">What is Rust and why is it so popular?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/20/what-is-rust-and-why-is-it-so-popular/feed/</wfw:commentRss>
		<slash:comments>59</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14760</post-id>	</item>
		<item>
		<title>This week, #StackOverflowKnows syntactic sugar, overfit or nah, and the definition of norm</title>
		<link>https://stackoverflow.blog/2020/01/17/this-week-stackoverflowknows-syntactic-sugar-overfit-or-nah-and-the-definition-of-norm/</link>
				<comments>https://stackoverflow.blog/2020/01/17/this-week-stackoverflowknows-syntactic-sugar-overfit-or-nah-and-the-definition-of-norm/#comments</comments>
				<pubDate>Fri, 17 Jan 2020 15:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Ryan Donovan]]></dc:creator>
				<category><![CDATA[#StackOverflowKnows]]></category>
		<category><![CDATA[Announcements]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14757</guid>
				<description><![CDATA[<p>We’re in the throes of winter here at Stack Overflow headquarters but the Q&#38;A sites are full of hot questions. This week, we’re wondering if syntactic sugar makes code sweeter, wishing upon a galaxy, and digging into two Scala functions that do basically the same thing but at different speeds.&#160; A star or a galaxy?…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/17/this-week-stackoverflowknows-syntactic-sugar-overfit-or-nah-and-the-definition-of-norm/">This week, #StackOverflowKnows syntactic sugar, overfit or nah, and the definition of norm</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>We’re in the throes of winter here at Stack Overflow headquarters but the Q&amp;A sites are full of hot questions. This week, we’re wondering if syntactic sugar makes code sweeter, wishing upon a galaxy, and digging into two Scala functions that do basically the same thing but at different speeds.&nbsp;<br></p>



<h3><a href="https://physics.stackexchange.com/questions/522578/a-star-or-a-galaxy">A star or a galaxy?</a></h3>



<p><em>physics.stackexchange.com</em></p>



<p>When I wish upon a star, does it count extra if it&#8217;s a galaxy? Because I’ve been trying find the optimal wish pattern without having to wish for more wishes. Genies are such sticklers for rules.</p>



<h3><a href="https://datascience.stackexchange.com/questions/66350/what-would-i-prefer-an-over-fitted-model-or-a-less-accurate-model">What would I prefer &#8211; an over-fitted model or a less accurate model?</a></h3>



<p><em>datascience.stackexchange.com</em></p>



<p>Our question asker is wondering if overfitting a model is worth the 1% extra results. It depends on what kind of data you’re modeling. Speech recognition? That 1% may matter. Everything else? Maybe not.&nbsp;</p>



<h3><a href="https://stackoverflow.com/questions/59593541/why-are-the-fast-integer-types-faster-than-the-other-integer-types">Why are the fast integer types faster than the other integer types?</a> </h3>



<p><em>stackoverflow.com</em></p>



<p>Can you speed up operations just by putting the word &#8216;fast&#8217; in the name of the data type? Because I would like to schedule an appointment with the fast_doctor.&nbsp;</p>



<h3><a href="https://softwareengineering.stackexchange.com/questions/403065/why-is-the-norm-of-a-complex-number-in-the-c-complex-library-actually-the-squa">Why is the norm of a complex number in the C++ complex library actually the square of the norm?</a> </h3>



<p><em>softwareengineering.stackexchange.com</em></p>



<p>Turns out Euclid and C++ don’t agree on what ‘norm’ means. I always thought it was a guy who sat at the bar in <em>Cheers</em>.&nbsp;</p>



<h3><a href="https://stackoverflow.com/questions/59598239/why-is-zipped-faster-than-zip-in-scala">Why is zipped faster than zip in Scala?</a> </h3>



<p><em>stackoverflow.com</em></p>



<p>How can similar Scala functions perform the same task at such different speeds? You’d think that they would be equally zippy.&nbsp;</p>



<h3><a href="https://softwareengineering.stackexchange.com/questions/403483/when-to-use-not-use-syntactic-sugar">When to use / not use syntactic sugar</a> </h3>



<p><em>softwareengineering.stackexchange.com</em></p>



<p>How many syntactic sugars do you take in your code? Or do you like your code like your fancy coffee, verbose and full of multiple elements?</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/17/this-week-stackoverflowknows-syntactic-sugar-overfit-or-nah-and-the-definition-of-norm/">This week, #StackOverflowKnows syntactic sugar, overfit or nah, and the definition of norm</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/17/this-week-stackoverflowknows-syntactic-sugar-overfit-or-nah-and-the-definition-of-norm/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14757</post-id>	</item>
		<item>
		<title>How to create micro-interactions with react-spring: Part 1</title>
		<link>https://stackoverflow.blog/2020/01/16/how-to-create-micro-interactions-with-react-spring-part-1/</link>
				<comments>https://stackoverflow.blog/2020/01/16/how-to-create-micro-interactions-with-react-spring-part-1/#comments</comments>
				<pubDate>Thu, 16 Jan 2020 15:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Emma Bostian]]></dc:creator>
				<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Code for a Living]]></category>
		<category><![CDATA[Stackoverflow]]></category>
		<category><![CDATA[animation]]></category>
		<category><![CDATA[react]]></category>
		<category><![CDATA[react-spring]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14747</guid>
				<description><![CDATA[<p>In this series, we’ll examine how to take your application from ordinary to exceptional by implementing micro-interactions with react-spring so you won’t be stuck thinking “I really wish I knew how to add animations” any more.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/16/how-to-create-micro-interactions-with-react-spring-part-1/">How to create micro-interactions with react-spring: Part 1</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>How often have you looked at the application you just built and thought to yourself “I really wish I knew how to add animations”?</p>



<p>I had this thought for a long time. I would build something really great, yet the interactions were minimal at best (the most I could do is a <code>transition: background .1s linear</code>), yet I always wanted more.<br></p>



<p>Animations not only take your application from good to exceptional, they’re often expected by users. But animations don’t just make your application look and feel nicer, they can be a useful tool for improving perceived performance, giving users updates on the status of a task, and guiding a user through your application.<br></p>



<p>In this series, we’ll examine how to take your application from ordinary to exceptional by implementing micro-interactions with react-spring so you won’t be stuck thinking “I really wish I knew how to add animations” any more.<br></p>



<h1>react-spring</h1>



<p>For this series of tutorials, we’ll be learning <a href="https://www.react-spring.io/">react-spring</a>.</p>



<p>react-spring is a hooks-based animation library, but what differentiates it from its competition is the fact that it’s also a physics-based library.<br></p>



<p>Typically we use CSS animation libraries with transition timing functions and bezier curves to animate elements in the UI. However, it’s truly difficult to make elements transition in a natural manner. Elements in real life don’t transition linearly through different states, and your UI elements shouldn’t either.<br></p>



<p>Enter react-spring.<br></p>



<p>We’ll learn more about this amazing technology in the second and third installments of the blog series, but if you don’t know React or haven’t worked with Hooks I would recommend taking an introductory course first.<br></p>



<h1>What are micro-interactions?</h1>



<p>Micro-interactions are small animations whose purpose is to delight the user by providing feedback in regards to a task or inform the user about the status of a process or task.<br></p>



<p>Here are a few examples of micro-interactions:</p>



<ul><li><a href="https://dribbble.com/shots/7299868-Download-Buttons">Dribbble buttons</a></li><li><a href="https://dribbble.com/shots/6833910-Mobile-App-Onboarding">Mobile app onboarding</a></li><li><a href="https://dribbble.com/shots/5709751-Activate-Button">Activate button</a></li></ul>



<p>By incorporating micro-interactions we will take our applications from ordinary to exceptional. We can think of the structure of your application—the HTML—as the body, the CSS as the physical appearance, and animations as the body language.<br></p>



<h1>Why use micro-interactions?</h1>



<p>Here are a few reasons why you should use micro-interactions throughout your application.<br></p>



<h2>Enhancing perceived performance</h2>



<p><a href="https://blog.marvelapp.com/a-designers-guide-to-perceived-performance/">“There are two kinds of time: <em>clock time</em> and <em>brain time</em>. The former is the objective measure of time; the latter is how a person <em>perceives</em> time.”</a><br></p>



<p>Adding micro-interactions, such as a custom progress bar or an animated setup dialog which guides the user through a process, can change the way users perceive the time it takes to complete a task.<br></p>



<p>We can alter our user&#8217;s sense of time with animations and this can work in our favor if our performance budget needs some refactoring.<br></p>



<p>Example: <a href="https://dribbble.com/shots/3982257-Neo-Kids-Onboarding-Concept">Form Entry</a><br></p>



<h2>Inform users about the status of a task	</h2>



<p>As a user’s request is processing or as their data is loading, we can use a micro-interaction to inform them of its status.<br></p>



<p>Custom progress bars are a great way to keep your users from getting frustrated and will stretch the amount of time they’re willing to wait for a process to finish.<br></p>



<p> Examples:  </p>



<ul><li><a href="https://dribbble.com/shots/7184429-Avocado-loader-interaction">Avocado Loader</a> </li><li><a href="https://dribbble.com/shots/7199149-Book-Loader">Book Loader</a></li><li><a href="https://dribbble.com/shots/5334120-Progress-Bar-Animation-UX-Concept">Progress Bar</a></li></ul>



<h2>Illustrate a state change</h2>



<p>If a user is filling out a form and incorrectly enters their password, we can use micro-interactions to illustrate that this form needs to be fixed prior to submission.</p>



<p>Examples:</p>



<ul><li><a href="https://dribbble.com/shots/4908813-Invalid-Email-Error">Form Error</a></li><li><a href="https://dribbble.com/shots/5310205-Password-error-animation-2">Password Incorrect</a></li></ul>



<h2>Draw a user’s attention to something</h2>



<p>Using micro-interactions to capture a user’s attention and indicate that there is something of importance is a useful tool for onboarding or to indicate someone is typing.<br></p>



<p>Example: <a href="https://dribbble.com/shots/4622464-Chat">Chat</a><br></p>



<h2>To create habits</h2>



<p>Social media applications are really good at getting their uses to form habits, and they do so with micro-interactions. Facebook’s like button is a prime example of this, as is Instagram’s heart animation.These small interactions delight users and keep them coming back for more.<br></p>



<p>Example: <a href="https://dribbble.com/shots/6415659-Reactions-2-0">Reactions</a></p>



<p>Further reading: </p>



<ul><li><a href="https://www.nngroup.com/articles/ten-usability-heuristics/">Jakob Nielsen’s Heuristics</a></li><li><a href="https://www.creativebloq.com/advice/understand-the-12-principles-of-animation">Disney’s 12 Principles Of Animation</a></li></ul>



<h1>Do’s and don’ts</h1>



<p>Before you build your first micro-interaction, it’s important to understand the do’s and don’ts.<br></p>



<h2>Do make your micro-interactions accessible</h2>



<p>Users won’t care about the coolest micro-interaction in the world if it’s not accessible. If the interaction indicates state change, ensure that the proper HTML elements and attributes are used; otherwise, add the appropriate WAI-ARIA counterparts.<br></p>



<h2>Don’t add animation to everything</h2>



<p>Animations draw the user’s attention, but not all information has the same level of importance.<br></p>



<p>First understand which component on the page has the most pertinent or time sensitive information or priority, and then decide what to animate.<br></p>



<h2>Do make interactions feel as if they’re part of the real world</h2>



<p>Our goal is to create animations which feel natural and fluid, not robotic and linear. Try to mimic the physics of the real world when designing and developing micro-interactions.</p>



<h1>How Do You Build A Micro-Interaction?</h1>



<p>There are three main areas to designing a micro-interaction:</p>



<ol><li>Interaction Trigger </li><li>State Definition</li><li>Animation Definition</li></ol>



<h2>Interaction Trigger</h2>



<p>All micro-interactions require something else to trigger them. This can be a user-triggered action, like clicking a button, or a system-prompted event, like requesting data.<br></p>



<h2>State Definition</h2>



<p>Once we know what triggers the micro-interaction, we must define the different state that this micro-interaction has.<br></p>



<h2>Animation Definition</h2>



<p>Once we&#8217;ve defined the various states, we can define what is expected at each step.<br></p>



<h1>Conclusion</h1>



<p>In the next two posts in this series, we’ll dive into building micro-interactions with react-spring in two tutorials. In the first tutorial, we’ll build a navigation menu (full page and sidebar). In the second tutorial, we’ll build a modal that flies in from outside of the viewport and an image gallery.<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/16/how-to-create-micro-interactions-with-react-spring-part-1/">How to create micro-interactions with react-spring: Part 1</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/16/how-to-create-micro-interactions-with-react-spring-part-1/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14747</post-id>	</item>
		<item>
		<title>Winter persists, but Winter Bash 2019 has drawn to a close!</title>
		<link>https://stackoverflow.blog/2020/01/15/winter-persists-but-winter-bash-2019-has-drawn-to-a-close/</link>
				<comments>https://stackoverflow.blog/2020/01/15/winter-persists-but-winter-bash-2019-has-drawn-to-a-close/#comments</comments>
				<pubDate>Wed, 15 Jan 2020 15:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Cesar Manara]]></dc:creator>
				<category><![CDATA[Announcements]]></category>
		<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Community]]></category>
		<category><![CDATA[hats]]></category>
		<category><![CDATA[winterbash]]></category>

		<guid isPermaLink="false">https://stackoverflow.blog/?p=14666</guid>
				<description><![CDATA[<p>We had a ton of people participate in Winter Bash this year with 266,000 hats awarded throughout the network. Thank you, everyone! We couldn’t have done it without you.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/15/winter-persists-but-winter-bash-2019-has-drawn-to-a-close/">Winter persists, but Winter Bash 2019 has drawn to a close!</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>We had a ton of people participate in Winter Bash this year with 266,000 hats awarded throughout the network. Thank you, everyone! We couldn’t have done it without you.<br></p>



<p>There were 31 hats available this year (well, 32, but one had two versions so we’re saying 31) and no one collected ‘em all. The two users with the most hats across the network collected 30 each. You can check the <a href="https://winterbash2019.stackexchange.com/leaderboard">leaderboard</a> for a full site by site rundown or this round-up for the <a href="https://winterbash2019.stackexchange.com/leaderboard/network">whole network</a>.<br></p>



<p>You all shared some amazing pictures on the <a href="https://meta.stackexchange.com/questions/340171/show-off-your-hats-2019-edition">2019 meta thread</a>, and here are a few that brought us a smile.<br></p>



<p><a href="https://meta.stackexchange.com/users/666625/amy?tab=profile">Amy</a> gave us some warm fuzzies with this:</p>



<figure class="wp-block-image"><img src="https://i.stack.imgur.com/IQ21l.png" alt=""/></figure>



<figure class="wp-block-image"><img src="https://i.stack.imgur.com/zSqy6.png" alt=""/></figure>



<p>Here’s <a href="https://meta.stackexchange.com/users/182734/ankit-sharma">Ankit Sharma</a> showing off a hat that shouldn’t have been awarded at that time! I guess we have seen stranger things, <a href="https://meta.stackexchange.com/questions/340171/show-off-your-hats-2019-edition?page=1&amp;tab=votes#comment1137759_340243">right</a>?<br></p>



<figure class="wp-block-image"><img src="https://i.stack.imgur.com/J3VuS.png" alt=""/></figure>



<p><a href="https://meta.stackexchange.com/users/667990/kyla">Kyla</a>, the Mother of Unicorns:<br></p>



<figure class="wp-block-image"><img src="https://i.stack.imgur.com/QSYBl.png" alt=""/></figure>



<p><a href="https://meta.stackexchange.com/users/366373/hat">Hat</a> with the Wild West look:<br></p>



<figure class="wp-block-image"><img src="https://i.stack.imgur.com/gCH3sm.png" alt=""/></figure>



<p><a href="https://meta.stackexchange.com/users/206319/thelittlenaruto">TheLittle “Agent 007” Naruto</a>:<br></p>



<figure class="wp-block-image"><img src="https://i.stack.imgur.com/HzGWf.png" alt=""/></figure>



<p>We also saw some breathtaking knitting designs that are worthy of a special mention, like <a href="https://i.stack.imgur.com/aUW1M.png">this</a>:</p>



<figure class="wp-block-image"><img src="https://i.stack.imgur.com/aUW1M.png" alt=""/></figure>



<p> by <a href="https://meta.stackexchange.com/a/340003/508266">Eleeza the Character Wizard</a> and <a href="https://i.stack.imgur.com/Xb2n4.png">this</a>:</p>



<figure class="wp-block-image"><img src="https://i.stack.imgur.com/Xb2n4.png" alt=""/></figure>



<p> by <a href="https://meta.stackexchange.com/a/339987/508266">Hitodama</a> (among many others)!&nbsp;&nbsp;<br></p>



<p>Finally, here are a few more hat stats: the first hat awarded was Amazing Grace, and the most awarded hat was Amazing Grace which was awarded 85,423 times to 80,080 distinct users and the least awarded hat was Living in the Future, awarded only 19 times to 19 distinct users. Every hat was awarded at least once!<br></p>



<p>Thank you all for participating! Until next year!<br></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2020/01/15/winter-persists-but-winter-bash-2019-has-drawn-to-a-close/">Winter persists, but Winter Bash 2019 has drawn to a close!</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://stackoverflow.blog/2020/01/15/winter-persists-but-winter-bash-2019-has-drawn-to-a-close/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">14666</post-id>	</item>
	</channel>
</rss>